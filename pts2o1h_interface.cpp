#include "souffle/CompiledSouffle.h"

namespace souffle {
using namespace ram;
class Sf_pts2o1h_interface : public SouffleProgram {
private:
static inline bool regex_wrapper(const char *pattern, const char *text) {
   bool result = false; 
   try { result = std::regex_match(text, std::regex(pattern)); } catch(...) { 
     std::cerr << "warning: wrong pattern provided for match(\"" << pattern << "\",\"" << text << "\")\n";
}
   return result;
}
static inline std::string substr_wrapper(const char *str, size_t idx, size_t len) {
   std::string sub_str, result; 
   try { result = std::string(str).substr(idx,len); } catch(...) { 
     std::cerr << "warning: wrong index position provided by substr(\"";
     std::cerr << str << "\"," << idx << "," << len << ") functor.\n";
   } return result;
}
public:
SymbolTable symTable;
// -- Table: AllConcreteImplementations
ram::Relation<Auto,2, ram::index<1>>* rel_1_AllConcreteImplementations;
// -- Table: AllocatedObjectSupportsFinalize
ram::Relation<Auto,2, ram::index<0>>* rel_2_AllocatedObjectSupportsFinalize;
// -- Table: AllocationShouldBeMergedPerMethod
ram::Relation<Auto,2>* rel_3_AllocationShouldBeMergedPerMethod;
// -- Table: AllocationsPerMethodAndType
ram::Relation<Auto,3>* rel_4_AllocationsPerMethodAndType;
// -- Table: AndroidAppComponent
ram::Relation<Auto,1>* rel_5_AndroidAppComponent;
// -- Table: AndroidApplicationClass
ram::Relation<Auto,1, ram::index<0>>* rel_6_AndroidApplicationClass;
// -- Table: AndroidApplicationListenerClass
ram::Relation<Auto,1>* rel_7_AndroidApplicationListenerClass;
// -- Table: AndroidLibraryListenerType
ram::Relation<Auto,1>* rel_8_AndroidLibraryListenerType;
// -- Table: AndroidLibraryType
ram::Relation<Auto,1, ram::index<0>>* rel_9_AndroidLibraryType;
// -- Table: AppMethodOverridesAndroidLibraryMethod
ram::Relation<Auto,1, ram::index<0>>* rel_10_AppMethodOverridesAndroidLibraryMethod;
// -- Table: ApplicationMethod
ram::Relation<Auto,1, ram::index<0>>* rel_11_ApplicationMethod;
souffle::RelationWrapper<0,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_11_ApplicationMethod;
// -- Table: ApplicationObjectFlowingToLibrary
ram::Relation<Auto,3, ram::index<2,0,1>>* rel_12_ApplicationObjectFlowingToLibrary;
// -- Table: @delta_ApplicationObjectFlowingToLibrary
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_13_delta_ApplicationObjectFlowingToLibrary;
// -- Table: @new_ApplicationObjectFlowingToLibrary
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_14_new_ApplicationObjectFlowingToLibrary;
// -- Table: ApplicationObjectFlowingToLibraryStaticType
ram::Relation<Auto,3, ram::index<2,0,1>>* rel_15_ApplicationObjectFlowingToLibraryStaticType;
// -- Table: @delta_ApplicationObjectFlowingToLibraryStaticType
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_16_delta_ApplicationObjectFlowingToLibraryStaticType;
// -- Table: @new_ApplicationObjectFlowingToLibraryStaticType
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_17_new_ApplicationObjectFlowingToLibraryStaticType;
// -- Table: ApplicationVar
ram::Relation<Auto,1>* rel_18_ApplicationVar;
// -- Table: ArrayIndexPointsTo
ram::Relation<Auto,4, ram::index<3,2,0,1>>* rel_19_ArrayIndexPointsTo;
// -- Table: @delta_ArrayIndexPointsTo
ram::Relation<Auto,4, ram::index<2,3,0,1>>* rel_20_delta_ArrayIndexPointsTo;
// -- Table: @new_ArrayIndexPointsTo
ram::Relation<Auto,4, ram::index<2,3,0,1>>* rel_21_new_ArrayIndexPointsTo;
// -- Table: AssignCast
ram::Relation<Auto,4, ram::index<1>, ram::index<3>>* rel_22_AssignCast;
// -- Table: AssignCastNumConstant_Id
ram::Relation<Auto,2, ram::index<0>>* rel_23_AssignCastNumConstant_Id;
// -- Table: AssignCast_From
ram::Relation<Auto,2, ram::index<0>>* rel_24_AssignCast_From;
// -- Table: AssignCast_Type
ram::Relation<Auto,2, ram::index<0>>* rel_25_AssignCast_Type;
// -- Table: AssignContextInsensitiveHeapAllocation
ram::Relation<Auto,3, ram::index<2>>* rel_26_AssignContextInsensitiveHeapAllocation;
// -- Table: AssignHeapAllocation
ram::Relation<Auto,3, ram::index<2>>* rel_27_AssignHeapAllocation;
// -- Table: AssignHeapAllocation_Heap
ram::Relation<Auto,2, ram::index<0>>* rel_28_AssignHeapAllocation_Heap;
// -- Table: AssignInstruction_To
ram::Relation<Auto,2, ram::index<0>>* rel_29_AssignInstruction_To;
// -- Table: AssignLocal
ram::Relation<Auto,3, ram::index<0>>* rel_30_AssignLocal;
// -- Table: AssignLocal_From
ram::Relation<Auto,2, ram::index<0>>* rel_31_AssignLocal_From;
// -- Table: AssignNormalHeapAllocation
ram::Relation<Auto,3, ram::index<2>>* rel_32_AssignNormalHeapAllocation;
// -- Table: AssignNull
ram::Relation<Auto,2, ram::index<1>>* rel_33_AssignNull;
// -- Table: AssignNumConstant_Id
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_34_AssignNumConstant_Id;
// -- Table: AssignReturnValue
ram::Relation<Auto,2, ram::index<0>>* rel_35_AssignReturnValue;
// -- Table: CallGraphEdge
ram::Relation<Auto,4, ram::index<2,3,0,1>>* rel_36_CallGraphEdge;
souffle::RelationWrapper<1,ram::Relation<Auto,4, ram::index<2,3,0,1>>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_36_CallGraphEdge;
// -- Table: @delta_CallGraphEdge
ram::Relation<Auto,4>* rel_37_delta_CallGraphEdge;
// -- Table: @new_CallGraphEdge
ram::Relation<Auto,4>* rel_38_new_CallGraphEdge;
// -- Table: ClassHasPossibleEntryPoint
ram::Relation<Auto,1>* rel_39_ClassHasPossibleEntryPoint;
// -- Table: ClassInitializer
ram::Relation<Auto,2, ram::index<0>>* rel_40_ClassInitializer;
// -- Table: ClassIsAboveOtherInNamingHierarchy
ram::Relation<Auto,2, ram::index<1>>* rel_41_ClassIsAboveOtherInNamingHierarchy;
// -- Table: ClassNameIndexes
ram::Relation<Auto,2, ram::index<0,1>>* rel_42_ClassNameIndexes;
// -- Table: @delta_ClassNameIndexes
ram::Relation<Auto,2>* rel_43_delta_ClassNameIndexes;
// -- Table: @new_ClassNameIndexes
ram::Relation<Auto,2>* rel_44_new_ClassNameIndexes;
// -- Table: ClassWithTopLevelEntryPoint
ram::Relation<Auto,1, ram::index<0>>* rel_45_ClassWithTopLevelEntryPoint;
// -- Table: CollectionLibraryClass
ram::Relation<Auto,1, ram::index<0>>* rel_46_CollectionLibraryClass;
// -- Table: ConcreteClass
ram::Relation<Auto,1, ram::index<0>>* rel_47_ConcreteClass;
// -- Table: ConcreteImplementations
ram::Relation<Auto,2>* rel_48_ConcreteImplementations;
// -- Table: ConcreteType
ram::Relation<Auto,1, ram::index<0>>* rel_49_ConcreteType;
// -- Table: ContextForEntryPoint
ram::Relation<Auto,2>* rel_50_ContextForEntryPoint;
// -- Table: DotsInClassName
ram::Relation<Auto,2, ram::index<0>>* rel_51_DotsInClassName;
// -- Table: ExceptionHandler_Before
ram::Relation<Auto,2, ram::index<0,1>>* rel_52_ExceptionHandler_Before;
// -- Table: @delta_ExceptionHandler_Before
ram::Relation<Auto,2>* rel_53_delta_ExceptionHandler_Before;
// -- Table: @new_ExceptionHandler_Before
ram::Relation<Auto,2>* rel_54_new_ExceptionHandler_Before;
// -- Table: ExceptionHandler_Begin
ram::Relation<Auto,2, ram::index<0>>* rel_55_ExceptionHandler_Begin;
// -- Table: ExceptionHandler_End
ram::Relation<Auto,2, ram::index<0>>* rel_56_ExceptionHandler_End;
// -- Table: ExceptionHandler_FormalParam
ram::Relation<Auto,2, ram::index<0>>* rel_57_ExceptionHandler_FormalParam;
// -- Table: ExceptionHandler_Impossible
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_58_ExceptionHandler_Impossible;
// -- Table: ExceptionHandler_InRange
ram::Relation<Auto,2, ram::index<1>>* rel_59_ExceptionHandler_InRange;
// -- Table: ExceptionHandler_Index
ram::Relation<Auto,2, ram::index<0,1>>* rel_60_ExceptionHandler_Index;
// -- Table: ExceptionHandler_Method
ram::Relation<Auto,2>* rel_61_ExceptionHandler_Method;
// -- Table: ExceptionHandler_SameBlock_PartialOrder
ram::Relation<Auto,2, ram::index<1>>* rel_62_ExceptionHandler_SameBlock_PartialOrder;
// -- Table: ExceptionHandler_SameBlock_Repr
ram::Relation<Auto,2, ram::index<0>>* rel_63_ExceptionHandler_SameBlock_Repr;
// -- Table: ExceptionHandler_SameInsn_PartialOrder
ram::Relation<Auto,3, ram::index<1,2>>* rel_64_ExceptionHandler_SameInsn_PartialOrder;
// -- Table: ExceptionHandler_SameInsn_Repr
ram::Relation<Auto,2, ram::index<0>>* rel_65_ExceptionHandler_SameInsn_Repr;
// -- Table: ExceptionHandler_Type
ram::Relation<Auto,2, ram::index<0>>* rel_66_ExceptionHandler_Type;
// -- Table: ExceptionHandler_TypeIsCaught
ram::Relation<Auto,2, ram::index<0,1>>* rel_67_ExceptionHandler_TypeIsCaught;
// -- Table: ExceptionHeapTypeRepresentativeOrdinal
ram::Relation<Auto,2>* rel_68_ExceptionHeapTypeRepresentativeOrdinal;
// -- Table: ExceptionType
ram::Relation<Auto,1, ram::index<0>>* rel_69_ExceptionType;
// -- Table: ExceptionTypeToHeap
ram::Relation<Auto,2, ram::index<1>>* rel_70_ExceptionTypeToHeap;
// -- Table: FakeInvocation_RegisterFinalize0
ram::Relation<Auto,2>* rel_71_FakeInvocation_RegisterFinalize0;
// -- Table: FieldInstruction_Signature
ram::Relation<Auto,2, ram::index<0>>* rel_72_FieldInstruction_Signature;
// -- Table: Field_DeclaringType
ram::Relation<Auto,2, ram::index<0>>* rel_73_Field_DeclaringType;
// -- Table: ForcedReachableAndroidContext
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_74_ForcedReachableAndroidContext;
// -- Table: @delta_ForcedReachableAndroidContext
ram::Relation<Auto,2>* rel_75_delta_ForcedReachableAndroidContext;
// -- Table: @new_ForcedReachableAndroidContext
ram::Relation<Auto,2>* rel_76_new_ForcedReachableAndroidContext;
// -- Table: FormalOfForcedReachableContext
ram::Relation<Auto,3, ram::index<2>, ram::index<0,1,2>>* rel_77_FormalOfForcedReachableContext;
// -- Table: @delta_FormalOfForcedReachableContext
ram::Relation<Auto,3>* rel_78_delta_FormalOfForcedReachableContext;
// -- Table: @new_FormalOfForcedReachableContext
ram::Relation<Auto,3>* rel_79_new_FormalOfForcedReachableContext;
// -- Table: FormalsForEntryPoints
ram::Relation<Auto,2>* rel_80_FormalsForEntryPoints;
// -- Table: HContextForEntryPoint
ram::Relation<Auto,2, ram::index<1>>* rel_81_HContextForEntryPoint;
// -- Table: HeapAllocation_ContextInsensitive
ram::Relation<Auto,1, ram::index<0>>* rel_82_HeapAllocation_ContextInsensitive;
// -- Table: HeapAllocation_Keep
ram::Relation<Auto,1, ram::index<0>>* rel_83_HeapAllocation_Keep;
// -- Table: HeapAllocation_Merge
ram::Relation<Auto,2, ram::index<0,1>>* rel_84_HeapAllocation_Merge;
// -- Table: HeapAllocation_Null
ram::Relation<Auto,1, ram::index<0>>* rel_85_HeapAllocation_Null;
// -- Table: HeapAllocation_Special
ram::Relation<Auto,1, ram::index<0>>* rel_86_HeapAllocation_Special;
// -- Table: HeapAllocation_Type
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_87_HeapAllocation_Type;
// -- Table: HeapIsMergedString
ram::Relation<Auto,1, ram::index<0>>* rel_88_HeapIsMergedString;
// -- Table: HeapIsMergedStringFactory
ram::Relation<Auto,1, ram::index<0>>* rel_89_HeapIsMergedStringFactory;
// -- Table: HeapRepresentative
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_90_HeapRepresentative;
// -- Table: ImmutableContextFromContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_91_ImmutableContextFromContext;
// -- Table: @delta_ImmutableContextFromContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_92_delta_ImmutableContextFromContext;
// -- Table: @new_ImmutableContextFromContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_93_new_ImmutableContextFromContext;
// -- Table: ImmutableContextFromHContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_94_ImmutableContextFromHContext;
// -- Table: @delta_ImmutableContextFromHContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_95_delta_ImmutableContextFromHContext;
// -- Table: @new_ImmutableContextFromHContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_96_new_ImmutableContextFromHContext;
// -- Table: ImmutableHContextFromContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_97_ImmutableHContextFromContext;
// -- Table: @delta_ImmutableHContextFromContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_98_delta_ImmutableHContextFromContext;
// -- Table: @new_ImmutableHContextFromContext
ram::Relation<Auto,2, ram::index<0,1>>* rel_99_new_ImmutableHContextFromContext;
// -- Table: ImplicitReachable
ram::Relation<Auto,1>* rel_100_ImplicitReachable;
// -- Table: ImplicitlyInstantiatedLibraryType
ram::Relation<Auto,1>* rel_101_ImplicitlyInstantiatedLibraryType;
// -- Table: InitializedClass
ram::Relation<Auto,1, ram::index<0>>* rel_102_InitializedClass;
// -- Table: @delta_InitializedClass
ram::Relation<Auto,1>* rel_103_delta_InitializedClass;
// -- Table: @new_InitializedClass
ram::Relation<Auto,1>* rel_104_new_InitializedClass;
// -- Table: InstanceFieldPointsTo
ram::Relation<Auto,5, ram::index<4,2,3,0,1>>* rel_105_InstanceFieldPointsTo;
// -- Table: @delta_InstanceFieldPointsTo
ram::Relation<Auto,5, ram::index<0,1,2,3,4>>* rel_106_delta_InstanceFieldPointsTo;
// -- Table: @new_InstanceFieldPointsTo
ram::Relation<Auto,5, ram::index<0,1,2,3,4>>* rel_107_new_InstanceFieldPointsTo;
// -- Table: Instruction_Index
ram::Relation<Auto,2, ram::index<0>>* rel_108_Instruction_Index;
// -- Table: Instruction_Method
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_109_Instruction_Method;
// -- Table: @delta_Instruction_Method
ram::Relation<Auto,2, ram::index<0>>* rel_110_delta_Instruction_Method;
// -- Table: @new_Instruction_Method
ram::Relation<Auto,2, ram::index<0>>* rel_111_new_Instruction_Method;
// -- Table: Instruction_Throws
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_112_Instruction_Throws;
// -- Table: @delta_Instruction_Throws
ram::Relation<Auto,4>* rel_113_delta_Instruction_Throws;
// -- Table: @new_Instruction_Throws
ram::Relation<Auto,4>* rel_114_new_Instruction_Throws;
// -- Table: LastDot
ram::Relation<Auto,2, ram::index<0>>* rel_115_LastDot;
// -- Table: LayoutControl
ram::Relation<Auto,3, ram::index<1>>* rel_116_LayoutControl;
// -- Table: LibraryReachableAppListenerType
ram::Relation<Auto,1, ram::index<0>>* rel_117_LibraryReachableAppListenerType;
// -- Table: @delta_LibraryReachableAppListenerType
ram::Relation<Auto,1, ram::index<0>>* rel_118_delta_LibraryReachableAppListenerType;
// -- Table: @new_LibraryReachableAppListenerType
ram::Relation<Auto,1, ram::index<0>>* rel_119_new_LibraryReachableAppListenerType;
// -- Table: ListenerType
ram::Relation<Auto,1, ram::index<0>>* rel_120_ListenerType;
// -- Table: LoadArrayIndex
ram::Relation<Auto,3, ram::index<2>>* rel_121_LoadArrayIndex;
// -- Table: LoadArrayIndex_Base
ram::Relation<Auto,2, ram::index<0>>* rel_122_LoadArrayIndex_Base;
// -- Table: LoadArrayIndex_To
ram::Relation<Auto,2, ram::index<0>>* rel_123_LoadArrayIndex_To;
// -- Table: LoadHeapArrayIndex
ram::Relation<Auto,4, ram::index<1,3,0,2>>* rel_124_LoadHeapArrayIndex;
// -- Table: @delta_LoadHeapArrayIndex
ram::Relation<Auto,4, ram::index<1,3,0,2>>* rel_125_delta_LoadHeapArrayIndex;
// -- Table: @new_LoadHeapArrayIndex
ram::Relation<Auto,4, ram::index<1,3,0,2>>* rel_126_new_LoadHeapArrayIndex;
// -- Table: LoadHeapInstanceField
ram::Relation<Auto,5, ram::index<2,3,4,0,1>>* rel_127_LoadHeapInstanceField;
// -- Table: @delta_LoadHeapInstanceField
ram::Relation<Auto,5>* rel_128_delta_LoadHeapInstanceField;
// -- Table: @new_LoadHeapInstanceField
ram::Relation<Auto,5>* rel_129_new_LoadHeapInstanceField;
// -- Table: LoadInstanceField
ram::Relation<Auto,4>* rel_130_LoadInstanceField;
// -- Table: LoadInstanceField_Base
ram::Relation<Auto,2, ram::index<0>>* rel_131_LoadInstanceField_Base;
// -- Table: LoadInstanceField_To
ram::Relation<Auto,2, ram::index<0>>* rel_132_LoadInstanceField_To;
// -- Table: LoadStaticField
ram::Relation<Auto,3, ram::index<0>, ram::index<2>>* rel_133_LoadStaticField;
// -- Table: LoadStaticField_To
ram::Relation<Auto,2, ram::index<0>>* rel_134_LoadStaticField_To;
// -- Table: MainClass
ram::Relation<Auto,1>* rel_135_MainClass;
// -- Table: MainMethodArgArray
ram::Relation<Auto,1>* rel_136_MainMethodArgArray;
// -- Table: MainMethodArgArrayContent
ram::Relation<Auto,1>* rel_137_MainMethodArgArrayContent;
// -- Table: MainMethodDeclaration
ram::Relation<Auto,1>* rel_138_MainMethodDeclaration;
// -- Table: MainThread
ram::Relation<Auto,2>* rel_139_MainThread;
// -- Table: MainThreadGroup
ram::Relation<Auto,2>* rel_140_MainThreadGroup;
// -- Table: MethodAllocationMergeThreshold
ram::Relation<Auto,1>* rel_141_MethodAllocationMergeThreshold;
// -- Table: MethodAndTypeToHeap
ram::Relation<Auto,3, ram::index<1,2>>* rel_142_MethodAndTypeToHeap;
// -- Table: MethodAndTypeToMergedHeap
ram::Relation<Auto,3, ram::index<1,2>>* rel_143_MethodAndTypeToMergedHeap;
// -- Table: MethodAndTypeToRepresentative
ram::Relation<Auto,3>* rel_144_MethodAndTypeToRepresentative;
// -- Table: MethodDeclaredOrInherited
ram::Relation<Auto,2, ram::index<1,0>>* rel_145_MethodDeclaredOrInherited;
// -- Table: @delta_MethodDeclaredOrInherited
ram::Relation<Auto,2>* rel_146_delta_MethodDeclaredOrInherited;
// -- Table: @new_MethodDeclaredOrInherited
ram::Relation<Auto,2>* rel_147_new_MethodDeclaredOrInherited;
// -- Table: MethodImplemented
ram::Relation<Auto,4, ram::index<2>, ram::index<0,1,2>>* rel_148_MethodImplemented;
// -- Table: MethodInvocation_Method
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_149_MethodInvocation_Method;
// -- Table: MethodLookup
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_150_MethodLookup;
// -- Table: @delta_MethodLookup
ram::Relation<Auto,4, ram::index<2>>* rel_151_delta_MethodLookup;
// -- Table: @new_MethodLookup
ram::Relation<Auto,4, ram::index<2>>* rel_152_new_MethodLookup;
// -- Table: Method_DeclaringType
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_153_Method_DeclaringType;
// -- Table: Method_Descriptor
ram::Relation<Auto,2, ram::index<0,1>>* rel_154_Method_Descriptor;
// -- Table: Method_ReturnType
ram::Relation<Auto,2, ram::index<0,1>>* rel_155_Method_ReturnType;
// -- Table: Method_SimpleName
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_156_Method_SimpleName;
// -- Table: MinHeapOrdinalPerMethodAndType
ram::Relation<Auto,3, ram::index<0>>* rel_157_MinHeapOrdinalPerMethodAndType;
// -- Table: MinRepresentativeHeapToPickFromOrdinal
ram::Relation<Auto,2, ram::index<0>>* rel_158_MinRepresentativeHeapToPickFromOrdinal;
// -- Table: MockForFormal
ram::Relation<Auto,4, ram::index<3>>* rel_159_MockForFormal;
// -- Table: MockObject
ram::Relation<Auto,2, ram::index<1>>* rel_160_MockObject;
// -- Table: MockObjectContext
ram::Relation<Auto,3>* rel_161_MockObjectContext;
// -- Table: MockObjectForComponentType
ram::Relation<Auto,2, ram::index<1>>* rel_162_MockObjectForComponentType;
// -- Table: MockObjectForType
ram::Relation<Auto,2, ram::index<1>>* rel_163_MockObjectForType;
// -- Table: NotEmptyArrayValue
ram::Relation<Auto,1, ram::index<0>>* rel_164_NotEmptyArrayValue;
// -- Table: NotLastDot
ram::Relation<Auto,2, ram::index<0,1>>* rel_165_NotLastDot;
// -- Table: NotSpecialObject
ram::Relation<Auto,1, ram::index<0>>* rel_166_NotSpecialObject;
// -- Table: ObjToMock
ram::Relation<Auto,1, ram::index<0>>* rel_167_ObjToMock;
// -- Table: @delta_ObjToMock
ram::Relation<Auto,1>* rel_168_delta_ObjToMock;
// -- Table: @new_ObjToMock
ram::Relation<Auto,1>* rel_169_new_ObjToMock;
// -- Table: ObjectMultipleAllocated
ram::Relation<Auto,1, ram::index<0>>* rel_170_ObjectMultipleAllocated;
// -- Table: ObjectShouldNotBeRefined
ram::Relation<Auto,1, ram::index<0>>* rel_171_ObjectShouldNotBeRefined;
// -- Table: OptAssignCast
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_172_OptAssignCast;
// -- Table: @delta_OptAssignCast
ram::Relation<Auto,3>* rel_173_delta_OptAssignCast;
// -- Table: @new_OptAssignCast
ram::Relation<Auto,3>* rel_174_new_OptAssignCast;
// -- Table: OptAssignHeapAllocation
ram::Relation<Auto,2, ram::index<1>>* rel_175_OptAssignHeapAllocation;
// -- Table: OptForNameInvocation
ram::Relation<Auto,2>* rel_176_OptForNameInvocation;
// -- Table: OptInterproceduralAssign
ram::Relation<Auto,4, ram::index<2,3,0,1>>* rel_177_OptInterproceduralAssign;
// -- Table: @delta_OptInterproceduralAssign
ram::Relation<Auto,4>* rel_178_delta_OptInterproceduralAssign;
// -- Table: @new_OptInterproceduralAssign
ram::Relation<Auto,4>* rel_179_new_OptInterproceduralAssign;
// -- Table: OptLoadArrayIndex
ram::Relation<Auto,2, ram::index<1>>* rel_180_OptLoadArrayIndex;
// -- Table: OptLoadHeapArrayIndex
ram::Relation<Auto,2, ram::index<0,1>>* rel_181_OptLoadHeapArrayIndex;
// -- Table: @delta_OptLoadHeapArrayIndex
ram::Relation<Auto,2, ram::index<1>>* rel_182_delta_OptLoadHeapArrayIndex;
// -- Table: @new_OptLoadHeapArrayIndex
ram::Relation<Auto,2, ram::index<1>>* rel_183_new_OptLoadHeapArrayIndex;
// -- Table: OptSpecialMethodInvocationBase
ram::Relation<Auto,2, ram::index<0,1>>* rel_184_OptSpecialMethodInvocationBase;
// -- Table: @delta_OptSpecialMethodInvocationBase
ram::Relation<Auto,2>* rel_185_delta_OptSpecialMethodInvocationBase;
// -- Table: @new_OptSpecialMethodInvocationBase
ram::Relation<Auto,2>* rel_186_new_OptSpecialMethodInvocationBase;
// -- Table: OptStoreArrayIndex
ram::Relation<Auto,2, ram::index<1>>* rel_187_OptStoreArrayIndex;
// -- Table: OptStoreIntoArray
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_188_OptStoreIntoArray;
// -- Table: @delta_OptStoreIntoArray
ram::Relation<Auto,4>* rel_189_delta_OptStoreIntoArray;
// -- Table: @new_OptStoreIntoArray
ram::Relation<Auto,4>* rel_190_new_OptStoreIntoArray;
// -- Table: OptVirtualMethodInvocationBase
ram::Relation<Auto,2, ram::index<0,1>>* rel_191_OptVirtualMethodInvocationBase;
souffle::RelationWrapper<2,ram::Relation<Auto,2, ram::index<0,1>>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_191_OptVirtualMethodInvocationBase;
// -- Table: @delta_OptVirtualMethodInvocationBase
ram::Relation<Auto,2>* rel_192_delta_OptVirtualMethodInvocationBase;
// -- Table: @new_OptVirtualMethodInvocationBase
ram::Relation<Auto,2>* rel_193_new_OptVirtualMethodInvocationBase;
// -- Table: OverridesFinalize
ram::Relation<Auto,1, ram::index<0>>* rel_194_OverridesFinalize;
// -- Table: OverridingProtectedMethodOfComponent
ram::Relation<Auto,1>* rel_195_OverridingProtectedMethodOfComponent;
// -- Table: OverridingProtectedOnMethodOfLayoutControl
ram::Relation<Auto,1>* rel_196_OverridingProtectedOnMethodOfLayoutControl;
// -- Table: OverridingProtectedOnMethodOfReachableListener
ram::Relation<Auto,1, ram::index<0>>* rel_197_OverridingProtectedOnMethodOfReachableListener;
// -- Table: @delta_OverridingProtectedOnMethodOfReachableListener
ram::Relation<Auto,1>* rel_198_delta_OverridingProtectedOnMethodOfReachableListener;
// -- Table: @new_OverridingProtectedOnMethodOfReachableListener
ram::Relation<Auto,1>* rel_199_new_OverridingProtectedOnMethodOfReachableListener;
// -- Table: PossibleEntryPoint
ram::Relation<Auto,1>* rel_200_PossibleEntryPoint;
// -- Table: PrefixAbove
ram::Relation<Auto,3>* rel_201_PrefixAbove;
// -- Table: PrefixBelow
ram::Relation<Auto,2>* rel_202_PrefixBelow;
// -- Table: ProtectedMethodOfComponent
ram::Relation<Auto,1>* rel_203_ProtectedMethodOfComponent;
// -- Table: ProtectedOnMethodOfLayoutControl
ram::Relation<Auto,1>* rel_204_ProtectedOnMethodOfLayoutControl;
// -- Table: ProtectedOnMethodOfReachableListener
ram::Relation<Auto,1, ram::index<0>>* rel_205_ProtectedOnMethodOfReachableListener;
// -- Table: @delta_ProtectedOnMethodOfReachableListener
ram::Relation<Auto,1>* rel_206_delta_ProtectedOnMethodOfReachableListener;
// -- Table: @new_ProtectedOnMethodOfReachableListener
ram::Relation<Auto,1>* rel_207_new_ProtectedOnMethodOfReachableListener;
// -- Table: PublicMethodOfComponent
ram::Relation<Auto,1>* rel_208_PublicMethodOfComponent;
// -- Table: PublicOnMethodOfLayoutControl
ram::Relation<Auto,1>* rel_209_PublicOnMethodOfLayoutControl;
// -- Table: PublicOnMethodOfReachableListener
ram::Relation<Auto,1, ram::index<0>>* rel_210_PublicOnMethodOfReachableListener;
// -- Table: @delta_PublicOnMethodOfReachableListener
ram::Relation<Auto,1>* rel_211_delta_PublicOnMethodOfReachableListener;
// -- Table: @new_PublicOnMethodOfReachableListener
ram::Relation<Auto,1>* rel_212_new_PublicOnMethodOfReachableListener;
// -- Table: Reachable
ram::Relation<Auto,1, ram::index<0>>* rel_213_Reachable;
souffle::RelationWrapper<3,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_213_Reachable;
// -- Table: @delta_Reachable
ram::Relation<Auto,1>* rel_214_delta_Reachable;
// -- Table: @new_Reachable
ram::Relation<Auto,1>* rel_215_new_Reachable;
// -- Table: ReachableApplicationObjectOfType
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_216_ReachableApplicationObjectOfType;
// -- Table: @delta_ReachableApplicationObjectOfType
ram::Relation<Auto,3>* rel_217_delta_ReachableApplicationObjectOfType;
// -- Table: @new_ReachableApplicationObjectOfType
ram::Relation<Auto,3>* rel_218_new_ReachableApplicationObjectOfType;
// -- Table: ReachableContext
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_219_ReachableContext;
// -- Table: @delta_ReachableContext
ram::Relation<Auto,2, ram::index<1,0>>* rel_220_delta_ReachableContext;
// -- Table: @new_ReachableContext
ram::Relation<Auto,2, ram::index<1,0>>* rel_221_new_ReachableContext;
// -- Table: ReachableCurrentThreadInvocation
ram::Relation<Auto,2, ram::index<0,1>>* rel_222_ReachableCurrentThreadInvocation;
// -- Table: @delta_ReachableCurrentThreadInvocation
ram::Relation<Auto,2>* rel_223_delta_ReachableCurrentThreadInvocation;
// -- Table: @new_ReachableCurrentThreadInvocation
ram::Relation<Auto,2>* rel_224_new_ReachableCurrentThreadInvocation;
// -- Table: ReachableLoadArrayIndexBase
ram::Relation<Auto,1, ram::index<0>>* rel_225_ReachableLoadArrayIndexBase;
// -- Table: @delta_ReachableLoadArrayIndexBase
ram::Relation<Auto,1>* rel_226_delta_ReachableLoadArrayIndexBase;
// -- Table: @new_ReachableLoadArrayIndexBase
ram::Relation<Auto,1>* rel_227_new_ReachableLoadArrayIndexBase;
// -- Table: ReachableStoreArrayIndexBase
ram::Relation<Auto,1, ram::index<0>>* rel_228_ReachableStoreArrayIndexBase;
// -- Table: @delta_ReachableStoreArrayIndexBase
ram::Relation<Auto,1>* rel_229_delta_ReachableStoreArrayIndexBase;
// -- Table: @new_ReachableStoreArrayIndexBase
ram::Relation<Auto,1>* rel_230_new_ReachableStoreArrayIndexBase;
// -- Table: ReachableStoreStaticFieldFrom
ram::Relation<Auto,1, ram::index<0>>* rel_231_ReachableStoreStaticFieldFrom;
// -- Table: @delta_ReachableStoreStaticFieldFrom
ram::Relation<Auto,1>* rel_232_delta_ReachableStoreStaticFieldFrom;
// -- Table: @new_ReachableStoreStaticFieldFrom
ram::Relation<Auto,1>* rel_233_new_ReachableStoreStaticFieldFrom;
// -- Table: ReceiverPointsTo
ram::Relation<Auto,5>* rel_234_ReceiverPointsTo;
// -- Table: ReifiedAndroidObjectValue
ram::Relation<Auto,2, ram::index<1>>* rel_235_ReifiedAndroidObjectValue;
// -- Table: ReifiedComponent
ram::Relation<Auto,2>* rel_236_ReifiedComponent;
// -- Table: ReifiedLayoutControl
ram::Relation<Auto,3, ram::index<0,1>>* rel_237_ReifiedLayoutControl;
// -- Table: ReifiedLibraryObject
ram::Relation<Auto,2>* rel_238_ReifiedLibraryObject;
// -- Table: RepresentativesToPickFrom
ram::Relation<Auto,2, ram::index<1>>* rel_239_RepresentativesToPickFrom;
// -- Table: ResolveInvocation
ram::Relation<Auto,3, ram::index<0,1>>* rel_240_ResolveInvocation;
// -- Table: ReturnNonvoid_Var
ram::Relation<Auto,2, ram::index<0>>* rel_241_ReturnNonvoid_Var;
// -- Table: ReturnVar
ram::Relation<Auto,2, ram::index<1,0>>* rel_242_ReturnVar;
// -- Table: @delta_ReturnVar
ram::Relation<Auto,2, ram::index<1>>* rel_243_delta_ReturnVar;
// -- Table: @new_ReturnVar
ram::Relation<Auto,2, ram::index<1>>* rel_244_new_ReturnVar;
// -- Table: RunningThread
ram::Relation<Auto,2, ram::index<0,1>>* rel_245_RunningThread;
// -- Table: @delta_RunningThread
ram::Relation<Auto,2, ram::index<0,1>>* rel_246_delta_RunningThread;
// -- Table: @new_RunningThread
ram::Relation<Auto,2, ram::index<0,1>>* rel_247_new_RunningThread;
// -- Table: SiteShouldNotBeRefined
ram::Relation<Auto,1, ram::index<0>>* rel_248_SiteShouldNotBeRefined;
// -- Table: SpecialLibraryClass
ram::Relation<Auto,1, ram::index<0>>* rel_249_SpecialLibraryClass;
// -- Table: SpecialLibraryMethod
ram::Relation<Auto,1, ram::index<0>>* rel_250_SpecialLibraryMethod;
// -- Table: SpecialLibraryObject
ram::Relation<Auto,1>* rel_251_SpecialLibraryObject;
// -- Table: SpecialMethodInvocation_Base
ram::Relation<Auto,2, ram::index<0>>* rel_252_SpecialMethodInvocation_Base;
// -- Table: StaticFieldPointsTo
ram::Relation<Auto,3, ram::index<2,0,1>>* rel_253_StaticFieldPointsTo;
// -- Table: @delta_StaticFieldPointsTo
ram::Relation<Auto,3>* rel_254_delta_StaticFieldPointsTo;
// -- Table: @new_StaticFieldPointsTo
ram::Relation<Auto,3>* rel_255_new_StaticFieldPointsTo;
// -- Table: StaticMethodInvocation
ram::Relation<Auto,3, ram::index<1>, ram::index<2>>* rel_256_StaticMethodInvocation;
// -- Table: StaticToActualType
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_257_StaticToActualType;
// -- Table: Stats_Metrics
ram::Relation<Auto,3>* rel_258_Stats_Metrics;
souffle::RelationWrapper<4,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,false,true> wrapper_rel_258_Stats_Metrics;
// -- Table: Stats_Simple_ApplicationConcreteMethod
ram::Relation<Auto,1>* rel_259_Stats_Simple_ApplicationConcreteMethod;
souffle::RelationWrapper<5,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_259_Stats_Simple_ApplicationConcreteMethod;
// -- Table: Stats_Simple_Application_ArrayIndexPointsTo
ram::Relation<Auto,4>* rel_260_Stats_Simple_Application_ArrayIndexPointsTo;
souffle::RelationWrapper<6,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_260_Stats_Simple_Application_ArrayIndexPointsTo;
// -- Table: Stats_Simple_Application_Cast
ram::Relation<Auto,4>* rel_261_Stats_Simple_Application_Cast;
souffle::RelationWrapper<7,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_261_Stats_Simple_Application_Cast;
// -- Table: Stats_Simple_Application_EmptyVirtualMethodInvocation
ram::Relation<Auto,1>* rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation;
souffle::RelationWrapper<8,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation;
// -- Table: Stats_Simple_Application_InsensArrayIndexPointsTo
ram::Relation<Auto,2>* rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo;
souffle::RelationWrapper<9,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo;
// -- Table: Stats_Simple_Application_InsensInstanceFieldPointsTo
ram::Relation<Auto,3>* rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo;
souffle::RelationWrapper<10,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,false,true> wrapper_rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo;
// -- Table: Stats_Simple_Application_InsensVarPointsTo
ram::Relation<Auto,2>* rel_265_Stats_Simple_Application_InsensVarPointsTo;
souffle::RelationWrapper<11,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_265_Stats_Simple_Application_InsensVarPointsTo;
// -- Table: Stats_Simple_Application_InstanceFieldPointsTo
ram::Relation<Auto,5>* rel_266_Stats_Simple_Application_InstanceFieldPointsTo;
souffle::RelationWrapper<12,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,false,true> wrapper_rel_266_Stats_Simple_Application_InstanceFieldPointsTo;
// -- Table: Stats_Simple_Application_NullVirtualMethodInvocation
ram::Relation<Auto,1>* rel_267_Stats_Simple_Application_NullVirtualMethodInvocation;
souffle::RelationWrapper<13,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_267_Stats_Simple_Application_NullVirtualMethodInvocation;
// -- Table: Stats_Simple_Application_PolymorphicCallSite
ram::Relation<Auto,1>* rel_268_Stats_Simple_Application_PolymorphicCallSite;
souffle::RelationWrapper<14,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_268_Stats_Simple_Application_PolymorphicCallSite;
// -- Table: Stats_Simple_Application_PotentiallyFailingCast
ram::Relation<Auto,3>* rel_269_Stats_Simple_Application_PotentiallyFailingCast;
souffle::RelationWrapper<15,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,false,true> wrapper_rel_269_Stats_Simple_Application_PotentiallyFailingCast;
// -- Table: Stats_Simple_Application_ReachableCast
ram::Relation<Auto,4>* rel_270_Stats_Simple_Application_ReachableCast;
souffle::RelationWrapper<16,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_270_Stats_Simple_Application_ReachableCast;
// -- Table: Stats_Simple_Application_ReachableMethod
ram::Relation<Auto,1>* rel_271_Stats_Simple_Application_ReachableMethod;
souffle::RelationWrapper<17,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_271_Stats_Simple_Application_ReachableMethod;
// -- Table: Stats_Simple_Application_ReachableVirtualMethodInvocation
ram::Relation<Auto,1, ram::index<0>>* rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation;
souffle::RelationWrapper<18,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation;
// -- Table: Stats_Simple_Application_VarPointsTo
ram::Relation<Auto,4>* rel_273_Stats_Simple_Application_VarPointsTo;
souffle::RelationWrapper<19,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_273_Stats_Simple_Application_VarPointsTo;
// -- Table: Stats_Simple_Application_VirtualMethodInvocation
ram::Relation<Auto,1>* rel_274_Stats_Simple_Application_VirtualMethodInvocation;
souffle::RelationWrapper<20,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_274_Stats_Simple_Application_VirtualMethodInvocation;
// -- Table: Stats_Simple_AssignedVariable
ram::Relation<Auto,1>* rel_275_Stats_Simple_AssignedVariable;
souffle::RelationWrapper<21,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_275_Stats_Simple_AssignedVariable;
// -- Table: Stats_Simple_EmptyVirtualMethodInvocation
ram::Relation<Auto,1>* rel_276_Stats_Simple_EmptyVirtualMethodInvocation;
souffle::RelationWrapper<22,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_276_Stats_Simple_EmptyVirtualMethodInvocation;
// -- Table: Stats_Simple_InsensArrayIndexPointsTo
ram::Relation<Auto,2>* rel_277_Stats_Simple_InsensArrayIndexPointsTo;
souffle::RelationWrapper<23,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_277_Stats_Simple_InsensArrayIndexPointsTo;
// -- Table: Stats_Simple_InsensCallGraphEdge
ram::Relation<Auto,2, ram::index<0>>* rel_278_Stats_Simple_InsensCallGraphEdge;
souffle::RelationWrapper<24,ram::Relation<Auto,2, ram::index<0>>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_278_Stats_Simple_InsensCallGraphEdge;
// -- Table: Stats_Simple_InsensInstanceFieldPointsTo
ram::Relation<Auto,3>* rel_279_Stats_Simple_InsensInstanceFieldPointsTo;
souffle::RelationWrapper<25,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,false,true> wrapper_rel_279_Stats_Simple_InsensInstanceFieldPointsTo;
// -- Table: Stats_Simple_InsensReachableApplicationMethod
ram::Relation<Auto,1, ram::index<0>>* rel_280_Stats_Simple_InsensReachableApplicationMethod;
souffle::RelationWrapper<26,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_280_Stats_Simple_InsensReachableApplicationMethod;
// -- Table: Stats_Simple_InsensReachableVar
ram::Relation<Auto,1>* rel_281_Stats_Simple_InsensReachableVar;
souffle::RelationWrapper<27,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_281_Stats_Simple_InsensReachableVar;
// -- Table: Stats_Simple_InsensStaticFieldPointsTo
ram::Relation<Auto,2>* rel_282_Stats_Simple_InsensStaticFieldPointsTo;
souffle::RelationWrapper<28,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_282_Stats_Simple_InsensStaticFieldPointsTo;
// -- Table: Stats_Simple_InsensVarPointsTo
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_283_Stats_Simple_InsensVarPointsTo;
souffle::RelationWrapper<29,ram::Relation<Auto,2, ram::index<0>, ram::index<1>>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_283_Stats_Simple_InsensVarPointsTo;
// -- Table: Stats_Simple_NonReachableApplicationConcreteMethod
ram::Relation<Auto,1>* rel_284_Stats_Simple_NonReachableApplicationConcreteMethod;
souffle::RelationWrapper<30,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_284_Stats_Simple_NonReachableApplicationConcreteMethod;
// -- Table: Stats_Simple_NullVirtualMethodInvocation
ram::Relation<Auto,1>* rel_285_Stats_Simple_NullVirtualMethodInvocation;
souffle::RelationWrapper<31,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_285_Stats_Simple_NullVirtualMethodInvocation;
// -- Table: Stats_Simple_PolymorphicCallSite
ram::Relation<Auto,1>* rel_286_Stats_Simple_PolymorphicCallSite;
souffle::RelationWrapper<32,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_286_Stats_Simple_PolymorphicCallSite;
// -- Table: Stats_Simple_PotentiallyFailingCast
ram::Relation<Auto,3>* rel_287_Stats_Simple_PotentiallyFailingCast;
souffle::RelationWrapper<33,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,false,true> wrapper_rel_287_Stats_Simple_PotentiallyFailingCast;
// -- Table: Stats_Simple_ReachableApplicationMethod
ram::Relation<Auto,2>* rel_288_Stats_Simple_ReachableApplicationMethod;
souffle::RelationWrapper<34,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_288_Stats_Simple_ReachableApplicationMethod;
// -- Table: Stats_Simple_ReachableCast
ram::Relation<Auto,4, ram::index<0>>* rel_289_Stats_Simple_ReachableCast;
souffle::RelationWrapper<35,ram::Relation<Auto,4, ram::index<0>>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_289_Stats_Simple_ReachableCast;
// -- Table: Stats_Simple_ReachableVar
ram::Relation<Auto,2>* rel_290_Stats_Simple_ReachableVar;
souffle::RelationWrapper<36,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_290_Stats_Simple_ReachableVar;
// -- Table: Stats_Simple_ReachableVirtualMethodInvocation
ram::Relation<Auto,1, ram::index<0>>* rel_291_Stats_Simple_ReachableVirtualMethodInvocation;
souffle::RelationWrapper<37,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,false,true> wrapper_rel_291_Stats_Simple_ReachableVirtualMethodInvocation;
// -- Table: Stats_Simple_VirtualCallGraphEdge
ram::Relation<Auto,2, ram::index<0>>* rel_292_Stats_Simple_VirtualCallGraphEdge;
souffle::RelationWrapper<38,ram::Relation<Auto,2, ram::index<0>>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_292_Stats_Simple_VirtualCallGraphEdge;
// -- Table: Stats_Simple_VirtualTargets
ram::Relation<Auto,2>* rel_293_Stats_Simple_VirtualTargets;
// -- Table: StoreArrayIndex
ram::Relation<Auto,3, ram::index<2>>* rel_294_StoreArrayIndex;
// -- Table: StoreArrayIndex_Base
ram::Relation<Auto,2, ram::index<0>>* rel_295_StoreArrayIndex_Base;
// -- Table: StoreArrayIndex_From
ram::Relation<Auto,2, ram::index<0>>* rel_296_StoreArrayIndex_From;
// -- Table: StoreHeapArrayIndex
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_297_StoreHeapArrayIndex;
// -- Table: @delta_StoreHeapArrayIndex
ram::Relation<Auto,4>* rel_298_delta_StoreHeapArrayIndex;
// -- Table: @new_StoreHeapArrayIndex
ram::Relation<Auto,4>* rel_299_new_StoreHeapArrayIndex;
// -- Table: StoreHeapInstanceField
ram::Relation<Auto,5, ram::index<3,4,0,1,2>>* rel_300_StoreHeapInstanceField;
// -- Table: @delta_StoreHeapInstanceField
ram::Relation<Auto,5>* rel_301_delta_StoreHeapInstanceField;
// -- Table: @new_StoreHeapInstanceField
ram::Relation<Auto,5>* rel_302_new_StoreHeapInstanceField;
// -- Table: StoreInstanceField
ram::Relation<Auto,4>* rel_303_StoreInstanceField;
// -- Table: StoreInstanceField_Base
ram::Relation<Auto,2, ram::index<0>>* rel_304_StoreInstanceField_Base;
// -- Table: StoreInstanceField_From
ram::Relation<Auto,2, ram::index<0>>* rel_305_StoreInstanceField_From;
// -- Table: StoreStaticField
ram::Relation<Auto,3, ram::index<0>, ram::index<2>>* rel_306_StoreStaticField;
// -- Table: StoreStaticField_From
ram::Relation<Auto,2, ram::index<0>>* rel_307_StoreStaticField_From;
// -- Table: StringFactoryHeap
ram::Relation<Auto,1, ram::index<0>>* rel_308_StringFactoryHeap;
// -- Table: StringFactoryType
ram::Relation<Auto,1, ram::index<0>>* rel_309_StringFactoryType;
// -- Table: Subclass
ram::Relation<Auto,2, ram::index<0,1>>* rel_310_Subclass;
// -- Table: @delta_Subclass
ram::Relation<Auto,2>* rel_311_delta_Subclass;
// -- Table: @new_Subclass
ram::Relation<Auto,2>* rel_312_new_Subclass;
// -- Table: SubtypeOf
ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>* rel_313_SubtypeOf;
// -- Table: @delta_SubtypeOf
ram::Relation<Auto,2, ram::index<0,1>>* rel_314_delta_SubtypeOf;
// -- Table: @new_SubtypeOf
ram::Relation<Auto,2, ram::index<0,1>>* rel_315_new_SubtypeOf;
// -- Table: Superinterface
ram::Relation<Auto,2, ram::index<1,0>>* rel_316_Superinterface;
// -- Table: @delta_Superinterface
ram::Relation<Auto,2, ram::index<1>>* rel_317_delta_Superinterface;
// -- Table: @new_Superinterface
ram::Relation<Auto,2, ram::index<1>>* rel_318_new_Superinterface;
// -- Table: SupertypeOf
ram::Relation<Auto,2, ram::index<1,0>>* rel_319_SupertypeOf;
// -- Table: SystemThreadGroup
ram::Relation<Auto,2>* rel_320_SystemThreadGroup;
// -- Table: TamiflexCallGraphEdge
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_321_TamiflexCallGraphEdge;
// -- Table: @delta_TamiflexCallGraphEdge
ram::Relation<Auto,4>* rel_322_delta_TamiflexCallGraphEdge;
// -- Table: @new_TamiflexCallGraphEdge
ram::Relation<Auto,4>* rel_323_new_TamiflexCallGraphEdge;
// -- Table: TamiflexConstructorCallGraphEdge
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_324_TamiflexConstructorCallGraphEdge;
// -- Table: @delta_TamiflexConstructorCallGraphEdge
ram::Relation<Auto,4>* rel_325_delta_TamiflexConstructorCallGraphEdge;
// -- Table: @new_TamiflexConstructorCallGraphEdge
ram::Relation<Auto,4>* rel_326_new_TamiflexConstructorCallGraphEdge;
// -- Table: TamiflexInvocationArgumentArrayValue
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_327_TamiflexInvocationArgumentArrayValue;
// -- Table: @delta_TamiflexInvocationArgumentArrayValue
ram::Relation<Auto,4>* rel_328_delta_TamiflexInvocationArgumentArrayValue;
// -- Table: @new_TamiflexInvocationArgumentArrayValue
ram::Relation<Auto,4>* rel_329_new_TamiflexInvocationArgumentArrayValue;
// -- Table: TamiflexInvocationFirstParam
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_330_TamiflexInvocationFirstParam;
// -- Table: @delta_TamiflexInvocationFirstParam
ram::Relation<Auto,4>* rel_331_delta_TamiflexInvocationFirstParam;
// -- Table: @new_TamiflexInvocationFirstParam
ram::Relation<Auto,4>* rel_332_new_TamiflexInvocationFirstParam;
// -- Table: Tamiflex_Array_NewInstance
ram::Relation<Auto,2>* rel_333_Tamiflex_Array_NewInstance;
// -- Table: Tamiflex_Class_NewInstance
ram::Relation<Auto,2>* rel_334_Tamiflex_Class_NewInstance;
// -- Table: Tamiflex_Constructor_NewInstance
ram::Relation<Auto,3>* rel_335_Tamiflex_Constructor_NewInstance;
// -- Table: Tamiflex_Invoke
ram::Relation<Auto,3, ram::index<0,1,2>>* rel_336_Tamiflex_Invoke;
// -- Table: @delta_Tamiflex_Invoke
ram::Relation<Auto,3>* rel_337_delta_Tamiflex_Invoke;
// -- Table: @new_Tamiflex_Invoke
ram::Relation<Auto,3>* rel_338_new_Tamiflex_Invoke;
// -- Table: Tamiflex_ReflectionData
ram::Relation<Auto,6, ram::index<5>>* rel_339_Tamiflex_ReflectionData;
// -- Table: Tamiflex_ReflectionMap
ram::Relation<Auto,2, ram::index<1>>* rel_340_Tamiflex_ReflectionMap;
// -- Table: Tamiflex_ReifiedField
ram::Relation<Auto,3>* rel_341_Tamiflex_ReifiedField;
// -- Table: Tamiflex_ReifiedFieldArray
ram::Relation<Auto,3>* rel_342_Tamiflex_ReifiedFieldArray;
// -- Table: Tamiflex_ReifiedMethod
ram::Relation<Auto,3>* rel_343_Tamiflex_ReifiedMethod;
// -- Table: Tamiflex_ReifiedMethodArray
ram::Relation<Auto,3>* rel_344_Tamiflex_ReifiedMethodArray;
// -- Table: Temp1
ram::Relation<Auto,2, ram::index<0,1>>* rel_345_Temp1;
// -- Table: @delta_Temp1
ram::Relation<Auto,2>* rel_346_delta_Temp1;
// -- Table: @new_Temp1
ram::Relation<Auto,2>* rel_347_new_Temp1;
// -- Table: Temp2
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_348_Temp2;
// -- Table: @delta_Temp2
ram::Relation<Auto,4>* rel_349_delta_Temp2;
// -- Table: @new_Temp2
ram::Relation<Auto,4>* rel_350_new_Temp2;
// -- Table: Throw
ram::Relation<Auto,2>* rel_351_Throw;
// -- Table: ThrowPointsTo
ram::Relation<Auto,4, ram::index<2,3,0,1>>* rel_352_ThrowPointsTo;
souffle::RelationWrapper<39,ram::Relation<Auto,4, ram::index<2,3,0,1>>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_352_ThrowPointsTo;
// -- Table: @delta_ThrowPointsTo
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_353_delta_ThrowPointsTo;
// -- Table: @new_ThrowPointsTo
ram::Relation<Auto,4, ram::index<0,1,2,3>>* rel_354_new_ThrowPointsTo;
// -- Table: Throw_Var
ram::Relation<Auto,2, ram::index<0>>* rel_355_Throw_Var;
// -- Table: TopLevelEntryPoint
ram::Relation<Auto,1, ram::index<0>>* rel_356_TopLevelEntryPoint;
// -- Table: TypeForFormals
ram::Relation<Auto,3>* rel_357_TypeForFormals;
// -- Table: TypeToConcreteImplementationOrd
ram::Relation<Auto,2>* rel_358_TypeToConcreteImplementationOrd;
// -- Table: Type_byte
ram::Relation<Auto,1>* rel_359_Type_byte;
// -- Table: Type_char
ram::Relation<Auto,1>* rel_360_Type_char;
// -- Table: Type_double
ram::Relation<Auto,1>* rel_361_Type_double;
// -- Table: Type_float
ram::Relation<Auto,1>* rel_362_Type_float;
// -- Table: Type_int
ram::Relation<Auto,1>* rel_363_Type_int;
// -- Table: Type_long
ram::Relation<Auto,1>* rel_364_Type_long;
// -- Table: Type_null
ram::Relation<Auto,1>* rel_365_Type_null;
// -- Table: Type_short
ram::Relation<Auto,1>* rel_366_Type_short;
// -- Table: Value_Num
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_367_Value_Num;
// -- Table: Value_Type
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_368_Value_Type;
souffle::RelationWrapper<40,ram::Relation<Auto,2, ram::index<0>, ram::index<1>>,Tuple<RamDomain,2>,2,false,true> wrapper_rel_368_Value_Type;
// -- Table: Value_isHeap
ram::Relation<Auto,1>* rel_369_Value_isHeap;
// -- Table: Value_isMock
ram::Relation<Auto,1>* rel_370_Value_isMock;
// -- Table: Value_isNonHeap
ram::Relation<Auto,1>* rel_371_Value_isNonHeap;
// -- Table: VarPointsTo
ram::Relation<Auto,4, ram::index<3,2,0,1>>* rel_372_VarPointsTo;
souffle::RelationWrapper<41,ram::Relation<Auto,4, ram::index<3,2,0,1>>,Tuple<RamDomain,4>,4,false,true> wrapper_rel_372_VarPointsTo;
// -- Table: @delta_VarPointsTo
ram::Relation<Auto,4, ram::index<3,2>, ram::index<1,0,2,3>>* rel_373_delta_VarPointsTo;
// -- Table: @new_VarPointsTo
ram::Relation<Auto,4, ram::index<3,2>, ram::index<1,0,2,3>>* rel_374_new_VarPointsTo;
// -- Table: Var_DeclaringMethod
ram::Relation<Auto,2, ram::index<0>>* rel_375_Var_DeclaringMethod;
// -- Table: Var_Type
ram::Relation<Auto,2, ram::index<0>>* rel_376_Var_Type;
// -- Table: VarsAtInvocationRetrievingView
ram::Relation<Auto,2>* rel_377_VarsAtInvocationRetrievingView;
// -- Table: ViewObjectValueFromId
ram::Relation<Auto,2, ram::index<1>>* rel_378_ViewObjectValueFromId;
// -- Table: ViewRetrievalByArg0MethodInvocation
ram::Relation<Auto,1>* rel_379_ViewRetrievalByArg0MethodInvocation;
// -- Table: VirtualMethodInvocation
ram::Relation<Auto,3, ram::index<1>>* rel_380_VirtualMethodInvocation;
// -- Table: VirtualMethodInvocation_Base
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_381_VirtualMethodInvocation_Base;
// -- Table: VirtualMethodInvocation_Descriptor
ram::Relation<Auto,2, ram::index<0>>* rel_382_VirtualMethodInvocation_Descriptor;
// -- Table: VirtualMethodInvocation_SimpleName
ram::Relation<Auto,2>* rel_383_VirtualMethodInvocation_SimpleName;
// -- Table: _Activity
ram::Relation<Auto,1>* rel_384_Activity;
souffle::RelationWrapper<42,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_384_Activity;
// -- Table: _ActualParam
ram::Relation<Auto,3, ram::index<1,0>>* rel_385_ActualParam;
souffle::RelationWrapper<43,ram::Relation<Auto,3, ram::index<1,0>>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_385_ActualParam;
// -- Table: _AndroidEntryPoint
ram::Relation<Auto,1>* rel_386_AndroidEntryPoint;
souffle::RelationWrapper<44,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_386_AndroidEntryPoint;
// -- Table: _ApplicationClass
ram::Relation<Auto,1, ram::index<0>>* rel_387_ApplicationClass;
souffle::RelationWrapper<45,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_387_ApplicationClass;
// -- Table: _ArrayType
ram::Relation<Auto,1>* rel_388_ArrayType;
souffle::RelationWrapper<46,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_388_ArrayType;
// -- Table: _AssignBinop
ram::Relation<Auto,4>* rel_389_AssignBinop;
souffle::RelationWrapper<47,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_389_AssignBinop;
// -- Table: _AssignCast
ram::Relation<Auto,6>* rel_390_AssignCast;
souffle::RelationWrapper<48,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_390_AssignCast;
// -- Table: _AssignCastNull
ram::Relation<Auto,5>* rel_391_AssignCastNull;
souffle::RelationWrapper<49,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_391_AssignCastNull;
// -- Table: _AssignCastNumConstant
ram::Relation<Auto,6>* rel_392_AssignCastNumConstant;
souffle::RelationWrapper<50,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_392_AssignCastNumConstant;
// -- Table: _AssignHeapAllocation
ram::Relation<Auto,5>* rel_393_AssignHeapAllocation;
souffle::RelationWrapper<51,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_393_AssignHeapAllocation;
// -- Table: _AssignInstanceOf
ram::Relation<Auto,6>* rel_394_AssignInstanceOf;
souffle::RelationWrapper<52,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_394_AssignInstanceOf;
// -- Table: _AssignLocal
ram::Relation<Auto,5>* rel_395_AssignLocal;
souffle::RelationWrapper<53,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_395_AssignLocal;
// -- Table: _AssignNull
ram::Relation<Auto,4>* rel_396_AssignNull;
souffle::RelationWrapper<54,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_396_AssignNull;
// -- Table: _AssignNumConstant
ram::Relation<Auto,5>* rel_397_AssignNumConstant;
souffle::RelationWrapper<55,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_397_AssignNumConstant;
// -- Table: _AssignPhantomInvoke
ram::Relation<Auto,3>* rel_398_AssignPhantomInvoke;
souffle::RelationWrapper<56,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_398_AssignPhantomInvoke;
// -- Table: _AssignReturnValue
ram::Relation<Auto,2>* rel_399_AssignReturnValue;
souffle::RelationWrapper<57,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_399_AssignReturnValue;
// -- Table: _AssignUnop
ram::Relation<Auto,4>* rel_400_AssignUnop;
souffle::RelationWrapper<58,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_400_AssignUnop;
// -- Table: _BootstrapParam
ram::Relation<Auto,3>* rel_401_BootstrapParam;
souffle::RelationWrapper<59,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_401_BootstrapParam;
// -- Table: _BreakpointStmt
ram::Relation<Auto,3>* rel_402_BreakpointStmt;
souffle::RelationWrapper<60,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_402_BreakpointStmt;
// -- Table: _BroadcastReceiver
ram::Relation<Auto,1>* rel_403_BroadcastReceiver;
souffle::RelationWrapper<61,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_403_BroadcastReceiver;
// -- Table: _CallbackMethod
ram::Relation<Auto,1>* rel_404_CallbackMethod;
souffle::RelationWrapper<62,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_404_CallbackMethod;
// -- Table: _ClassHeap
ram::Relation<Auto,2>* rel_405_ClassHeap;
souffle::RelationWrapper<63,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_405_ClassHeap;
// -- Table: _ClassModifier
ram::Relation<Auto,2, ram::index<0,1>>* rel_406_ClassModifier;
souffle::RelationWrapper<64,ram::Relation<Auto,2, ram::index<0,1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_406_ClassModifier;
// -- Table: _ClassType
ram::Relation<Auto,1>* rel_407_ClassType;
souffle::RelationWrapper<65,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_407_ClassType;
// -- Table: _ComponentType
ram::Relation<Auto,2, ram::index<0,1>>* rel_408_ComponentType;
souffle::RelationWrapper<66,ram::Relation<Auto,2, ram::index<0,1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_408_ComponentType;
// -- Table: _ContentProvider
ram::Relation<Auto,1>* rel_409_ContentProvider;
souffle::RelationWrapper<67,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_409_ContentProvider;
// -- Table: _Dacapo
ram::Relation<Auto,2>* rel_410_Dacapo;
souffle::RelationWrapper<68,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_410_Dacapo;
// -- Table: _DirectSuperclass
ram::Relation<Auto,2, ram::index<0>, ram::index<1>>* rel_411_DirectSuperclass;
souffle::RelationWrapper<69,ram::Relation<Auto,2, ram::index<0>, ram::index<1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_411_DirectSuperclass;
// -- Table: _DirectSuperinterface
ram::Relation<Auto,2>* rel_412_DirectSuperinterface;
souffle::RelationWrapper<70,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_412_DirectSuperinterface;
// -- Table: _DynamicMethodInvocation
ram::Relation<Auto,5>* rel_413_DynamicMethodInvocation;
souffle::RelationWrapper<71,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_413_DynamicMethodInvocation;
// -- Table: _EmptyArray
ram::Relation<Auto,1, ram::index<0>>* rel_414_EmptyArray;
souffle::RelationWrapper<72,ram::Relation<Auto,1, ram::index<0>>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_414_EmptyArray;
// -- Table: _EnterMonitor
ram::Relation<Auto,4>* rel_415_EnterMonitor;
souffle::RelationWrapper<73,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_415_EnterMonitor;
// -- Table: _ExceptionHandler
ram::Relation<Auto,7>* rel_416_ExceptionHandler;
souffle::RelationWrapper<74,ram::Relation<Auto,7>,Tuple<RamDomain,7>,7,true,false> wrapper_rel_416_ExceptionHandler;
// -- Table: _ExceptionHandler_Previous
ram::Relation<Auto,2, ram::index<0>>* rel_417_ExceptionHandler_Previous;
souffle::RelationWrapper<75,ram::Relation<Auto,2, ram::index<0>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_417_ExceptionHandler_Previous;
// -- Table: _ExitMonitor
ram::Relation<Auto,4>* rel_418_ExitMonitor;
souffle::RelationWrapper<76,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_418_ExitMonitor;
// -- Table: _Field
ram::Relation<Auto,4>* rel_419_Field;
souffle::RelationWrapper<77,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_419_Field;
// -- Table: _FieldInitialValue
ram::Relation<Auto,2, ram::index<1>>* rel_420_FieldInitialValue;
souffle::RelationWrapper<78,ram::Relation<Auto,2, ram::index<1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_420_FieldInitialValue;
// -- Table: _Field_Modifier
ram::Relation<Auto,2, ram::index<0,1>>* rel_421_Field_Modifier;
souffle::RelationWrapper<79,ram::Relation<Auto,2, ram::index<0,1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_421_Field_Modifier;
// -- Table: _FormalParam
ram::Relation<Auto,3, ram::index<1,0>>* rel_422_FormalParam;
souffle::RelationWrapper<80,ram::Relation<Auto,3, ram::index<1,0>>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_422_FormalParam;
// -- Table: _Goto
ram::Relation<Auto,4>* rel_423_Goto;
souffle::RelationWrapper<81,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_423_Goto;
// -- Table: _If
ram::Relation<Auto,4>* rel_424_If;
souffle::RelationWrapper<82,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_424_If;
// -- Table: _InterfaceType
ram::Relation<Auto,1>* rel_425_InterfaceType;
souffle::RelationWrapper<83,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_425_InterfaceType;
// -- Table: _LayoutControl
ram::Relation<Auto,3>* rel_426_LayoutControl;
souffle::RelationWrapper<84,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_426_LayoutControl;
// -- Table: _LoadArrayIndex
ram::Relation<Auto,5>* rel_427_LoadArrayIndex;
souffle::RelationWrapper<85,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_427_LoadArrayIndex;
// -- Table: _LoadInstanceField
ram::Relation<Auto,6>* rel_428_LoadInstanceField;
souffle::RelationWrapper<86,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_428_LoadInstanceField;
// -- Table: _LoadStaticField
ram::Relation<Auto,5>* rel_429_LoadStaticField;
souffle::RelationWrapper<87,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_429_LoadStaticField;
// -- Table: _LookupSwitch
ram::Relation<Auto,4>* rel_430_LookupSwitch;
souffle::RelationWrapper<88,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_430_LookupSwitch;
// -- Table: _Method
ram::Relation<Auto,6>* rel_431_Method;
souffle::RelationWrapper<89,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_431_Method;
// -- Table: _MethodHandleConstant
ram::Relation<Auto,1>* rel_432_MethodHandleConstant;
souffle::RelationWrapper<90,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_432_MethodHandleConstant;
// -- Table: _MethodInvocation_Line
ram::Relation<Auto,2, ram::index<1>>* rel_433_MethodInvocation_Line;
souffle::RelationWrapper<91,ram::Relation<Auto,2, ram::index<1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_433_MethodInvocation_Line;
// -- Table: _Method_DeclaresException
ram::Relation<Auto,2>* rel_434_Method_DeclaresException;
souffle::RelationWrapper<92,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_434_Method_DeclaresException;
// -- Table: _Method_Modifier
ram::Relation<Auto,2, ram::index<0,1>>* rel_435_Method_Modifier;
souffle::RelationWrapper<93,ram::Relation<Auto,2, ram::index<0,1>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_435_Method_Modifier;
// -- Table: _NativeReturnVar
ram::Relation<Auto,2>* rel_436_NativeReturnVar;
souffle::RelationWrapper<94,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_436_NativeReturnVar;
// -- Table: _NormalHeap
ram::Relation<Auto,2>* rel_437_NormalHeap;
souffle::RelationWrapper<95,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_437_NormalHeap;
// -- Table: _PhantomInvoke
ram::Relation<Auto,3>* rel_438_PhantomInvoke;
souffle::RelationWrapper<96,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_438_PhantomInvoke;
// -- Table: _Return
ram::Relation<Auto,4>* rel_439_Return;
souffle::RelationWrapper<97,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_439_Return;
// -- Table: _ReturnVoid
ram::Relation<Auto,3>* rel_440_ReturnVoid;
souffle::RelationWrapper<98,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_440_ReturnVoid;
// -- Table: _Service
ram::Relation<Auto,1>* rel_441_Service;
souffle::RelationWrapper<99,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_441_Service;
// -- Table: _SpecialMethodInvocation
ram::Relation<Auto,5>* rel_442_SpecialMethodInvocation;
souffle::RelationWrapper<100,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_442_SpecialMethodInvocation;
// -- Table: _StaticMethodInvocation
ram::Relation<Auto,4>* rel_443_StaticMethodInvocation;
souffle::RelationWrapper<101,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_443_StaticMethodInvocation;
// -- Table: _StoreArrayIndex
ram::Relation<Auto,5>* rel_444_StoreArrayIndex;
souffle::RelationWrapper<102,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_444_StoreArrayIndex;
// -- Table: _StoreInstanceField
ram::Relation<Auto,6>* rel_445_StoreInstanceField;
souffle::RelationWrapper<103,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_445_StoreInstanceField;
// -- Table: _StoreStaticField
ram::Relation<Auto,5>* rel_446_StoreStaticField;
souffle::RelationWrapper<104,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_446_StoreStaticField;
// -- Table: _StringConstant
ram::Relation<Auto,1>* rel_447_StringConstant;
souffle::RelationWrapper<105,ram::Relation<Auto,1>,Tuple<RamDomain,1>,1,true,false> wrapper_rel_447_StringConstant;
// -- Table: _TableSwitch
ram::Relation<Auto,4>* rel_448_TableSwitch;
souffle::RelationWrapper<106,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_448_TableSwitch;
// -- Table: _Tamiflex_ReflectionData
ram::Relation<Auto,6>* rel_449_Tamiflex_ReflectionData;
souffle::RelationWrapper<107,ram::Relation<Auto,6>,Tuple<RamDomain,6>,6,true,false> wrapper_rel_449_Tamiflex_ReflectionData;
// -- Table: _Tamiflex_ToDoopFormat
ram::Relation<Auto,2, ram::index<0>>* rel_450_Tamiflex_ToDoopFormat;
// -- Table: _ThisVar
ram::Relation<Auto,2, ram::index<0>>* rel_451_ThisVar;
souffle::RelationWrapper<108,ram::Relation<Auto,2, ram::index<0>>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_451_ThisVar;
// -- Table: _Throw
ram::Relation<Auto,4>* rel_452_Throw;
souffle::RelationWrapper<109,ram::Relation<Auto,4>,Tuple<RamDomain,4>,4,true,false> wrapper_rel_452_Throw;
// -- Table: _ThrowNull
ram::Relation<Auto,3>* rel_453_ThrowNull;
souffle::RelationWrapper<110,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_453_ThrowNull;
// -- Table: _UnsupportedInstruction
ram::Relation<Auto,3>* rel_454_UnsupportedInstruction;
souffle::RelationWrapper<111,ram::Relation<Auto,3>,Tuple<RamDomain,3>,3,true,false> wrapper_rel_454_UnsupportedInstruction;
// -- Table: _Var_DeclaringMethod
ram::Relation<Auto,2>* rel_455_Var_DeclaringMethod;
souffle::RelationWrapper<112,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_455_Var_DeclaringMethod;
// -- Table: _Var_Type
ram::Relation<Auto,2>* rel_456_Var_Type;
souffle::RelationWrapper<113,ram::Relation<Auto,2>,Tuple<RamDomain,2>,2,true,false> wrapper_rel_456_Var_Type;
// -- Table: _VirtualMethodInvocation
ram::Relation<Auto,5>* rel_457_VirtualMethodInvocation;
souffle::RelationWrapper<114,ram::Relation<Auto,5>,Tuple<RamDomain,5>,5,true,false> wrapper_rel_457_VirtualMethodInvocation;
// -- Table: isArrayType
ram::Relation<Auto,1, ram::index<0>>* rel_458_isArrayType;
// -- Table: isAssignCast_Insn
ram::Relation<Auto,1>* rel_459_isAssignCast_Insn;
// -- Table: isAssignHeapAllocation_Insn
ram::Relation<Auto,1>* rel_460_isAssignHeapAllocation_Insn;
// -- Table: isAssignLocal_Insn
ram::Relation<Auto,1>* rel_461_isAssignLocal_Insn;
// -- Table: isAssignNull_Insn
ram::Relation<Auto,1>* rel_462_isAssignNull_Insn;
// -- Table: isClassHeap
ram::Relation<Auto,1>* rel_463_isClassHeap;
// -- Table: isClassType
ram::Relation<Auto,1, ram::index<0>>* rel_464_isClassType;
// -- Table: isClinitContext
ram::Relation<Auto,1>* rel_465_isClinitContext;
// -- Table: isContext
ram::Relation<Auto,1, ram::index<0>>* rel_466_isContext;
// -- Table: @delta_isContext
ram::Relation<Auto,1>* rel_467_delta_isContext;
// -- Table: @new_isContext
ram::Relation<Auto,1>* rel_468_new_isContext;
// -- Table: isExceptionHandler
ram::Relation<Auto,1>* rel_469_isExceptionHandler;
// -- Table: isField
ram::Relation<Auto,1, ram::index<0>>* rel_470_isField;
// -- Table: isHContext
ram::Relation<Auto,1, ram::index<0>>* rel_471_isHContext;
// -- Table: @delta_isHContext
ram::Relation<Auto,1>* rel_472_delta_isHContext;
// -- Table: @new_isHContext
ram::Relation<Auto,1>* rel_473_new_isHContext;
// -- Table: isHeapAllocation
ram::Relation<Auto,1, ram::index<0>>* rel_474_isHeapAllocation;
// -- Table: isImmutableContext
ram::Relation<Auto,1>* rel_475_isImmutableContext;
// -- Table: isImmutableHContext
ram::Relation<Auto,1>* rel_476_isImmutableHContext;
// -- Table: isInitialContext
ram::Relation<Auto,1>* rel_477_isInitialContext;
// -- Table: isInstruction
ram::Relation<Auto,1, ram::index<0>>* rel_478_isInstruction;
// -- Table: isInterfaceType
ram::Relation<Auto,1, ram::index<0>>* rel_479_isInterfaceType;
// -- Table: isJVMStartupContext
ram::Relation<Auto,1>* rel_480_isJVMStartupContext;
// -- Table: isJVMStartupHContext
ram::Relation<Auto,1>* rel_481_isJVMStartupHContext;
// -- Table: isLoadArrayIndex_Insn
ram::Relation<Auto,1>* rel_482_isLoadArrayIndex_Insn;
// -- Table: isLoadInstanceField_Insn
ram::Relation<Auto,1>* rel_483_isLoadInstanceField_Insn;
// -- Table: isLoadStaticField_Insn
ram::Relation<Auto,1>* rel_484_isLoadStaticField_Insn;
// -- Table: isMethod
ram::Relation<Auto,1, ram::index<0>>* rel_485_isMethod;
// -- Table: isMethodInvocation
ram::Relation<Auto,1, ram::index<0>>* rel_486_isMethodInvocation;
// -- Table: isNumConstant
ram::Relation<Auto,1>* rel_487_isNumConstant;
// -- Table: isPrimitiveType
ram::Relation<Auto,1, ram::index<0>>* rel_488_isPrimitiveType;
// -- Table: isReferenceType
ram::Relation<Auto,1, ram::index<0>>* rel_489_isReferenceType;
// -- Table: isReturnNonvoid_Insn
ram::Relation<Auto,1>* rel_490_isReturnNonvoid_Insn;
// -- Table: isStaticMethodInvocation_Insn
ram::Relation<Auto,1, ram::index<0>>* rel_491_isStaticMethodInvocation_Insn;
// -- Table: isStoreArrayIndex_Insn
ram::Relation<Auto,1>* rel_492_isStoreArrayIndex_Insn;
// -- Table: isStoreInstanceField_Insn
ram::Relation<Auto,1>* rel_493_isStoreInstanceField_Insn;
// -- Table: isStoreStaticField_Insn
ram::Relation<Auto,1>* rel_494_isStoreStaticField_Insn;
// -- Table: isStringConstant
ram::Relation<Auto,1, ram::index<0>>* rel_495_isStringConstant;
// -- Table: isThrow_Insn
ram::Relation<Auto,1>* rel_496_isThrow_Insn;
// -- Table: isType
ram::Relation<Auto,1, ram::index<0>>* rel_497_isType;
// -- Table: isValue
ram::Relation<Auto,1, ram::index<0>>* rel_498_isValue;
// -- Table: isVar
ram::Relation<Auto,1, ram::index<0>>* rel_499_isVar;
// -- Table: isVirtualMethodInvocation_Insn
ram::Relation<Auto,1, ram::index<0>>* rel_500_isVirtualMethodInvocation_Insn;
public:
Sf_pts2o1h_interface() : 
rel_1_AllConcreteImplementations(new ram::Relation<Auto,2, ram::index<1>>()),
rel_2_AllocatedObjectSupportsFinalize(new ram::Relation<Auto,2, ram::index<0>>()),
rel_3_AllocationShouldBeMergedPerMethod(new ram::Relation<Auto,2>()),
rel_4_AllocationsPerMethodAndType(new ram::Relation<Auto,3>()),
rel_5_AndroidAppComponent(new ram::Relation<Auto,1>()),
rel_6_AndroidApplicationClass(new ram::Relation<Auto,1, ram::index<0>>()),
rel_7_AndroidApplicationListenerClass(new ram::Relation<Auto,1>()),
rel_8_AndroidLibraryListenerType(new ram::Relation<Auto,1>()),
rel_9_AndroidLibraryType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_10_AppMethodOverridesAndroidLibraryMethod(new ram::Relation<Auto,1, ram::index<0>>()),
rel_11_ApplicationMethod(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_11_ApplicationMethod(*rel_11_ApplicationMethod,symTable,"ApplicationMethod",std::array<const char *,1>{"s:Method"},std::array<const char *,1>{"?method"}),
rel_12_ApplicationObjectFlowingToLibrary(new ram::Relation<Auto,3, ram::index<2,0,1>>()),
rel_13_delta_ApplicationObjectFlowingToLibrary(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_14_new_ApplicationObjectFlowingToLibrary(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_15_ApplicationObjectFlowingToLibraryStaticType(new ram::Relation<Auto,3, ram::index<2,0,1>>()),
rel_16_delta_ApplicationObjectFlowingToLibraryStaticType(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_17_new_ApplicationObjectFlowingToLibraryStaticType(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_18_ApplicationVar(new ram::Relation<Auto,1>()),
rel_19_ArrayIndexPointsTo(new ram::Relation<Auto,4, ram::index<3,2,0,1>>()),
rel_20_delta_ArrayIndexPointsTo(new ram::Relation<Auto,4, ram::index<2,3,0,1>>()),
rel_21_new_ArrayIndexPointsTo(new ram::Relation<Auto,4, ram::index<2,3,0,1>>()),
rel_22_AssignCast(new ram::Relation<Auto,4, ram::index<1>, ram::index<3>>()),
rel_23_AssignCastNumConstant_Id(new ram::Relation<Auto,2, ram::index<0>>()),
rel_24_AssignCast_From(new ram::Relation<Auto,2, ram::index<0>>()),
rel_25_AssignCast_Type(new ram::Relation<Auto,2, ram::index<0>>()),
rel_26_AssignContextInsensitiveHeapAllocation(new ram::Relation<Auto,3, ram::index<2>>()),
rel_27_AssignHeapAllocation(new ram::Relation<Auto,3, ram::index<2>>()),
rel_28_AssignHeapAllocation_Heap(new ram::Relation<Auto,2, ram::index<0>>()),
rel_29_AssignInstruction_To(new ram::Relation<Auto,2, ram::index<0>>()),
rel_30_AssignLocal(new ram::Relation<Auto,3, ram::index<0>>()),
rel_31_AssignLocal_From(new ram::Relation<Auto,2, ram::index<0>>()),
rel_32_AssignNormalHeapAllocation(new ram::Relation<Auto,3, ram::index<2>>()),
rel_33_AssignNull(new ram::Relation<Auto,2, ram::index<1>>()),
rel_34_AssignNumConstant_Id(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
rel_35_AssignReturnValue(new ram::Relation<Auto,2, ram::index<0>>()),
rel_36_CallGraphEdge(new ram::Relation<Auto,4, ram::index<2,3,0,1>>()),
wrapper_rel_36_CallGraphEdge(*rel_36_CallGraphEdge,symTable,"CallGraphEdge",std::array<const char *,4>{"r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:MethodInvocation[s:Instruction]","r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:Method"},std::array<const char *,4>{"?callerCtx","?invocation","?calleeCtx","?method"}),
rel_37_delta_CallGraphEdge(new ram::Relation<Auto,4>()),
rel_38_new_CallGraphEdge(new ram::Relation<Auto,4>()),
rel_39_ClassHasPossibleEntryPoint(new ram::Relation<Auto,1>()),
rel_40_ClassInitializer(new ram::Relation<Auto,2, ram::index<0>>()),
rel_41_ClassIsAboveOtherInNamingHierarchy(new ram::Relation<Auto,2, ram::index<1>>()),
rel_42_ClassNameIndexes(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_43_delta_ClassNameIndexes(new ram::Relation<Auto,2>()),
rel_44_new_ClassNameIndexes(new ram::Relation<Auto,2>()),
rel_45_ClassWithTopLevelEntryPoint(new ram::Relation<Auto,1, ram::index<0>>()),
rel_46_CollectionLibraryClass(new ram::Relation<Auto,1, ram::index<0>>()),
rel_47_ConcreteClass(new ram::Relation<Auto,1, ram::index<0>>()),
rel_48_ConcreteImplementations(new ram::Relation<Auto,2>()),
rel_49_ConcreteType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_50_ContextForEntryPoint(new ram::Relation<Auto,2>()),
rel_51_DotsInClassName(new ram::Relation<Auto,2, ram::index<0>>()),
rel_52_ExceptionHandler_Before(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_53_delta_ExceptionHandler_Before(new ram::Relation<Auto,2>()),
rel_54_new_ExceptionHandler_Before(new ram::Relation<Auto,2>()),
rel_55_ExceptionHandler_Begin(new ram::Relation<Auto,2, ram::index<0>>()),
rel_56_ExceptionHandler_End(new ram::Relation<Auto,2, ram::index<0>>()),
rel_57_ExceptionHandler_FormalParam(new ram::Relation<Auto,2, ram::index<0>>()),
rel_58_ExceptionHandler_Impossible(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_59_ExceptionHandler_InRange(new ram::Relation<Auto,2, ram::index<1>>()),
rel_60_ExceptionHandler_Index(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_61_ExceptionHandler_Method(new ram::Relation<Auto,2>()),
rel_62_ExceptionHandler_SameBlock_PartialOrder(new ram::Relation<Auto,2, ram::index<1>>()),
rel_63_ExceptionHandler_SameBlock_Repr(new ram::Relation<Auto,2, ram::index<0>>()),
rel_64_ExceptionHandler_SameInsn_PartialOrder(new ram::Relation<Auto,3, ram::index<1,2>>()),
rel_65_ExceptionHandler_SameInsn_Repr(new ram::Relation<Auto,2, ram::index<0>>()),
rel_66_ExceptionHandler_Type(new ram::Relation<Auto,2, ram::index<0>>()),
rel_67_ExceptionHandler_TypeIsCaught(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_68_ExceptionHeapTypeRepresentativeOrdinal(new ram::Relation<Auto,2>()),
rel_69_ExceptionType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_70_ExceptionTypeToHeap(new ram::Relation<Auto,2, ram::index<1>>()),
rel_71_FakeInvocation_RegisterFinalize0(new ram::Relation<Auto,2>()),
rel_72_FieldInstruction_Signature(new ram::Relation<Auto,2, ram::index<0>>()),
rel_73_Field_DeclaringType(new ram::Relation<Auto,2, ram::index<0>>()),
rel_74_ForcedReachableAndroidContext(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_75_delta_ForcedReachableAndroidContext(new ram::Relation<Auto,2>()),
rel_76_new_ForcedReachableAndroidContext(new ram::Relation<Auto,2>()),
rel_77_FormalOfForcedReachableContext(new ram::Relation<Auto,3, ram::index<2>, ram::index<0,1,2>>()),
rel_78_delta_FormalOfForcedReachableContext(new ram::Relation<Auto,3>()),
rel_79_new_FormalOfForcedReachableContext(new ram::Relation<Auto,3>()),
rel_80_FormalsForEntryPoints(new ram::Relation<Auto,2>()),
rel_81_HContextForEntryPoint(new ram::Relation<Auto,2, ram::index<1>>()),
rel_82_HeapAllocation_ContextInsensitive(new ram::Relation<Auto,1, ram::index<0>>()),
rel_83_HeapAllocation_Keep(new ram::Relation<Auto,1, ram::index<0>>()),
rel_84_HeapAllocation_Merge(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_85_HeapAllocation_Null(new ram::Relation<Auto,1, ram::index<0>>()),
rel_86_HeapAllocation_Special(new ram::Relation<Auto,1, ram::index<0>>()),
rel_87_HeapAllocation_Type(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_88_HeapIsMergedString(new ram::Relation<Auto,1, ram::index<0>>()),
rel_89_HeapIsMergedStringFactory(new ram::Relation<Auto,1, ram::index<0>>()),
rel_90_HeapRepresentative(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
rel_91_ImmutableContextFromContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_92_delta_ImmutableContextFromContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_93_new_ImmutableContextFromContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_94_ImmutableContextFromHContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_95_delta_ImmutableContextFromHContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_96_new_ImmutableContextFromHContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_97_ImmutableHContextFromContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_98_delta_ImmutableHContextFromContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_99_new_ImmutableHContextFromContext(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_100_ImplicitReachable(new ram::Relation<Auto,1>()),
rel_101_ImplicitlyInstantiatedLibraryType(new ram::Relation<Auto,1>()),
rel_102_InitializedClass(new ram::Relation<Auto,1, ram::index<0>>()),
rel_103_delta_InitializedClass(new ram::Relation<Auto,1>()),
rel_104_new_InitializedClass(new ram::Relation<Auto,1>()),
rel_105_InstanceFieldPointsTo(new ram::Relation<Auto,5, ram::index<4,2,3,0,1>>()),
rel_106_delta_InstanceFieldPointsTo(new ram::Relation<Auto,5, ram::index<0,1,2,3,4>>()),
rel_107_new_InstanceFieldPointsTo(new ram::Relation<Auto,5, ram::index<0,1,2,3,4>>()),
rel_108_Instruction_Index(new ram::Relation<Auto,2, ram::index<0>>()),
rel_109_Instruction_Method(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_110_delta_Instruction_Method(new ram::Relation<Auto,2, ram::index<0>>()),
rel_111_new_Instruction_Method(new ram::Relation<Auto,2, ram::index<0>>()),
rel_112_Instruction_Throws(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_113_delta_Instruction_Throws(new ram::Relation<Auto,4>()),
rel_114_new_Instruction_Throws(new ram::Relation<Auto,4>()),
rel_115_LastDot(new ram::Relation<Auto,2, ram::index<0>>()),
rel_116_LayoutControl(new ram::Relation<Auto,3, ram::index<1>>()),
rel_117_LibraryReachableAppListenerType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_118_delta_LibraryReachableAppListenerType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_119_new_LibraryReachableAppListenerType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_120_ListenerType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_121_LoadArrayIndex(new ram::Relation<Auto,3, ram::index<2>>()),
rel_122_LoadArrayIndex_Base(new ram::Relation<Auto,2, ram::index<0>>()),
rel_123_LoadArrayIndex_To(new ram::Relation<Auto,2, ram::index<0>>()),
rel_124_LoadHeapArrayIndex(new ram::Relation<Auto,4, ram::index<1,3,0,2>>()),
rel_125_delta_LoadHeapArrayIndex(new ram::Relation<Auto,4, ram::index<1,3,0,2>>()),
rel_126_new_LoadHeapArrayIndex(new ram::Relation<Auto,4, ram::index<1,3,0,2>>()),
rel_127_LoadHeapInstanceField(new ram::Relation<Auto,5, ram::index<2,3,4,0,1>>()),
rel_128_delta_LoadHeapInstanceField(new ram::Relation<Auto,5>()),
rel_129_new_LoadHeapInstanceField(new ram::Relation<Auto,5>()),
rel_130_LoadInstanceField(new ram::Relation<Auto,4>()),
rel_131_LoadInstanceField_Base(new ram::Relation<Auto,2, ram::index<0>>()),
rel_132_LoadInstanceField_To(new ram::Relation<Auto,2, ram::index<0>>()),
rel_133_LoadStaticField(new ram::Relation<Auto,3, ram::index<0>, ram::index<2>>()),
rel_134_LoadStaticField_To(new ram::Relation<Auto,2, ram::index<0>>()),
rel_135_MainClass(new ram::Relation<Auto,1>()),
rel_136_MainMethodArgArray(new ram::Relation<Auto,1>()),
rel_137_MainMethodArgArrayContent(new ram::Relation<Auto,1>()),
rel_138_MainMethodDeclaration(new ram::Relation<Auto,1>()),
rel_139_MainThread(new ram::Relation<Auto,2>()),
rel_140_MainThreadGroup(new ram::Relation<Auto,2>()),
rel_141_MethodAllocationMergeThreshold(new ram::Relation<Auto,1>()),
rel_142_MethodAndTypeToHeap(new ram::Relation<Auto,3, ram::index<1,2>>()),
rel_143_MethodAndTypeToMergedHeap(new ram::Relation<Auto,3, ram::index<1,2>>()),
rel_144_MethodAndTypeToRepresentative(new ram::Relation<Auto,3>()),
rel_145_MethodDeclaredOrInherited(new ram::Relation<Auto,2, ram::index<1,0>>()),
rel_146_delta_MethodDeclaredOrInherited(new ram::Relation<Auto,2>()),
rel_147_new_MethodDeclaredOrInherited(new ram::Relation<Auto,2>()),
rel_148_MethodImplemented(new ram::Relation<Auto,4, ram::index<2>, ram::index<0,1,2>>()),
rel_149_MethodInvocation_Method(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_150_MethodLookup(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_151_delta_MethodLookup(new ram::Relation<Auto,4, ram::index<2>>()),
rel_152_new_MethodLookup(new ram::Relation<Auto,4, ram::index<2>>()),
rel_153_Method_DeclaringType(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_154_Method_Descriptor(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_155_Method_ReturnType(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_156_Method_SimpleName(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_157_MinHeapOrdinalPerMethodAndType(new ram::Relation<Auto,3, ram::index<0>>()),
rel_158_MinRepresentativeHeapToPickFromOrdinal(new ram::Relation<Auto,2, ram::index<0>>()),
rel_159_MockForFormal(new ram::Relation<Auto,4, ram::index<3>>()),
rel_160_MockObject(new ram::Relation<Auto,2, ram::index<1>>()),
rel_161_MockObjectContext(new ram::Relation<Auto,3>()),
rel_162_MockObjectForComponentType(new ram::Relation<Auto,2, ram::index<1>>()),
rel_163_MockObjectForType(new ram::Relation<Auto,2, ram::index<1>>()),
rel_164_NotEmptyArrayValue(new ram::Relation<Auto,1, ram::index<0>>()),
rel_165_NotLastDot(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_166_NotSpecialObject(new ram::Relation<Auto,1, ram::index<0>>()),
rel_167_ObjToMock(new ram::Relation<Auto,1, ram::index<0>>()),
rel_168_delta_ObjToMock(new ram::Relation<Auto,1>()),
rel_169_new_ObjToMock(new ram::Relation<Auto,1>()),
rel_170_ObjectMultipleAllocated(new ram::Relation<Auto,1, ram::index<0>>()),
rel_171_ObjectShouldNotBeRefined(new ram::Relation<Auto,1, ram::index<0>>()),
rel_172_OptAssignCast(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_173_delta_OptAssignCast(new ram::Relation<Auto,3>()),
rel_174_new_OptAssignCast(new ram::Relation<Auto,3>()),
rel_175_OptAssignHeapAllocation(new ram::Relation<Auto,2, ram::index<1>>()),
rel_176_OptForNameInvocation(new ram::Relation<Auto,2>()),
rel_177_OptInterproceduralAssign(new ram::Relation<Auto,4, ram::index<2,3,0,1>>()),
rel_178_delta_OptInterproceduralAssign(new ram::Relation<Auto,4>()),
rel_179_new_OptInterproceduralAssign(new ram::Relation<Auto,4>()),
rel_180_OptLoadArrayIndex(new ram::Relation<Auto,2, ram::index<1>>()),
rel_181_OptLoadHeapArrayIndex(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_182_delta_OptLoadHeapArrayIndex(new ram::Relation<Auto,2, ram::index<1>>()),
rel_183_new_OptLoadHeapArrayIndex(new ram::Relation<Auto,2, ram::index<1>>()),
rel_184_OptSpecialMethodInvocationBase(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_185_delta_OptSpecialMethodInvocationBase(new ram::Relation<Auto,2>()),
rel_186_new_OptSpecialMethodInvocationBase(new ram::Relation<Auto,2>()),
rel_187_OptStoreArrayIndex(new ram::Relation<Auto,2, ram::index<1>>()),
rel_188_OptStoreIntoArray(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_189_delta_OptStoreIntoArray(new ram::Relation<Auto,4>()),
rel_190_new_OptStoreIntoArray(new ram::Relation<Auto,4>()),
rel_191_OptVirtualMethodInvocationBase(new ram::Relation<Auto,2, ram::index<0,1>>()),
wrapper_rel_191_OptVirtualMethodInvocationBase(*rel_191_OptVirtualMethodInvocationBase,symTable,"OptVirtualMethodInvocationBase",std::array<const char *,2>{"s:MethodInvocation[s:Instruction]","s:Var"},std::array<const char *,2>{"?invocation","?base"}),
rel_192_delta_OptVirtualMethodInvocationBase(new ram::Relation<Auto,2>()),
rel_193_new_OptVirtualMethodInvocationBase(new ram::Relation<Auto,2>()),
rel_194_OverridesFinalize(new ram::Relation<Auto,1, ram::index<0>>()),
rel_195_OverridingProtectedMethodOfComponent(new ram::Relation<Auto,1>()),
rel_196_OverridingProtectedOnMethodOfLayoutControl(new ram::Relation<Auto,1>()),
rel_197_OverridingProtectedOnMethodOfReachableListener(new ram::Relation<Auto,1, ram::index<0>>()),
rel_198_delta_OverridingProtectedOnMethodOfReachableListener(new ram::Relation<Auto,1>()),
rel_199_new_OverridingProtectedOnMethodOfReachableListener(new ram::Relation<Auto,1>()),
rel_200_PossibleEntryPoint(new ram::Relation<Auto,1>()),
rel_201_PrefixAbove(new ram::Relation<Auto,3>()),
rel_202_PrefixBelow(new ram::Relation<Auto,2>()),
rel_203_ProtectedMethodOfComponent(new ram::Relation<Auto,1>()),
rel_204_ProtectedOnMethodOfLayoutControl(new ram::Relation<Auto,1>()),
rel_205_ProtectedOnMethodOfReachableListener(new ram::Relation<Auto,1, ram::index<0>>()),
rel_206_delta_ProtectedOnMethodOfReachableListener(new ram::Relation<Auto,1>()),
rel_207_new_ProtectedOnMethodOfReachableListener(new ram::Relation<Auto,1>()),
rel_208_PublicMethodOfComponent(new ram::Relation<Auto,1>()),
rel_209_PublicOnMethodOfLayoutControl(new ram::Relation<Auto,1>()),
rel_210_PublicOnMethodOfReachableListener(new ram::Relation<Auto,1, ram::index<0>>()),
rel_211_delta_PublicOnMethodOfReachableListener(new ram::Relation<Auto,1>()),
rel_212_new_PublicOnMethodOfReachableListener(new ram::Relation<Auto,1>()),
rel_213_Reachable(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_213_Reachable(*rel_213_Reachable,symTable,"Reachable",std::array<const char *,1>{"s:Method"},std::array<const char *,1>{"?method"}),
rel_214_delta_Reachable(new ram::Relation<Auto,1>()),
rel_215_new_Reachable(new ram::Relation<Auto,1>()),
rel_216_ReachableApplicationObjectOfType(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_217_delta_ReachableApplicationObjectOfType(new ram::Relation<Auto,3>()),
rel_218_new_ReachableApplicationObjectOfType(new ram::Relation<Auto,3>()),
rel_219_ReachableContext(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_220_delta_ReachableContext(new ram::Relation<Auto,2, ram::index<1,0>>()),
rel_221_new_ReachableContext(new ram::Relation<Auto,2, ram::index<1,0>>()),
rel_222_ReachableCurrentThreadInvocation(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_223_delta_ReachableCurrentThreadInvocation(new ram::Relation<Auto,2>()),
rel_224_new_ReachableCurrentThreadInvocation(new ram::Relation<Auto,2>()),
rel_225_ReachableLoadArrayIndexBase(new ram::Relation<Auto,1, ram::index<0>>()),
rel_226_delta_ReachableLoadArrayIndexBase(new ram::Relation<Auto,1>()),
rel_227_new_ReachableLoadArrayIndexBase(new ram::Relation<Auto,1>()),
rel_228_ReachableStoreArrayIndexBase(new ram::Relation<Auto,1, ram::index<0>>()),
rel_229_delta_ReachableStoreArrayIndexBase(new ram::Relation<Auto,1>()),
rel_230_new_ReachableStoreArrayIndexBase(new ram::Relation<Auto,1>()),
rel_231_ReachableStoreStaticFieldFrom(new ram::Relation<Auto,1, ram::index<0>>()),
rel_232_delta_ReachableStoreStaticFieldFrom(new ram::Relation<Auto,1>()),
rel_233_new_ReachableStoreStaticFieldFrom(new ram::Relation<Auto,1>()),
rel_234_ReceiverPointsTo(new ram::Relation<Auto,5>()),
rel_235_ReifiedAndroidObjectValue(new ram::Relation<Auto,2, ram::index<1>>()),
rel_236_ReifiedComponent(new ram::Relation<Auto,2>()),
rel_237_ReifiedLayoutControl(new ram::Relation<Auto,3, ram::index<0,1>>()),
rel_238_ReifiedLibraryObject(new ram::Relation<Auto,2>()),
rel_239_RepresentativesToPickFrom(new ram::Relation<Auto,2, ram::index<1>>()),
rel_240_ResolveInvocation(new ram::Relation<Auto,3, ram::index<0,1>>()),
rel_241_ReturnNonvoid_Var(new ram::Relation<Auto,2, ram::index<0>>()),
rel_242_ReturnVar(new ram::Relation<Auto,2, ram::index<1,0>>()),
rel_243_delta_ReturnVar(new ram::Relation<Auto,2, ram::index<1>>()),
rel_244_new_ReturnVar(new ram::Relation<Auto,2, ram::index<1>>()),
rel_245_RunningThread(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_246_delta_RunningThread(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_247_new_RunningThread(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_248_SiteShouldNotBeRefined(new ram::Relation<Auto,1, ram::index<0>>()),
rel_249_SpecialLibraryClass(new ram::Relation<Auto,1, ram::index<0>>()),
rel_250_SpecialLibraryMethod(new ram::Relation<Auto,1, ram::index<0>>()),
rel_251_SpecialLibraryObject(new ram::Relation<Auto,1>()),
rel_252_SpecialMethodInvocation_Base(new ram::Relation<Auto,2, ram::index<0>>()),
rel_253_StaticFieldPointsTo(new ram::Relation<Auto,3, ram::index<2,0,1>>()),
rel_254_delta_StaticFieldPointsTo(new ram::Relation<Auto,3>()),
rel_255_new_StaticFieldPointsTo(new ram::Relation<Auto,3>()),
rel_256_StaticMethodInvocation(new ram::Relation<Auto,3, ram::index<1>, ram::index<2>>()),
rel_257_StaticToActualType(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
rel_258_Stats_Metrics(new ram::Relation<Auto,3>()),
wrapper_rel_258_Stats_Metrics(*rel_258_Stats_Metrics,symTable,"Stats_Metrics",std::array<const char *,3>{"s:symbol","s:symbol","i:number"},std::array<const char *,3>{"order","msg","c"}),
rel_259_Stats_Simple_ApplicationConcreteMethod(new ram::Relation<Auto,1>()),
wrapper_rel_259_Stats_Simple_ApplicationConcreteMethod(*rel_259_Stats_Simple_ApplicationConcreteMethod,symTable,"Stats_Simple_ApplicationConcreteMethod",std::array<const char *,1>{"s:Method"},std::array<const char *,1>{"?method"}),
rel_260_Stats_Simple_Application_ArrayIndexPointsTo(new ram::Relation<Auto,4>()),
wrapper_rel_260_Stats_Simple_Application_ArrayIndexPointsTo(*rel_260_Stats_Simple_Application_ArrayIndexPointsTo,symTable,"Stats_Simple_Application_ArrayIndexPointsTo",std::array<const char *,4>{"r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]","r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]"},std::array<const char *,4>{"?hctx","?value","?baseHCtx","?basevalue"}),
rel_261_Stats_Simple_Application_Cast(new ram::Relation<Auto,4>()),
wrapper_rel_261_Stats_Simple_Application_Cast(*rel_261_Stats_Simple_Application_Cast,symTable,"Stats_Simple_Application_Cast",std::array<const char *,4>{"s:Type","s:Var","s:Var","s:Method"},std::array<const char *,4>{"?type","?from","?to","?inmethod"}),
rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation(new ram::Relation<Auto,1>()),
wrapper_rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation(*rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation,symTable,"Stats_Simple_Application_EmptyVirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo(new ram::Relation<Auto,2>()),
wrapper_rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo(*rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo,symTable,"Stats_Simple_Application_InsensArrayIndexPointsTo",std::array<const char *,2>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Value[s:HeapAllocation,s:NumConstant]"},std::array<const char *,2>{"?value","?basevalue"}),
rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo(new ram::Relation<Auto,3>()),
wrapper_rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo(*rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo,symTable,"Stats_Simple_Application_InsensInstanceFieldPointsTo",std::array<const char *,3>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Field","s:Value[s:HeapAllocation,s:NumConstant]"},std::array<const char *,3>{"?value","?sig","?basevalue"}),
rel_265_Stats_Simple_Application_InsensVarPointsTo(new ram::Relation<Auto,2>()),
wrapper_rel_265_Stats_Simple_Application_InsensVarPointsTo(*rel_265_Stats_Simple_Application_InsensVarPointsTo,symTable,"Stats_Simple_Application_InsensVarPointsTo",std::array<const char *,2>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Var"},std::array<const char *,2>{"?value","?var"}),
rel_266_Stats_Simple_Application_InstanceFieldPointsTo(new ram::Relation<Auto,5>()),
wrapper_rel_266_Stats_Simple_Application_InstanceFieldPointsTo(*rel_266_Stats_Simple_Application_InstanceFieldPointsTo,symTable,"Stats_Simple_Application_InstanceFieldPointsTo",std::array<const char *,5>{"r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]","s:Field","r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]"},std::array<const char *,5>{"?hctx","?value","?sig","?baseHCtx","?basevalue"}),
rel_267_Stats_Simple_Application_NullVirtualMethodInvocation(new ram::Relation<Auto,1>()),
wrapper_rel_267_Stats_Simple_Application_NullVirtualMethodInvocation(*rel_267_Stats_Simple_Application_NullVirtualMethodInvocation,symTable,"Stats_Simple_Application_NullVirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_268_Stats_Simple_Application_PolymorphicCallSite(new ram::Relation<Auto,1>()),
wrapper_rel_268_Stats_Simple_Application_PolymorphicCallSite(*rel_268_Stats_Simple_Application_PolymorphicCallSite,symTable,"Stats_Simple_Application_PolymorphicCallSite",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_269_Stats_Simple_Application_PotentiallyFailingCast(new ram::Relation<Auto,3>()),
wrapper_rel_269_Stats_Simple_Application_PotentiallyFailingCast(*rel_269_Stats_Simple_Application_PotentiallyFailingCast,symTable,"Stats_Simple_Application_PotentiallyFailingCast",std::array<const char *,3>{"s:Type","s:Var","s:Var"},std::array<const char *,3>{"?type","?from","?to"}),
rel_270_Stats_Simple_Application_ReachableCast(new ram::Relation<Auto,4>()),
wrapper_rel_270_Stats_Simple_Application_ReachableCast(*rel_270_Stats_Simple_Application_ReachableCast,symTable,"Stats_Simple_Application_ReachableCast",std::array<const char *,4>{"s:Method","s:Type","s:Var","s:Var"},std::array<const char *,4>{"?inmethod","?type","?to","?from"}),
rel_271_Stats_Simple_Application_ReachableMethod(new ram::Relation<Auto,1>()),
wrapper_rel_271_Stats_Simple_Application_ReachableMethod(*rel_271_Stats_Simple_Application_ReachableMethod,symTable,"Stats_Simple_Application_ReachableMethod",std::array<const char *,1>{"s:Method"},std::array<const char *,1>{"?method"}),
rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation(*rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation,symTable,"Stats_Simple_Application_ReachableVirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_273_Stats_Simple_Application_VarPointsTo(new ram::Relation<Auto,4>()),
wrapper_rel_273_Stats_Simple_Application_VarPointsTo(*rel_273_Stats_Simple_Application_VarPointsTo,symTable,"Stats_Simple_Application_VarPointsTo",std::array<const char *,4>{"r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]","r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:Var"},std::array<const char *,4>{"?hctx","?value","?ctx","?var"}),
rel_274_Stats_Simple_Application_VirtualMethodInvocation(new ram::Relation<Auto,1>()),
wrapper_rel_274_Stats_Simple_Application_VirtualMethodInvocation(*rel_274_Stats_Simple_Application_VirtualMethodInvocation,symTable,"Stats_Simple_Application_VirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_275_Stats_Simple_AssignedVariable(new ram::Relation<Auto,1>()),
wrapper_rel_275_Stats_Simple_AssignedVariable(*rel_275_Stats_Simple_AssignedVariable,symTable,"Stats_Simple_AssignedVariable",std::array<const char *,1>{"s:Var"},std::array<const char *,1>{"?var"}),
rel_276_Stats_Simple_EmptyVirtualMethodInvocation(new ram::Relation<Auto,1>()),
wrapper_rel_276_Stats_Simple_EmptyVirtualMethodInvocation(*rel_276_Stats_Simple_EmptyVirtualMethodInvocation,symTable,"Stats_Simple_EmptyVirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_277_Stats_Simple_InsensArrayIndexPointsTo(new ram::Relation<Auto,2>()),
wrapper_rel_277_Stats_Simple_InsensArrayIndexPointsTo(*rel_277_Stats_Simple_InsensArrayIndexPointsTo,symTable,"Stats_Simple_InsensArrayIndexPointsTo",std::array<const char *,2>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Value[s:HeapAllocation,s:NumConstant]"},std::array<const char *,2>{"?value","?basevalue"}),
rel_278_Stats_Simple_InsensCallGraphEdge(new ram::Relation<Auto,2, ram::index<0>>()),
wrapper_rel_278_Stats_Simple_InsensCallGraphEdge(*rel_278_Stats_Simple_InsensCallGraphEdge,symTable,"Stats_Simple_InsensCallGraphEdge",std::array<const char *,2>{"s:MethodInvocation[s:Instruction]","s:Method"},std::array<const char *,2>{"?from","?to"}),
rel_279_Stats_Simple_InsensInstanceFieldPointsTo(new ram::Relation<Auto,3>()),
wrapper_rel_279_Stats_Simple_InsensInstanceFieldPointsTo(*rel_279_Stats_Simple_InsensInstanceFieldPointsTo,symTable,"Stats_Simple_InsensInstanceFieldPointsTo",std::array<const char *,3>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Field","s:Value[s:HeapAllocation,s:NumConstant]"},std::array<const char *,3>{"?value","?sig","?basevalue"}),
rel_280_Stats_Simple_InsensReachableApplicationMethod(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_280_Stats_Simple_InsensReachableApplicationMethod(*rel_280_Stats_Simple_InsensReachableApplicationMethod,symTable,"Stats_Simple_InsensReachableApplicationMethod",std::array<const char *,1>{"s:Method"},std::array<const char *,1>{"?method"}),
rel_281_Stats_Simple_InsensReachableVar(new ram::Relation<Auto,1>()),
wrapper_rel_281_Stats_Simple_InsensReachableVar(*rel_281_Stats_Simple_InsensReachableVar,symTable,"Stats_Simple_InsensReachableVar",std::array<const char *,1>{"s:Var"},std::array<const char *,1>{"?var"}),
rel_282_Stats_Simple_InsensStaticFieldPointsTo(new ram::Relation<Auto,2>()),
wrapper_rel_282_Stats_Simple_InsensStaticFieldPointsTo(*rel_282_Stats_Simple_InsensStaticFieldPointsTo,symTable,"Stats_Simple_InsensStaticFieldPointsTo",std::array<const char *,2>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Field"},std::array<const char *,2>{"?value","?sig"}),
rel_283_Stats_Simple_InsensVarPointsTo(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
wrapper_rel_283_Stats_Simple_InsensVarPointsTo(*rel_283_Stats_Simple_InsensVarPointsTo,symTable,"Stats_Simple_InsensVarPointsTo",std::array<const char *,2>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Var"},std::array<const char *,2>{"?value","?var"}),
rel_284_Stats_Simple_NonReachableApplicationConcreteMethod(new ram::Relation<Auto,1>()),
wrapper_rel_284_Stats_Simple_NonReachableApplicationConcreteMethod(*rel_284_Stats_Simple_NonReachableApplicationConcreteMethod,symTable,"Stats_Simple_NonReachableApplicationConcreteMethod",std::array<const char *,1>{"s:Method"},std::array<const char *,1>{"?method"}),
rel_285_Stats_Simple_NullVirtualMethodInvocation(new ram::Relation<Auto,1>()),
wrapper_rel_285_Stats_Simple_NullVirtualMethodInvocation(*rel_285_Stats_Simple_NullVirtualMethodInvocation,symTable,"Stats_Simple_NullVirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_286_Stats_Simple_PolymorphicCallSite(new ram::Relation<Auto,1>()),
wrapper_rel_286_Stats_Simple_PolymorphicCallSite(*rel_286_Stats_Simple_PolymorphicCallSite,symTable,"Stats_Simple_PolymorphicCallSite",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_287_Stats_Simple_PotentiallyFailingCast(new ram::Relation<Auto,3>()),
wrapper_rel_287_Stats_Simple_PotentiallyFailingCast(*rel_287_Stats_Simple_PotentiallyFailingCast,symTable,"Stats_Simple_PotentiallyFailingCast",std::array<const char *,3>{"s:Type","s:Var","s:Var"},std::array<const char *,3>{"?type","?from","?to"}),
rel_288_Stats_Simple_ReachableApplicationMethod(new ram::Relation<Auto,2>()),
wrapper_rel_288_Stats_Simple_ReachableApplicationMethod(*rel_288_Stats_Simple_ReachableApplicationMethod,symTable,"Stats_Simple_ReachableApplicationMethod",std::array<const char *,2>{"r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:Method"},std::array<const char *,2>{"?ctx","?method"}),
rel_289_Stats_Simple_ReachableCast(new ram::Relation<Auto,4, ram::index<0>>()),
wrapper_rel_289_Stats_Simple_ReachableCast(*rel_289_Stats_Simple_ReachableCast,symTable,"Stats_Simple_ReachableCast",std::array<const char *,4>{"s:Method","s:Type","s:Var","s:Var"},std::array<const char *,4>{"?inmethod","?type","?to","?from"}),
rel_290_Stats_Simple_ReachableVar(new ram::Relation<Auto,2>()),
wrapper_rel_290_Stats_Simple_ReachableVar(*rel_290_Stats_Simple_ReachableVar,symTable,"Stats_Simple_ReachableVar",std::array<const char *,2>{"r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:Var"},std::array<const char *,2>{"?ctx","?var"}),
rel_291_Stats_Simple_ReachableVirtualMethodInvocation(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_291_Stats_Simple_ReachableVirtualMethodInvocation(*rel_291_Stats_Simple_ReachableVirtualMethodInvocation,symTable,"Stats_Simple_ReachableVirtualMethodInvocation",std::array<const char *,1>{"s:MethodInvocation[s:Instruction]"},std::array<const char *,1>{"?invocation"}),
rel_292_Stats_Simple_VirtualCallGraphEdge(new ram::Relation<Auto,2, ram::index<0>>()),
wrapper_rel_292_Stats_Simple_VirtualCallGraphEdge(*rel_292_Stats_Simple_VirtualCallGraphEdge,symTable,"Stats_Simple_VirtualCallGraphEdge",std::array<const char *,2>{"s:MethodInvocation[s:Instruction]","s:Method"},std::array<const char *,2>{"?from","?to"}),
rel_293_Stats_Simple_VirtualTargets(new ram::Relation<Auto,2>()),
rel_294_StoreArrayIndex(new ram::Relation<Auto,3, ram::index<2>>()),
rel_295_StoreArrayIndex_Base(new ram::Relation<Auto,2, ram::index<0>>()),
rel_296_StoreArrayIndex_From(new ram::Relation<Auto,2, ram::index<0>>()),
rel_297_StoreHeapArrayIndex(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_298_delta_StoreHeapArrayIndex(new ram::Relation<Auto,4>()),
rel_299_new_StoreHeapArrayIndex(new ram::Relation<Auto,4>()),
rel_300_StoreHeapInstanceField(new ram::Relation<Auto,5, ram::index<3,4,0,1,2>>()),
rel_301_delta_StoreHeapInstanceField(new ram::Relation<Auto,5>()),
rel_302_new_StoreHeapInstanceField(new ram::Relation<Auto,5>()),
rel_303_StoreInstanceField(new ram::Relation<Auto,4>()),
rel_304_StoreInstanceField_Base(new ram::Relation<Auto,2, ram::index<0>>()),
rel_305_StoreInstanceField_From(new ram::Relation<Auto,2, ram::index<0>>()),
rel_306_StoreStaticField(new ram::Relation<Auto,3, ram::index<0>, ram::index<2>>()),
rel_307_StoreStaticField_From(new ram::Relation<Auto,2, ram::index<0>>()),
rel_308_StringFactoryHeap(new ram::Relation<Auto,1, ram::index<0>>()),
rel_309_StringFactoryType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_310_Subclass(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_311_delta_Subclass(new ram::Relation<Auto,2>()),
rel_312_new_Subclass(new ram::Relation<Auto,2>()),
rel_313_SubtypeOf(new ram::Relation<Auto,2, ram::index<1>, ram::index<0,1>>()),
rel_314_delta_SubtypeOf(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_315_new_SubtypeOf(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_316_Superinterface(new ram::Relation<Auto,2, ram::index<1,0>>()),
rel_317_delta_Superinterface(new ram::Relation<Auto,2, ram::index<1>>()),
rel_318_new_Superinterface(new ram::Relation<Auto,2, ram::index<1>>()),
rel_319_SupertypeOf(new ram::Relation<Auto,2, ram::index<1,0>>()),
rel_320_SystemThreadGroup(new ram::Relation<Auto,2>()),
rel_321_TamiflexCallGraphEdge(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_322_delta_TamiflexCallGraphEdge(new ram::Relation<Auto,4>()),
rel_323_new_TamiflexCallGraphEdge(new ram::Relation<Auto,4>()),
rel_324_TamiflexConstructorCallGraphEdge(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_325_delta_TamiflexConstructorCallGraphEdge(new ram::Relation<Auto,4>()),
rel_326_new_TamiflexConstructorCallGraphEdge(new ram::Relation<Auto,4>()),
rel_327_TamiflexInvocationArgumentArrayValue(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_328_delta_TamiflexInvocationArgumentArrayValue(new ram::Relation<Auto,4>()),
rel_329_new_TamiflexInvocationArgumentArrayValue(new ram::Relation<Auto,4>()),
rel_330_TamiflexInvocationFirstParam(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_331_delta_TamiflexInvocationFirstParam(new ram::Relation<Auto,4>()),
rel_332_new_TamiflexInvocationFirstParam(new ram::Relation<Auto,4>()),
rel_333_Tamiflex_Array_NewInstance(new ram::Relation<Auto,2>()),
rel_334_Tamiflex_Class_NewInstance(new ram::Relation<Auto,2>()),
rel_335_Tamiflex_Constructor_NewInstance(new ram::Relation<Auto,3>()),
rel_336_Tamiflex_Invoke(new ram::Relation<Auto,3, ram::index<0,1,2>>()),
rel_337_delta_Tamiflex_Invoke(new ram::Relation<Auto,3>()),
rel_338_new_Tamiflex_Invoke(new ram::Relation<Auto,3>()),
rel_339_Tamiflex_ReflectionData(new ram::Relation<Auto,6, ram::index<5>>()),
rel_340_Tamiflex_ReflectionMap(new ram::Relation<Auto,2, ram::index<1>>()),
rel_341_Tamiflex_ReifiedField(new ram::Relation<Auto,3>()),
rel_342_Tamiflex_ReifiedFieldArray(new ram::Relation<Auto,3>()),
rel_343_Tamiflex_ReifiedMethod(new ram::Relation<Auto,3>()),
rel_344_Tamiflex_ReifiedMethodArray(new ram::Relation<Auto,3>()),
rel_345_Temp1(new ram::Relation<Auto,2, ram::index<0,1>>()),
rel_346_delta_Temp1(new ram::Relation<Auto,2>()),
rel_347_new_Temp1(new ram::Relation<Auto,2>()),
rel_348_Temp2(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_349_delta_Temp2(new ram::Relation<Auto,4>()),
rel_350_new_Temp2(new ram::Relation<Auto,4>()),
rel_351_Throw(new ram::Relation<Auto,2>()),
rel_352_ThrowPointsTo(new ram::Relation<Auto,4, ram::index<2,3,0,1>>()),
wrapper_rel_352_ThrowPointsTo(*rel_352_ThrowPointsTo,symTable,"ThrowPointsTo",std::array<const char *,4>{"r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]","r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:Method"},std::array<const char *,4>{"?hctx","?value","?ctx","?method"}),
rel_353_delta_ThrowPointsTo(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_354_new_ThrowPointsTo(new ram::Relation<Auto,4, ram::index<0,1,2,3>>()),
rel_355_Throw_Var(new ram::Relation<Auto,2, ram::index<0>>()),
rel_356_TopLevelEntryPoint(new ram::Relation<Auto,1, ram::index<0>>()),
rel_357_TypeForFormals(new ram::Relation<Auto,3>()),
rel_358_TypeToConcreteImplementationOrd(new ram::Relation<Auto,2>()),
rel_359_Type_byte(new ram::Relation<Auto,1>()),
rel_360_Type_char(new ram::Relation<Auto,1>()),
rel_361_Type_double(new ram::Relation<Auto,1>()),
rel_362_Type_float(new ram::Relation<Auto,1>()),
rel_363_Type_int(new ram::Relation<Auto,1>()),
rel_364_Type_long(new ram::Relation<Auto,1>()),
rel_365_Type_null(new ram::Relation<Auto,1>()),
rel_366_Type_short(new ram::Relation<Auto,1>()),
rel_367_Value_Num(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
rel_368_Value_Type(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
wrapper_rel_368_Value_Type(*rel_368_Value_Type,symTable,"Value_Type",std::array<const char *,2>{"s:Value[s:HeapAllocation,s:NumConstant]","s:Type"},std::array<const char *,2>{"?value","?type"}),
rel_369_Value_isHeap(new ram::Relation<Auto,1>()),
rel_370_Value_isMock(new ram::Relation<Auto,1>()),
rel_371_Value_isNonHeap(new ram::Relation<Auto,1>()),
rel_372_VarPointsTo(new ram::Relation<Auto,4, ram::index<3,2,0,1>>()),
wrapper_rel_372_VarPointsTo(*rel_372_VarPointsTo,symTable,"VarPointsTo",std::array<const char *,4>{"r:HContext{value#s:Value[s:HeapAllocation,s:NumConstant]}","s:Value[s:HeapAllocation,s:NumConstant]","r:Context{value1#s:Value[s:HeapAllocation,s:NumConstant],value2#s:Value[s:HeapAllocation,s:NumConstant]}","s:Var"},std::array<const char *,4>{"?hctx","?value","?ctx","?var"}),
rel_373_delta_VarPointsTo(new ram::Relation<Auto,4, ram::index<3,2>, ram::index<1,0,2,3>>()),
rel_374_new_VarPointsTo(new ram::Relation<Auto,4, ram::index<3,2>, ram::index<1,0,2,3>>()),
rel_375_Var_DeclaringMethod(new ram::Relation<Auto,2, ram::index<0>>()),
rel_376_Var_Type(new ram::Relation<Auto,2, ram::index<0>>()),
rel_377_VarsAtInvocationRetrievingView(new ram::Relation<Auto,2>()),
rel_378_ViewObjectValueFromId(new ram::Relation<Auto,2, ram::index<1>>()),
rel_379_ViewRetrievalByArg0MethodInvocation(new ram::Relation<Auto,1>()),
rel_380_VirtualMethodInvocation(new ram::Relation<Auto,3, ram::index<1>>()),
rel_381_VirtualMethodInvocation_Base(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
rel_382_VirtualMethodInvocation_Descriptor(new ram::Relation<Auto,2, ram::index<0>>()),
rel_383_VirtualMethodInvocation_SimpleName(new ram::Relation<Auto,2>()),
rel_384_Activity(new ram::Relation<Auto,1>()),
wrapper_rel_384_Activity(*rel_384_Activity,symTable,"_Activity",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_385_ActualParam(new ram::Relation<Auto,3, ram::index<1,0>>()),
wrapper_rel_385_ActualParam(*rel_385_ActualParam,symTable,"_ActualParam",std::array<const char *,3>{"i:number","s:symbol","s:symbol"},std::array<const char *,3>{"?index","?invocation","?var"}),
rel_386_AndroidEntryPoint(new ram::Relation<Auto,1>()),
wrapper_rel_386_AndroidEntryPoint(*rel_386_AndroidEntryPoint,symTable,"_AndroidEntryPoint",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?method"}),
rel_387_ApplicationClass(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_387_ApplicationClass(*rel_387_ApplicationClass,symTable,"_ApplicationClass",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?type"}),
rel_388_ArrayType(new ram::Relation<Auto,1>()),
wrapper_rel_388_ArrayType(*rel_388_ArrayType,symTable,"_ArrayType",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?arrayType"}),
rel_389_AssignBinop(new ram::Relation<Auto,4>()),
wrapper_rel_389_AssignBinop(*rel_389_AssignBinop,symTable,"_AssignBinop",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?to","?inmethod"}),
rel_390_AssignCast(new ram::Relation<Auto,6>()),
wrapper_rel_390_AssignCast(*rel_390_AssignCast,symTable,"_AssignCast",std::array<const char *,6>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,6>{"?instruction","?index","?from","?to","?type","?inmethod"}),
rel_391_AssignCastNull(new ram::Relation<Auto,5>()),
wrapper_rel_391_AssignCastNull(*rel_391_AssignCastNull,symTable,"_AssignCastNull",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?to","?type","?method"}),
rel_392_AssignCastNumConstant(new ram::Relation<Auto,6>()),
wrapper_rel_392_AssignCastNumConstant(*rel_392_AssignCastNumConstant,symTable,"_AssignCastNumConstant",std::array<const char *,6>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,6>{"?instruction","?index","?const","?to","?type","?inmethod"}),
rel_393_AssignHeapAllocation(new ram::Relation<Auto,5>()),
wrapper_rel_393_AssignHeapAllocation(*rel_393_AssignHeapAllocation,symTable,"_AssignHeapAllocation",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?heap","?to","?inmethod"}),
rel_394_AssignInstanceOf(new ram::Relation<Auto,6>()),
wrapper_rel_394_AssignInstanceOf(*rel_394_AssignInstanceOf,symTable,"_AssignInstanceOf",std::array<const char *,6>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,6>{"?instruction","?index","?from","?to","?type","?inmethod"}),
rel_395_AssignLocal(new ram::Relation<Auto,5>()),
wrapper_rel_395_AssignLocal(*rel_395_AssignLocal,symTable,"_AssignLocal",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?from","?to","?inmethod"}),
rel_396_AssignNull(new ram::Relation<Auto,4>()),
wrapper_rel_396_AssignNull(*rel_396_AssignNull,symTable,"_AssignNull",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?to","?method"}),
rel_397_AssignNumConstant(new ram::Relation<Auto,5>()),
wrapper_rel_397_AssignNumConstant(*rel_397_AssignNumConstant,symTable,"_AssignNumConstant",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?const","?to","?inmethod"}),
rel_398_AssignPhantomInvoke(new ram::Relation<Auto,3>()),
wrapper_rel_398_AssignPhantomInvoke(*rel_398_AssignPhantomInvoke,symTable,"_AssignPhantomInvoke",std::array<const char *,3>{"s:symbol","i:number","s:symbol"},std::array<const char *,3>{"?instruction","?index","?method"}),
rel_399_AssignReturnValue(new ram::Relation<Auto,2>()),
wrapper_rel_399_AssignReturnValue(*rel_399_AssignReturnValue,symTable,"_AssignReturnValue",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?invocation","?to"}),
rel_400_AssignUnop(new ram::Relation<Auto,4>()),
wrapper_rel_400_AssignUnop(*rel_400_AssignUnop,symTable,"_AssignUnop",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?to","?inmethod"}),
rel_401_BootstrapParam(new ram::Relation<Auto,3>()),
wrapper_rel_401_BootstrapParam(*rel_401_BootstrapParam,symTable,"_BootstrapParam",std::array<const char *,3>{"i:number","s:symbol","s:symbol"},std::array<const char *,3>{"?index","?invocation","?var"}),
rel_402_BreakpointStmt(new ram::Relation<Auto,3>()),
wrapper_rel_402_BreakpointStmt(*rel_402_BreakpointStmt,symTable,"_BreakpointStmt",std::array<const char *,3>{"s:symbol","i:number","s:symbol"},std::array<const char *,3>{"?instruction","?index","?method"}),
rel_403_BroadcastReceiver(new ram::Relation<Auto,1>()),
wrapper_rel_403_BroadcastReceiver(*rel_403_BroadcastReceiver,symTable,"_BroadcastReceiver",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_404_CallbackMethod(new ram::Relation<Auto,1>()),
wrapper_rel_404_CallbackMethod(*rel_404_CallbackMethod,symTable,"_CallbackMethod",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_405_ClassHeap(new ram::Relation<Auto,2>()),
wrapper_rel_405_ClassHeap(*rel_405_ClassHeap,symTable,"_ClassHeap",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?id","?instanceType"}),
rel_406_ClassModifier(new ram::Relation<Auto,2, ram::index<0,1>>()),
wrapper_rel_406_ClassModifier(*rel_406_ClassModifier,symTable,"_ClassModifier",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?class","?modifier"}),
rel_407_ClassType(new ram::Relation<Auto,1>()),
wrapper_rel_407_ClassType(*rel_407_ClassType,symTable,"_ClassType",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?class"}),
rel_408_ComponentType(new ram::Relation<Auto,2, ram::index<0,1>>()),
wrapper_rel_408_ComponentType(*rel_408_ComponentType,symTable,"_ComponentType",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?arrayType","?componentType"}),
rel_409_ContentProvider(new ram::Relation<Auto,1>()),
wrapper_rel_409_ContentProvider(*rel_409_ContentProvider,symTable,"_ContentProvider",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_410_Dacapo(new ram::Relation<Auto,2>()),
wrapper_rel_410_Dacapo(*rel_410_Dacapo,symTable,"_Dacapo",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?id","?method"}),
rel_411_DirectSuperclass(new ram::Relation<Auto,2, ram::index<0>, ram::index<1>>()),
wrapper_rel_411_DirectSuperclass(*rel_411_DirectSuperclass,symTable,"_DirectSuperclass",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?class","?superclass"}),
rel_412_DirectSuperinterface(new ram::Relation<Auto,2>()),
wrapper_rel_412_DirectSuperinterface(*rel_412_DirectSuperinterface,symTable,"_DirectSuperinterface",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?class","?interface"}),
rel_413_DynamicMethodInvocation(new ram::Relation<Auto,5>()),
wrapper_rel_413_DynamicMethodInvocation(*rel_413_DynamicMethodInvocation,symTable,"_DynamicMethodInvocation",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?bootSignature","?dynName","?method"}),
rel_414_EmptyArray(new ram::Relation<Auto,1, ram::index<0>>()),
wrapper_rel_414_EmptyArray(*rel_414_EmptyArray,symTable,"_EmptyArray",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_415_EnterMonitor(new ram::Relation<Auto,4>()),
wrapper_rel_415_EnterMonitor(*rel_415_EnterMonitor,symTable,"_EnterMonitor",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?var","?method"}),
rel_416_ExceptionHandler(new ram::Relation<Auto,7>()),
wrapper_rel_416_ExceptionHandler(*rel_416_ExceptionHandler,symTable,"_ExceptionHandler",std::array<const char *,7>{"s:symbol","s:symbol","i:number","s:symbol","s:symbol","i:number","i:number"},std::array<const char *,7>{"?handler","?method","?index","?type","?var","?begin","?end"}),
rel_417_ExceptionHandler_Previous(new ram::Relation<Auto,2, ram::index<0>>()),
wrapper_rel_417_ExceptionHandler_Previous(*rel_417_ExceptionHandler_Previous,symTable,"_ExceptionHandler_Previous",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?handler","?previous"}),
rel_418_ExitMonitor(new ram::Relation<Auto,4>()),
wrapper_rel_418_ExitMonitor(*rel_418_ExitMonitor,symTable,"_ExitMonitor",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?var","?method"}),
rel_419_Field(new ram::Relation<Auto,4>()),
wrapper_rel_419_Field(*rel_419_Field,symTable,"_Field",std::array<const char *,4>{"s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,4>{"?signature","?declaringClass","?simplename","?type"}),
rel_420_FieldInitialValue(new ram::Relation<Auto,2, ram::index<1>>()),
wrapper_rel_420_FieldInitialValue(*rel_420_FieldInitialValue,symTable,"_FieldInitialValue",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?fld","?valueString"}),
rel_421_Field_Modifier(new ram::Relation<Auto,2, ram::index<0,1>>()),
wrapper_rel_421_Field_Modifier(*rel_421_Field_Modifier,symTable,"_Field_Modifier",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?modifier","?field"}),
rel_422_FormalParam(new ram::Relation<Auto,3, ram::index<1,0>>()),
wrapper_rel_422_FormalParam(*rel_422_FormalParam,symTable,"_FormalParam",std::array<const char *,3>{"i:number","s:symbol","s:symbol"},std::array<const char *,3>{"?index","?method","?var"}),
rel_423_Goto(new ram::Relation<Auto,4>()),
wrapper_rel_423_Goto(*rel_423_Goto,symTable,"_Goto",std::array<const char *,4>{"s:symbol","i:number","i:number","s:symbol"},std::array<const char *,4>{"?instruction","?index","?to","?method"}),
rel_424_If(new ram::Relation<Auto,4>()),
wrapper_rel_424_If(*rel_424_If,symTable,"_If",std::array<const char *,4>{"s:symbol","i:number","i:number","s:symbol"},std::array<const char *,4>{"?instruction","?index","?to","?method"}),
rel_425_InterfaceType(new ram::Relation<Auto,1>()),
wrapper_rel_425_InterfaceType(*rel_425_InterfaceType,symTable,"_InterfaceType",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?interface"}),
rel_426_LayoutControl(new ram::Relation<Auto,3>()),
wrapper_rel_426_LayoutControl(*rel_426_LayoutControl,symTable,"_LayoutControl",std::array<const char *,3>{"s:NumConstant","s:symbol","s:symbol"},std::array<const char *,3>{"?id","?typename","?parent"}),
rel_427_LoadArrayIndex(new ram::Relation<Auto,5>()),
wrapper_rel_427_LoadArrayIndex(*rel_427_LoadArrayIndex,symTable,"_LoadArrayIndex",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?to","?base","?method"}),
rel_428_LoadInstanceField(new ram::Relation<Auto,6>()),
wrapper_rel_428_LoadInstanceField(*rel_428_LoadInstanceField,symTable,"_LoadInstanceField",std::array<const char *,6>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,6>{"?instruction","?index","?to","?base","?signature","?method"}),
rel_429_LoadStaticField(new ram::Relation<Auto,5>()),
wrapper_rel_429_LoadStaticField(*rel_429_LoadStaticField,symTable,"_LoadStaticField",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?to","?signature","?method"}),
rel_430_LookupSwitch(new ram::Relation<Auto,4>()),
wrapper_rel_430_LookupSwitch(*rel_430_LookupSwitch,symTable,"_LookupSwitch",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?key","?method"}),
rel_431_Method(new ram::Relation<Auto,6>()),
wrapper_rel_431_Method(*rel_431_Method,symTable,"_Method",std::array<const char *,6>{"s:symbol","s:symbol","s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,6>{"?method","?simplename","?descriptor","?declaringType","?returnType","?jvmDescriptor"}),
rel_432_MethodHandleConstant(new ram::Relation<Auto,1>()),
wrapper_rel_432_MethodHandleConstant(*rel_432_MethodHandleConstant,symTable,"_MethodHandleConstant",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_433_MethodInvocation_Line(new ram::Relation<Auto,2, ram::index<1>>()),
wrapper_rel_433_MethodInvocation_Line(*rel_433_MethodInvocation_Line,symTable,"_MethodInvocation_Line",std::array<const char *,2>{"s:symbol","i:number"},std::array<const char *,2>{"?instruction","line"}),
rel_434_Method_DeclaresException(new ram::Relation<Auto,2>()),
wrapper_rel_434_Method_DeclaresException(*rel_434_Method_DeclaresException,symTable,"_Method_DeclaresException",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?exceptionType","?method"}),
rel_435_Method_Modifier(new ram::Relation<Auto,2, ram::index<0,1>>()),
wrapper_rel_435_Method_Modifier(*rel_435_Method_Modifier,symTable,"_Method_Modifier",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?mod","?method"}),
rel_436_NativeReturnVar(new ram::Relation<Auto,2>()),
wrapper_rel_436_NativeReturnVar(*rel_436_NativeReturnVar,symTable,"_NativeReturnVar",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?var","?method"}),
rel_437_NormalHeap(new ram::Relation<Auto,2>()),
wrapper_rel_437_NormalHeap(*rel_437_NormalHeap,symTable,"_NormalHeap",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?id","?type"}),
rel_438_PhantomInvoke(new ram::Relation<Auto,3>()),
wrapper_rel_438_PhantomInvoke(*rel_438_PhantomInvoke,symTable,"_PhantomInvoke",std::array<const char *,3>{"s:symbol","i:number","s:symbol"},std::array<const char *,3>{"?instruction","?index","?method"}),
rel_439_Return(new ram::Relation<Auto,4>()),
wrapper_rel_439_Return(*rel_439_Return,symTable,"_Return",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?var","?method"}),
rel_440_ReturnVoid(new ram::Relation<Auto,3>()),
wrapper_rel_440_ReturnVoid(*rel_440_ReturnVoid,symTable,"_ReturnVoid",std::array<const char *,3>{"s:symbol","i:number","s:symbol"},std::array<const char *,3>{"?instruction","?index","?method"}),
rel_441_Service(new ram::Relation<Auto,1>()),
wrapper_rel_441_Service(*rel_441_Service,symTable,"_Service",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_442_SpecialMethodInvocation(new ram::Relation<Auto,5>()),
wrapper_rel_442_SpecialMethodInvocation(*rel_442_SpecialMethodInvocation,symTable,"_SpecialMethodInvocation",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?signature","?base","?method"}),
rel_443_StaticMethodInvocation(new ram::Relation<Auto,4>()),
wrapper_rel_443_StaticMethodInvocation(*rel_443_StaticMethodInvocation,symTable,"_StaticMethodInvocation",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?signature","?method"}),
rel_444_StoreArrayIndex(new ram::Relation<Auto,5>()),
wrapper_rel_444_StoreArrayIndex(*rel_444_StoreArrayIndex,symTable,"_StoreArrayIndex",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?from","?base","?method"}),
rel_445_StoreInstanceField(new ram::Relation<Auto,6>()),
wrapper_rel_445_StoreInstanceField(*rel_445_StoreInstanceField,symTable,"_StoreInstanceField",std::array<const char *,6>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol","s:symbol"},std::array<const char *,6>{"?instruction","?index","?from","?base","?signature","?method"}),
rel_446_StoreStaticField(new ram::Relation<Auto,5>()),
wrapper_rel_446_StoreStaticField(*rel_446_StoreStaticField,symTable,"_StoreStaticField",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?from","?signature","?method"}),
rel_447_StringConstant(new ram::Relation<Auto,1>()),
wrapper_rel_447_StringConstant(*rel_447_StringConstant,symTable,"_StringConstant",std::array<const char *,1>{"s:symbol"},std::array<const char *,1>{"?id"}),
rel_448_TableSwitch(new ram::Relation<Auto,4>()),
wrapper_rel_448_TableSwitch(*rel_448_TableSwitch,symTable,"_TableSwitch",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?key","?method"}),
rel_449_Tamiflex_ReflectionData(new ram::Relation<Auto,6>()),
wrapper_rel_449_Tamiflex_ReflectionData(*rel_449_Tamiflex_ReflectionData,symTable,"_Tamiflex_ReflectionData",std::array<const char *,6>{"s:symbol","s:symbol","s:symbol","s:symbol","s:symbol","i:number"},std::array<const char *,6>{"?classStr","?methodStr","?mapped","?inClassStr","?inMethodStr","?lineNumber"}),
rel_450_Tamiflex_ToDoopFormat(new ram::Relation<Auto,2, ram::index<0>>()),
rel_451_ThisVar(new ram::Relation<Auto,2, ram::index<0>>()),
wrapper_rel_451_ThisVar(*rel_451_ThisVar,symTable,"_ThisVar",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?method","?var"}),
rel_452_Throw(new ram::Relation<Auto,4>()),
wrapper_rel_452_Throw(*rel_452_Throw,symTable,"_Throw",std::array<const char *,4>{"s:symbol","i:number","s:symbol","s:symbol"},std::array<const char *,4>{"?instruction","?index","?var","?method"}),
rel_453_ThrowNull(new ram::Relation<Auto,3>()),
wrapper_rel_453_ThrowNull(*rel_453_ThrowNull,symTable,"_ThrowNull",std::array<const char *,3>{"s:symbol","i:number","s:symbol"},std::array<const char *,3>{"?instruction","?index","?method"}),
rel_454_UnsupportedInstruction(new ram::Relation<Auto,3>()),
wrapper_rel_454_UnsupportedInstruction(*rel_454_UnsupportedInstruction,symTable,"_UnsupportedInstruction",std::array<const char *,3>{"s:symbol","i:number","s:symbol"},std::array<const char *,3>{"?instruction","?index","?method"}),
rel_455_Var_DeclaringMethod(new ram::Relation<Auto,2>()),
wrapper_rel_455_Var_DeclaringMethod(*rel_455_Var_DeclaringMethod,symTable,"_Var_DeclaringMethod",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?var","?method"}),
rel_456_Var_Type(new ram::Relation<Auto,2>()),
wrapper_rel_456_Var_Type(*rel_456_Var_Type,symTable,"_Var_Type",std::array<const char *,2>{"s:symbol","s:symbol"},std::array<const char *,2>{"?var","?type"}),
rel_457_VirtualMethodInvocation(new ram::Relation<Auto,5>()),
wrapper_rel_457_VirtualMethodInvocation(*rel_457_VirtualMethodInvocation,symTable,"_VirtualMethodInvocation",std::array<const char *,5>{"s:symbol","i:number","s:symbol","s:symbol","s:symbol"},std::array<const char *,5>{"?instruction","?index","?signature","?base","?method"}),
rel_458_isArrayType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_459_isAssignCast_Insn(new ram::Relation<Auto,1>()),
rel_460_isAssignHeapAllocation_Insn(new ram::Relation<Auto,1>()),
rel_461_isAssignLocal_Insn(new ram::Relation<Auto,1>()),
rel_462_isAssignNull_Insn(new ram::Relation<Auto,1>()),
rel_463_isClassHeap(new ram::Relation<Auto,1>()),
rel_464_isClassType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_465_isClinitContext(new ram::Relation<Auto,1>()),
rel_466_isContext(new ram::Relation<Auto,1, ram::index<0>>()),
rel_467_delta_isContext(new ram::Relation<Auto,1>()),
rel_468_new_isContext(new ram::Relation<Auto,1>()),
rel_469_isExceptionHandler(new ram::Relation<Auto,1>()),
rel_470_isField(new ram::Relation<Auto,1, ram::index<0>>()),
rel_471_isHContext(new ram::Relation<Auto,1, ram::index<0>>()),
rel_472_delta_isHContext(new ram::Relation<Auto,1>()),
rel_473_new_isHContext(new ram::Relation<Auto,1>()),
rel_474_isHeapAllocation(new ram::Relation<Auto,1, ram::index<0>>()),
rel_475_isImmutableContext(new ram::Relation<Auto,1>()),
rel_476_isImmutableHContext(new ram::Relation<Auto,1>()),
rel_477_isInitialContext(new ram::Relation<Auto,1>()),
rel_478_isInstruction(new ram::Relation<Auto,1, ram::index<0>>()),
rel_479_isInterfaceType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_480_isJVMStartupContext(new ram::Relation<Auto,1>()),
rel_481_isJVMStartupHContext(new ram::Relation<Auto,1>()),
rel_482_isLoadArrayIndex_Insn(new ram::Relation<Auto,1>()),
rel_483_isLoadInstanceField_Insn(new ram::Relation<Auto,1>()),
rel_484_isLoadStaticField_Insn(new ram::Relation<Auto,1>()),
rel_485_isMethod(new ram::Relation<Auto,1, ram::index<0>>()),
rel_486_isMethodInvocation(new ram::Relation<Auto,1, ram::index<0>>()),
rel_487_isNumConstant(new ram::Relation<Auto,1>()),
rel_488_isPrimitiveType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_489_isReferenceType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_490_isReturnNonvoid_Insn(new ram::Relation<Auto,1>()),
rel_491_isStaticMethodInvocation_Insn(new ram::Relation<Auto,1, ram::index<0>>()),
rel_492_isStoreArrayIndex_Insn(new ram::Relation<Auto,1>()),
rel_493_isStoreInstanceField_Insn(new ram::Relation<Auto,1>()),
rel_494_isStoreStaticField_Insn(new ram::Relation<Auto,1>()),
rel_495_isStringConstant(new ram::Relation<Auto,1, ram::index<0>>()),
rel_496_isThrow_Insn(new ram::Relation<Auto,1>()),
rel_497_isType(new ram::Relation<Auto,1, ram::index<0>>()),
rel_498_isValue(new ram::Relation<Auto,1, ram::index<0>>()),
rel_499_isVar(new ram::Relation<Auto,1, ram::index<0>>()),
rel_500_isVirtualMethodInvocation_Insn(new ram::Relation<Auto,1, ram::index<0>>()){
addRelation("ApplicationMethod",&wrapper_rel_11_ApplicationMethod,0,1);
addRelation("CallGraphEdge",&wrapper_rel_36_CallGraphEdge,0,1);
addRelation("OptVirtualMethodInvocationBase",&wrapper_rel_191_OptVirtualMethodInvocationBase,0,1);
addRelation("Reachable",&wrapper_rel_213_Reachable,0,1);
addRelation("Stats_Metrics",&wrapper_rel_258_Stats_Metrics,0,1);
addRelation("Stats_Simple_ApplicationConcreteMethod",&wrapper_rel_259_Stats_Simple_ApplicationConcreteMethod,0,1);
addRelation("Stats_Simple_Application_ArrayIndexPointsTo",&wrapper_rel_260_Stats_Simple_Application_ArrayIndexPointsTo,0,1);
addRelation("Stats_Simple_Application_Cast",&wrapper_rel_261_Stats_Simple_Application_Cast,0,1);
addRelation("Stats_Simple_Application_EmptyVirtualMethodInvocation",&wrapper_rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation,0,1);
addRelation("Stats_Simple_Application_InsensArrayIndexPointsTo",&wrapper_rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo,0,1);
addRelation("Stats_Simple_Application_InsensInstanceFieldPointsTo",&wrapper_rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo,0,1);
addRelation("Stats_Simple_Application_InsensVarPointsTo",&wrapper_rel_265_Stats_Simple_Application_InsensVarPointsTo,0,1);
addRelation("Stats_Simple_Application_InstanceFieldPointsTo",&wrapper_rel_266_Stats_Simple_Application_InstanceFieldPointsTo,0,1);
addRelation("Stats_Simple_Application_NullVirtualMethodInvocation",&wrapper_rel_267_Stats_Simple_Application_NullVirtualMethodInvocation,0,1);
addRelation("Stats_Simple_Application_PolymorphicCallSite",&wrapper_rel_268_Stats_Simple_Application_PolymorphicCallSite,0,1);
addRelation("Stats_Simple_Application_PotentiallyFailingCast",&wrapper_rel_269_Stats_Simple_Application_PotentiallyFailingCast,0,1);
addRelation("Stats_Simple_Application_ReachableCast",&wrapper_rel_270_Stats_Simple_Application_ReachableCast,0,1);
addRelation("Stats_Simple_Application_ReachableMethod",&wrapper_rel_271_Stats_Simple_Application_ReachableMethod,0,1);
addRelation("Stats_Simple_Application_ReachableVirtualMethodInvocation",&wrapper_rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation,0,1);
addRelation("Stats_Simple_Application_VarPointsTo",&wrapper_rel_273_Stats_Simple_Application_VarPointsTo,0,1);
addRelation("Stats_Simple_Application_VirtualMethodInvocation",&wrapper_rel_274_Stats_Simple_Application_VirtualMethodInvocation,0,1);
addRelation("Stats_Simple_AssignedVariable",&wrapper_rel_275_Stats_Simple_AssignedVariable,0,1);
addRelation("Stats_Simple_EmptyVirtualMethodInvocation",&wrapper_rel_276_Stats_Simple_EmptyVirtualMethodInvocation,0,1);
addRelation("Stats_Simple_InsensArrayIndexPointsTo",&wrapper_rel_277_Stats_Simple_InsensArrayIndexPointsTo,0,1);
addRelation("Stats_Simple_InsensCallGraphEdge",&wrapper_rel_278_Stats_Simple_InsensCallGraphEdge,0,1);
addRelation("Stats_Simple_InsensInstanceFieldPointsTo",&wrapper_rel_279_Stats_Simple_InsensInstanceFieldPointsTo,0,1);
addRelation("Stats_Simple_InsensReachableApplicationMethod",&wrapper_rel_280_Stats_Simple_InsensReachableApplicationMethod,0,1);
addRelation("Stats_Simple_InsensReachableVar",&wrapper_rel_281_Stats_Simple_InsensReachableVar,0,1);
addRelation("Stats_Simple_InsensStaticFieldPointsTo",&wrapper_rel_282_Stats_Simple_InsensStaticFieldPointsTo,0,1);
addRelation("Stats_Simple_InsensVarPointsTo",&wrapper_rel_283_Stats_Simple_InsensVarPointsTo,0,1);
addRelation("Stats_Simple_NonReachableApplicationConcreteMethod",&wrapper_rel_284_Stats_Simple_NonReachableApplicationConcreteMethod,0,1);
addRelation("Stats_Simple_NullVirtualMethodInvocation",&wrapper_rel_285_Stats_Simple_NullVirtualMethodInvocation,0,1);
addRelation("Stats_Simple_PolymorphicCallSite",&wrapper_rel_286_Stats_Simple_PolymorphicCallSite,0,1);
addRelation("Stats_Simple_PotentiallyFailingCast",&wrapper_rel_287_Stats_Simple_PotentiallyFailingCast,0,1);
addRelation("Stats_Simple_ReachableApplicationMethod",&wrapper_rel_288_Stats_Simple_ReachableApplicationMethod,0,1);
addRelation("Stats_Simple_ReachableCast",&wrapper_rel_289_Stats_Simple_ReachableCast,0,1);
addRelation("Stats_Simple_ReachableVar",&wrapper_rel_290_Stats_Simple_ReachableVar,0,1);
addRelation("Stats_Simple_ReachableVirtualMethodInvocation",&wrapper_rel_291_Stats_Simple_ReachableVirtualMethodInvocation,0,1);
addRelation("Stats_Simple_VirtualCallGraphEdge",&wrapper_rel_292_Stats_Simple_VirtualCallGraphEdge,0,1);
addRelation("ThrowPointsTo",&wrapper_rel_352_ThrowPointsTo,0,1);
addRelation("Value_Type",&wrapper_rel_368_Value_Type,0,1);
addRelation("VarPointsTo",&wrapper_rel_372_VarPointsTo,0,1);
addRelation("_Activity",&wrapper_rel_384_Activity,1,0);
addRelation("_ActualParam",&wrapper_rel_385_ActualParam,1,0);
addRelation("_AndroidEntryPoint",&wrapper_rel_386_AndroidEntryPoint,1,0);
addRelation("_ApplicationClass",&wrapper_rel_387_ApplicationClass,1,0);
addRelation("_ArrayType",&wrapper_rel_388_ArrayType,1,0);
addRelation("_AssignBinop",&wrapper_rel_389_AssignBinop,1,0);
addRelation("_AssignCast",&wrapper_rel_390_AssignCast,1,0);
addRelation("_AssignCastNull",&wrapper_rel_391_AssignCastNull,1,0);
addRelation("_AssignCastNumConstant",&wrapper_rel_392_AssignCastNumConstant,1,0);
addRelation("_AssignHeapAllocation",&wrapper_rel_393_AssignHeapAllocation,1,0);
addRelation("_AssignInstanceOf",&wrapper_rel_394_AssignInstanceOf,1,0);
addRelation("_AssignLocal",&wrapper_rel_395_AssignLocal,1,0);
addRelation("_AssignNull",&wrapper_rel_396_AssignNull,1,0);
addRelation("_AssignNumConstant",&wrapper_rel_397_AssignNumConstant,1,0);
addRelation("_AssignPhantomInvoke",&wrapper_rel_398_AssignPhantomInvoke,1,0);
addRelation("_AssignReturnValue",&wrapper_rel_399_AssignReturnValue,1,0);
addRelation("_AssignUnop",&wrapper_rel_400_AssignUnop,1,0);
addRelation("_BootstrapParam",&wrapper_rel_401_BootstrapParam,1,0);
addRelation("_BreakpointStmt",&wrapper_rel_402_BreakpointStmt,1,0);
addRelation("_BroadcastReceiver",&wrapper_rel_403_BroadcastReceiver,1,0);
addRelation("_CallbackMethod",&wrapper_rel_404_CallbackMethod,1,0);
addRelation("_ClassHeap",&wrapper_rel_405_ClassHeap,1,0);
addRelation("_ClassModifier",&wrapper_rel_406_ClassModifier,1,0);
addRelation("_ClassType",&wrapper_rel_407_ClassType,1,0);
addRelation("_ComponentType",&wrapper_rel_408_ComponentType,1,0);
addRelation("_ContentProvider",&wrapper_rel_409_ContentProvider,1,0);
addRelation("_Dacapo",&wrapper_rel_410_Dacapo,1,0);
addRelation("_DirectSuperclass",&wrapper_rel_411_DirectSuperclass,1,0);
addRelation("_DirectSuperinterface",&wrapper_rel_412_DirectSuperinterface,1,0);
addRelation("_DynamicMethodInvocation",&wrapper_rel_413_DynamicMethodInvocation,1,0);
addRelation("_EmptyArray",&wrapper_rel_414_EmptyArray,1,0);
addRelation("_EnterMonitor",&wrapper_rel_415_EnterMonitor,1,0);
addRelation("_ExceptionHandler",&wrapper_rel_416_ExceptionHandler,1,0);
addRelation("_ExceptionHandler_Previous",&wrapper_rel_417_ExceptionHandler_Previous,1,0);
addRelation("_ExitMonitor",&wrapper_rel_418_ExitMonitor,1,0);
addRelation("_Field",&wrapper_rel_419_Field,1,0);
addRelation("_FieldInitialValue",&wrapper_rel_420_FieldInitialValue,1,0);
addRelation("_Field_Modifier",&wrapper_rel_421_Field_Modifier,1,0);
addRelation("_FormalParam",&wrapper_rel_422_FormalParam,1,0);
addRelation("_Goto",&wrapper_rel_423_Goto,1,0);
addRelation("_If",&wrapper_rel_424_If,1,0);
addRelation("_InterfaceType",&wrapper_rel_425_InterfaceType,1,0);
addRelation("_LayoutControl",&wrapper_rel_426_LayoutControl,1,0);
addRelation("_LoadArrayIndex",&wrapper_rel_427_LoadArrayIndex,1,0);
addRelation("_LoadInstanceField",&wrapper_rel_428_LoadInstanceField,1,0);
addRelation("_LoadStaticField",&wrapper_rel_429_LoadStaticField,1,0);
addRelation("_LookupSwitch",&wrapper_rel_430_LookupSwitch,1,0);
addRelation("_Method",&wrapper_rel_431_Method,1,0);
addRelation("_MethodHandleConstant",&wrapper_rel_432_MethodHandleConstant,1,0);
addRelation("_MethodInvocation_Line",&wrapper_rel_433_MethodInvocation_Line,1,0);
addRelation("_Method_DeclaresException",&wrapper_rel_434_Method_DeclaresException,1,0);
addRelation("_Method_Modifier",&wrapper_rel_435_Method_Modifier,1,0);
addRelation("_NativeReturnVar",&wrapper_rel_436_NativeReturnVar,1,0);
addRelation("_NormalHeap",&wrapper_rel_437_NormalHeap,1,0);
addRelation("_PhantomInvoke",&wrapper_rel_438_PhantomInvoke,1,0);
addRelation("_Return",&wrapper_rel_439_Return,1,0);
addRelation("_ReturnVoid",&wrapper_rel_440_ReturnVoid,1,0);
addRelation("_Service",&wrapper_rel_441_Service,1,0);
addRelation("_SpecialMethodInvocation",&wrapper_rel_442_SpecialMethodInvocation,1,0);
addRelation("_StaticMethodInvocation",&wrapper_rel_443_StaticMethodInvocation,1,0);
addRelation("_StoreArrayIndex",&wrapper_rel_444_StoreArrayIndex,1,0);
addRelation("_StoreInstanceField",&wrapper_rel_445_StoreInstanceField,1,0);
addRelation("_StoreStaticField",&wrapper_rel_446_StoreStaticField,1,0);
addRelation("_StringConstant",&wrapper_rel_447_StringConstant,1,0);
addRelation("_TableSwitch",&wrapper_rel_448_TableSwitch,1,0);
addRelation("_Tamiflex_ReflectionData",&wrapper_rel_449_Tamiflex_ReflectionData,1,0);
addRelation("_ThisVar",&wrapper_rel_451_ThisVar,1,0);
addRelation("_Throw",&wrapper_rel_452_Throw,1,0);
addRelation("_ThrowNull",&wrapper_rel_453_ThrowNull,1,0);
addRelation("_UnsupportedInstruction",&wrapper_rel_454_UnsupportedInstruction,1,0);
addRelation("_Var_DeclaringMethod",&wrapper_rel_455_Var_DeclaringMethod,1,0);
addRelation("_Var_Type",&wrapper_rel_456_Var_Type,1,0);
addRelation("_VirtualMethodInvocation",&wrapper_rel_457_VirtualMethodInvocation,1,0);
// -- initialize symbol table --
static const char *symbols[]={
	R"(java.lang.String)",
	R"(java.lang.Class)",
	R"(java.lang.invoke.MethodHandle)",
	R"(abstract)",
	R"(public)",
	R"(private)",
	R"(final)",
	R"(static)",
	R"(boolean)",
	R"(byte)",
	R"(char)",
	R"(short)",
	R"(int)",
	R"(long)",
	R"(float)",
	R"(double)",
	R"(void)",
	R"(null_type)",
	R"(java.lang.Object)",
	R"(<<null pseudo heap>>)",
	R"(<<main method array>>)",
	R"(java.lang.String[])",
	R"(<<main method array content>>)",
	R"(java.io.FileSystem.getFileSystem/new java.io.UnixFileSystem)",
	R"(java.io.UnixFileSystem)",
	R"(java.io.UnixFileSystem.list/new java.lang.String[])",
	R"(java.io.UnixFileSystem.list/new java.lang.String)",
	R"(<<string-constant>>)",
	R"(<<reflection-string-constant>>)",
	R"(<<string-buffer>>)",
	R"(java.lang.StringBuffer)",
	R"(<<string-builder>>)",
	R"(java.lang.StringBuilder)",
	R"(<<system-thread-group>>)",
	R"(<<main-thread-group>>)",
	R"(java.lang.ThreadGroup)",
	R"(<<main-thread>>)",
	R"(java.lang.Thread)",
	R"(<<initial-context>>)",
	R"(<<jvm-startup-context>>)",
	R"(<<jvm-startup-hcontext>>)",
	R"(<<clinit-context>>)",
	R"(<<immutable-context>>)",
	R"(<<immutable-hcontext>>)",
	R"(<<immutable>>)",
	R"(Class)",
	R"(Constructor)",
	R"(java.lang.reflect.Constructor)",
	R"(Field)",
	R"(java.lang.reflect.Field)",
	R"(Method)",
	R"(java.lang.reflect.Method)",
	R"(Array)",
	R"(java.lang.reflect.Array)",
	R"(get*)",
	R"(get)",
	R"(set*)",
	R"(set)",
	R"(finalize)",
	R"(void())",
	R"(<java.lang.Object: void finalize()>)",
	R"(protected)",
	R"(.*<init>.*)",
	R"(java.lang.Cloneable)",
	R"(java.io.Serializable)",
	R"(java.lang.ClassLoader)",
	R"(java.lang.SecurityManager)",
	R"(main)",
	R"(void(java.lang.String[]))",
	R"(java.lang.System)",
	R"(<register-finalize )",
	R"(/)",
	R"(  >)",
	R"(<android component object )",
	R"(>)",
	R"(<layout control object )",
	R"( of type )",
	R"(android.content.Intent)",
	R"(android.os.Bundle)",
	R"(<android library object )",
	R"(^android.*)",
	R"(android.view.View)",
	R"(android.view.ViewGroup)",
	R"(Listener)",
	R"(Callback)",
	R"(^on.*)",
	R"(inflate)",
	R"(getView)",
	R"(findViewById)",
	R"(<clinit>)",
	R"(<java.lang.ref.Finalizer: void register(java.lang.Object)>)",
	R"(<java.lang.System: void initializeSystemClass()>)",
	R"(<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)>)",
	R"(<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)>)",
	R"(<java.lang.ThreadGroup: void <init>()>)",
	R"(<java.lang.Thread: void exit()>)",
	R"(<java.lang.ThreadGroup: void uncaughtException(java.lang.Thread,java.lang.Throwable)>)",
	R"(<java.lang.ClassLoader: void <init>()>)",
	R"(<java.lang.ClassLoader: java.lang.Class loadClassInternal(java.lang.String)>)",
	R"(<java.lang.ClassLoader: void checkPackageAccess(java.lang.Class,java.security.ProtectionDomain)>)",
	R"(<java.lang.ClassLoader: void addClass(java.lang.Class)>)",
	R"(<java.lang.ClassLoader: long findNative(java.lang.ClassLoader,java.lang.String)>)",
	R"(<java.security.PrivilegedActionException: void <init>(java.lang.Exception)>)",
	R"(java.lang.Object.clone/@this)",
	R"(java.lang.Object.clone/@native-return)",
	R"(<java.lang.Object: java.lang.Object clone()>)",
	R"(java.lang.System.setIn0/@param0)",
	R"(<java.lang.System: java.io.InputStream in>)",
	R"(<java.lang.System: void setIn0(java.io.InputStream)>)",
	R"(java.lang.System.setOut0/@param0)",
	R"(<java.lang.System: java.io.PrintStream out>)",
	R"(<java.lang.System: void setOut0(java.io.PrintStream)>)",
	R"(java.lang.System.setErr0/@param0)",
	R"(<java.lang.System: java.io.PrintStream err>)",
	R"(<java.lang.System: void setErr0(java.io.PrintStream)>)",
	R"(/@tmp-arraycopy)",
	R"(<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>)",
	R"(<sun.misc.Unsafe: boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object)>)",
	R"(<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>)",
	R"(<sun.misc.Unsafe: void putObject(java.lang.Object,int,java.lang.Object)>)",
	R"(<sun.misc.Unsafe: void putObjectVolatile(java.lang.Object,long,java.lang.Object)>)",
	R"(<sun.misc.Unsafe: void putOrderedObject(java.lang.Object,long,java.lang.Object)>)",
	R"(<sun.misc.Unsafe: java.lang.Object getObjectVolatile(java.lang.Object,long)>)",
	R"(<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>)",
	R"(<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,int)>)",
	R"(<java.io.FileSystem: java.io.FileSystem getFileSystem()>)",
	R"(/native)",
	R"(<java.io.UnixFileSystem: void <init>()>)",
	R"(<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>)",
	R"(/@native-array-element)",
	R"(<java.lang.ref.Finalizer: void invokeFinalizeMethod(java.lang.Object)>)",
	R"(/native )",
	R"(<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>)",
	R"(<java.security.PrivilegedAction: java.lang.Object run()>)",
	R"(<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>)",
	R"(<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>)",
	R"(<java.security.PrivilegedExceptionAction: java.lang.Object run()>)",
	R"(<java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>)",
	R"(<java.lang.ref.Reference: java.lang.ref.Reference pending>)",
	R"(<java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/@this)",
	R"(<init>)",
	R"(java.lang.Throwable)",
	R"(.)",
	R"(java\.util.*)",
	R"(<java.lang.Thread: void start0()>)",
	R"(run)",
	R"(<java.lang.Thread: java.lang.Thread currentThread()>)",
	R"(<java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>)",
	R"(num-constant-)",
	R"(.R$)",
	R"(true)",
	R"(::: (Mock))",
	R"(<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>)",
	R"(<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>)",
	R"(<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>)",
	R"(<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>)",
	R"(<(Tamiflex) )",
	R"(<java.lang.Class: java.lang.Object newInstance()>)",
	R"(<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>)",
	R"(<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>)",
	R"(<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>)",
	R"(<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>)",
	R"(/Field[]>)",
	R"(<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>)",
	R"(<java.lang.Class: java.lang.reflect.Field[] getFields()>)",
	R"(java.lang.reflect.Field[])",
	R"(<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>)",
	R"(<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>)",
	R"(/Method[]>)",
	R"(<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>)",
	R"(<java.lang.Class: java.lang.reflect.Method[] getMethods()>)",
	R"(java.lang.reflect.Method[])",
	R"(<java.lang.Class: java.lang.Class forName(java.lang.String)>)",
	R"(<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>)",
	R"(<class )",
	R"(<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>)",
	R"(Harness)",
	R"(1.0)",
	R"(var points-to (INS))",
	R"(1.5)",
	R"(var points-to (SENS))",
	R"(5.0)",
	R"(app var points-to (INS))",
	R"(5.5)",
	R"(app var points-to (SENS))",
	R"(10.0)",
	R"(reachable variables (INS))",
	R"(10.5)",
	R"(reachable variables (SENS))",
	R"(2.0)",
	R"(array index points-to (INS))",
	R"(2.5)",
	R"(array index points-to (SENS))",
	R"(6.0)",
	R"(app array index points-to (INS))",
	R"(6.5)",
	R"(app array index points-to (SENS))",
	R"(3.0)",
	R"(instance field points-to (INS))",
	R"(3.5)",
	R"(instance field points-to (SENS))",
	R"(4.0)",
	R"(static field points-to (INS))",
	R"(4.5)",
	R"(static field points-to (SENS))",
	R"(7.0)",
	R"(app instance field points-to (INS))",
	R"(7.5)",
	R"(app instance field points-to (SENS))",
	R"(8.0)",
	R"(call graph edges (INS))",
	R"(8.5)",
	R"(call graph edges (SENS))",
	R"(9.0)",
	R"(non-reachable app concrete methods)",
	R"(11.0)",
	R"(reachable methods (INS))",
	R"(11.5)",
	R"(reachable methods (SENS))",
	R"(12.0)",
	R"(virtual call sites (statically))",
	R"(13.0)",
	R"(reachable virtual call sites)",
	R"(14.0)",
	R"(polymorphic virtual call sites)",
	R"(15.0)",
	R"(null virtual call sites)",
	R"(15.5)",
	R"(empty virtual call sites)",
	R"(16.0)",
	R"(app virtual call sites (statically))",
	R"(17.0)",
	R"(app reachable virtual call sites)",
	R"(18.0)",
	R"(app polymorphic virtual call sites)",
	R"(19.0)",
	R"(app null virtual call sites)",
	R"(19.5)",
	R"(app empty virtual call sites)",
	R"(20.0)",
	R"(casts (statically))",
	R"(21.0)",
	R"(reachable casts)",
	R"(22.0)",
	R"(reachable casts that may fail)",
	R"(23.0)",
	R"(app casts (statically))",
	R"(24.0)",
	R"(app reachable casts)",
	R"(25.0)",
	R"(app reachable casts that may fail)",
	R"(25.5)",
	R"(app reachable methods)",
};
symTable.insert(symbols,253);

}
~Sf_pts2o1h_interface() {
delete rel_1_AllConcreteImplementations;
delete rel_2_AllocatedObjectSupportsFinalize;
delete rel_3_AllocationShouldBeMergedPerMethod;
delete rel_4_AllocationsPerMethodAndType;
delete rel_5_AndroidAppComponent;
delete rel_6_AndroidApplicationClass;
delete rel_7_AndroidApplicationListenerClass;
delete rel_8_AndroidLibraryListenerType;
delete rel_9_AndroidLibraryType;
delete rel_10_AppMethodOverridesAndroidLibraryMethod;
delete rel_11_ApplicationMethod;
delete rel_12_ApplicationObjectFlowingToLibrary;
delete rel_13_delta_ApplicationObjectFlowingToLibrary;
delete rel_14_new_ApplicationObjectFlowingToLibrary;
delete rel_15_ApplicationObjectFlowingToLibraryStaticType;
delete rel_16_delta_ApplicationObjectFlowingToLibraryStaticType;
delete rel_17_new_ApplicationObjectFlowingToLibraryStaticType;
delete rel_18_ApplicationVar;
delete rel_19_ArrayIndexPointsTo;
delete rel_20_delta_ArrayIndexPointsTo;
delete rel_21_new_ArrayIndexPointsTo;
delete rel_22_AssignCast;
delete rel_23_AssignCastNumConstant_Id;
delete rel_24_AssignCast_From;
delete rel_25_AssignCast_Type;
delete rel_26_AssignContextInsensitiveHeapAllocation;
delete rel_27_AssignHeapAllocation;
delete rel_28_AssignHeapAllocation_Heap;
delete rel_29_AssignInstruction_To;
delete rel_30_AssignLocal;
delete rel_31_AssignLocal_From;
delete rel_32_AssignNormalHeapAllocation;
delete rel_33_AssignNull;
delete rel_34_AssignNumConstant_Id;
delete rel_35_AssignReturnValue;
delete rel_36_CallGraphEdge;
delete rel_37_delta_CallGraphEdge;
delete rel_38_new_CallGraphEdge;
delete rel_39_ClassHasPossibleEntryPoint;
delete rel_40_ClassInitializer;
delete rel_41_ClassIsAboveOtherInNamingHierarchy;
delete rel_42_ClassNameIndexes;
delete rel_43_delta_ClassNameIndexes;
delete rel_44_new_ClassNameIndexes;
delete rel_45_ClassWithTopLevelEntryPoint;
delete rel_46_CollectionLibraryClass;
delete rel_47_ConcreteClass;
delete rel_48_ConcreteImplementations;
delete rel_49_ConcreteType;
delete rel_50_ContextForEntryPoint;
delete rel_51_DotsInClassName;
delete rel_52_ExceptionHandler_Before;
delete rel_53_delta_ExceptionHandler_Before;
delete rel_54_new_ExceptionHandler_Before;
delete rel_55_ExceptionHandler_Begin;
delete rel_56_ExceptionHandler_End;
delete rel_57_ExceptionHandler_FormalParam;
delete rel_58_ExceptionHandler_Impossible;
delete rel_59_ExceptionHandler_InRange;
delete rel_60_ExceptionHandler_Index;
delete rel_61_ExceptionHandler_Method;
delete rel_62_ExceptionHandler_SameBlock_PartialOrder;
delete rel_63_ExceptionHandler_SameBlock_Repr;
delete rel_64_ExceptionHandler_SameInsn_PartialOrder;
delete rel_65_ExceptionHandler_SameInsn_Repr;
delete rel_66_ExceptionHandler_Type;
delete rel_67_ExceptionHandler_TypeIsCaught;
delete rel_68_ExceptionHeapTypeRepresentativeOrdinal;
delete rel_69_ExceptionType;
delete rel_70_ExceptionTypeToHeap;
delete rel_71_FakeInvocation_RegisterFinalize0;
delete rel_72_FieldInstruction_Signature;
delete rel_73_Field_DeclaringType;
delete rel_74_ForcedReachableAndroidContext;
delete rel_75_delta_ForcedReachableAndroidContext;
delete rel_76_new_ForcedReachableAndroidContext;
delete rel_77_FormalOfForcedReachableContext;
delete rel_78_delta_FormalOfForcedReachableContext;
delete rel_79_new_FormalOfForcedReachableContext;
delete rel_80_FormalsForEntryPoints;
delete rel_81_HContextForEntryPoint;
delete rel_82_HeapAllocation_ContextInsensitive;
delete rel_83_HeapAllocation_Keep;
delete rel_84_HeapAllocation_Merge;
delete rel_85_HeapAllocation_Null;
delete rel_86_HeapAllocation_Special;
delete rel_87_HeapAllocation_Type;
delete rel_88_HeapIsMergedString;
delete rel_89_HeapIsMergedStringFactory;
delete rel_90_HeapRepresentative;
delete rel_91_ImmutableContextFromContext;
delete rel_92_delta_ImmutableContextFromContext;
delete rel_93_new_ImmutableContextFromContext;
delete rel_94_ImmutableContextFromHContext;
delete rel_95_delta_ImmutableContextFromHContext;
delete rel_96_new_ImmutableContextFromHContext;
delete rel_97_ImmutableHContextFromContext;
delete rel_98_delta_ImmutableHContextFromContext;
delete rel_99_new_ImmutableHContextFromContext;
delete rel_100_ImplicitReachable;
delete rel_101_ImplicitlyInstantiatedLibraryType;
delete rel_102_InitializedClass;
delete rel_103_delta_InitializedClass;
delete rel_104_new_InitializedClass;
delete rel_105_InstanceFieldPointsTo;
delete rel_106_delta_InstanceFieldPointsTo;
delete rel_107_new_InstanceFieldPointsTo;
delete rel_108_Instruction_Index;
delete rel_109_Instruction_Method;
delete rel_110_delta_Instruction_Method;
delete rel_111_new_Instruction_Method;
delete rel_112_Instruction_Throws;
delete rel_113_delta_Instruction_Throws;
delete rel_114_new_Instruction_Throws;
delete rel_115_LastDot;
delete rel_116_LayoutControl;
delete rel_117_LibraryReachableAppListenerType;
delete rel_118_delta_LibraryReachableAppListenerType;
delete rel_119_new_LibraryReachableAppListenerType;
delete rel_120_ListenerType;
delete rel_121_LoadArrayIndex;
delete rel_122_LoadArrayIndex_Base;
delete rel_123_LoadArrayIndex_To;
delete rel_124_LoadHeapArrayIndex;
delete rel_125_delta_LoadHeapArrayIndex;
delete rel_126_new_LoadHeapArrayIndex;
delete rel_127_LoadHeapInstanceField;
delete rel_128_delta_LoadHeapInstanceField;
delete rel_129_new_LoadHeapInstanceField;
delete rel_130_LoadInstanceField;
delete rel_131_LoadInstanceField_Base;
delete rel_132_LoadInstanceField_To;
delete rel_133_LoadStaticField;
delete rel_134_LoadStaticField_To;
delete rel_135_MainClass;
delete rel_136_MainMethodArgArray;
delete rel_137_MainMethodArgArrayContent;
delete rel_138_MainMethodDeclaration;
delete rel_139_MainThread;
delete rel_140_MainThreadGroup;
delete rel_141_MethodAllocationMergeThreshold;
delete rel_142_MethodAndTypeToHeap;
delete rel_143_MethodAndTypeToMergedHeap;
delete rel_144_MethodAndTypeToRepresentative;
delete rel_145_MethodDeclaredOrInherited;
delete rel_146_delta_MethodDeclaredOrInherited;
delete rel_147_new_MethodDeclaredOrInherited;
delete rel_148_MethodImplemented;
delete rel_149_MethodInvocation_Method;
delete rel_150_MethodLookup;
delete rel_151_delta_MethodLookup;
delete rel_152_new_MethodLookup;
delete rel_153_Method_DeclaringType;
delete rel_154_Method_Descriptor;
delete rel_155_Method_ReturnType;
delete rel_156_Method_SimpleName;
delete rel_157_MinHeapOrdinalPerMethodAndType;
delete rel_158_MinRepresentativeHeapToPickFromOrdinal;
delete rel_159_MockForFormal;
delete rel_160_MockObject;
delete rel_161_MockObjectContext;
delete rel_162_MockObjectForComponentType;
delete rel_163_MockObjectForType;
delete rel_164_NotEmptyArrayValue;
delete rel_165_NotLastDot;
delete rel_166_NotSpecialObject;
delete rel_167_ObjToMock;
delete rel_168_delta_ObjToMock;
delete rel_169_new_ObjToMock;
delete rel_170_ObjectMultipleAllocated;
delete rel_171_ObjectShouldNotBeRefined;
delete rel_172_OptAssignCast;
delete rel_173_delta_OptAssignCast;
delete rel_174_new_OptAssignCast;
delete rel_175_OptAssignHeapAllocation;
delete rel_176_OptForNameInvocation;
delete rel_177_OptInterproceduralAssign;
delete rel_178_delta_OptInterproceduralAssign;
delete rel_179_new_OptInterproceduralAssign;
delete rel_180_OptLoadArrayIndex;
delete rel_181_OptLoadHeapArrayIndex;
delete rel_182_delta_OptLoadHeapArrayIndex;
delete rel_183_new_OptLoadHeapArrayIndex;
delete rel_184_OptSpecialMethodInvocationBase;
delete rel_185_delta_OptSpecialMethodInvocationBase;
delete rel_186_new_OptSpecialMethodInvocationBase;
delete rel_187_OptStoreArrayIndex;
delete rel_188_OptStoreIntoArray;
delete rel_189_delta_OptStoreIntoArray;
delete rel_190_new_OptStoreIntoArray;
delete rel_191_OptVirtualMethodInvocationBase;
delete rel_192_delta_OptVirtualMethodInvocationBase;
delete rel_193_new_OptVirtualMethodInvocationBase;
delete rel_194_OverridesFinalize;
delete rel_195_OverridingProtectedMethodOfComponent;
delete rel_196_OverridingProtectedOnMethodOfLayoutControl;
delete rel_197_OverridingProtectedOnMethodOfReachableListener;
delete rel_198_delta_OverridingProtectedOnMethodOfReachableListener;
delete rel_199_new_OverridingProtectedOnMethodOfReachableListener;
delete rel_200_PossibleEntryPoint;
delete rel_201_PrefixAbove;
delete rel_202_PrefixBelow;
delete rel_203_ProtectedMethodOfComponent;
delete rel_204_ProtectedOnMethodOfLayoutControl;
delete rel_205_ProtectedOnMethodOfReachableListener;
delete rel_206_delta_ProtectedOnMethodOfReachableListener;
delete rel_207_new_ProtectedOnMethodOfReachableListener;
delete rel_208_PublicMethodOfComponent;
delete rel_209_PublicOnMethodOfLayoutControl;
delete rel_210_PublicOnMethodOfReachableListener;
delete rel_211_delta_PublicOnMethodOfReachableListener;
delete rel_212_new_PublicOnMethodOfReachableListener;
delete rel_213_Reachable;
delete rel_214_delta_Reachable;
delete rel_215_new_Reachable;
delete rel_216_ReachableApplicationObjectOfType;
delete rel_217_delta_ReachableApplicationObjectOfType;
delete rel_218_new_ReachableApplicationObjectOfType;
delete rel_219_ReachableContext;
delete rel_220_delta_ReachableContext;
delete rel_221_new_ReachableContext;
delete rel_222_ReachableCurrentThreadInvocation;
delete rel_223_delta_ReachableCurrentThreadInvocation;
delete rel_224_new_ReachableCurrentThreadInvocation;
delete rel_225_ReachableLoadArrayIndexBase;
delete rel_226_delta_ReachableLoadArrayIndexBase;
delete rel_227_new_ReachableLoadArrayIndexBase;
delete rel_228_ReachableStoreArrayIndexBase;
delete rel_229_delta_ReachableStoreArrayIndexBase;
delete rel_230_new_ReachableStoreArrayIndexBase;
delete rel_231_ReachableStoreStaticFieldFrom;
delete rel_232_delta_ReachableStoreStaticFieldFrom;
delete rel_233_new_ReachableStoreStaticFieldFrom;
delete rel_234_ReceiverPointsTo;
delete rel_235_ReifiedAndroidObjectValue;
delete rel_236_ReifiedComponent;
delete rel_237_ReifiedLayoutControl;
delete rel_238_ReifiedLibraryObject;
delete rel_239_RepresentativesToPickFrom;
delete rel_240_ResolveInvocation;
delete rel_241_ReturnNonvoid_Var;
delete rel_242_ReturnVar;
delete rel_243_delta_ReturnVar;
delete rel_244_new_ReturnVar;
delete rel_245_RunningThread;
delete rel_246_delta_RunningThread;
delete rel_247_new_RunningThread;
delete rel_248_SiteShouldNotBeRefined;
delete rel_249_SpecialLibraryClass;
delete rel_250_SpecialLibraryMethod;
delete rel_251_SpecialLibraryObject;
delete rel_252_SpecialMethodInvocation_Base;
delete rel_253_StaticFieldPointsTo;
delete rel_254_delta_StaticFieldPointsTo;
delete rel_255_new_StaticFieldPointsTo;
delete rel_256_StaticMethodInvocation;
delete rel_257_StaticToActualType;
delete rel_258_Stats_Metrics;
delete rel_259_Stats_Simple_ApplicationConcreteMethod;
delete rel_260_Stats_Simple_Application_ArrayIndexPointsTo;
delete rel_261_Stats_Simple_Application_Cast;
delete rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation;
delete rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo;
delete rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo;
delete rel_265_Stats_Simple_Application_InsensVarPointsTo;
delete rel_266_Stats_Simple_Application_InstanceFieldPointsTo;
delete rel_267_Stats_Simple_Application_NullVirtualMethodInvocation;
delete rel_268_Stats_Simple_Application_PolymorphicCallSite;
delete rel_269_Stats_Simple_Application_PotentiallyFailingCast;
delete rel_270_Stats_Simple_Application_ReachableCast;
delete rel_271_Stats_Simple_Application_ReachableMethod;
delete rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation;
delete rel_273_Stats_Simple_Application_VarPointsTo;
delete rel_274_Stats_Simple_Application_VirtualMethodInvocation;
delete rel_275_Stats_Simple_AssignedVariable;
delete rel_276_Stats_Simple_EmptyVirtualMethodInvocation;
delete rel_277_Stats_Simple_InsensArrayIndexPointsTo;
delete rel_278_Stats_Simple_InsensCallGraphEdge;
delete rel_279_Stats_Simple_InsensInstanceFieldPointsTo;
delete rel_280_Stats_Simple_InsensReachableApplicationMethod;
delete rel_281_Stats_Simple_InsensReachableVar;
delete rel_282_Stats_Simple_InsensStaticFieldPointsTo;
delete rel_283_Stats_Simple_InsensVarPointsTo;
delete rel_284_Stats_Simple_NonReachableApplicationConcreteMethod;
delete rel_285_Stats_Simple_NullVirtualMethodInvocation;
delete rel_286_Stats_Simple_PolymorphicCallSite;
delete rel_287_Stats_Simple_PotentiallyFailingCast;
delete rel_288_Stats_Simple_ReachableApplicationMethod;
delete rel_289_Stats_Simple_ReachableCast;
delete rel_290_Stats_Simple_ReachableVar;
delete rel_291_Stats_Simple_ReachableVirtualMethodInvocation;
delete rel_292_Stats_Simple_VirtualCallGraphEdge;
delete rel_293_Stats_Simple_VirtualTargets;
delete rel_294_StoreArrayIndex;
delete rel_295_StoreArrayIndex_Base;
delete rel_296_StoreArrayIndex_From;
delete rel_297_StoreHeapArrayIndex;
delete rel_298_delta_StoreHeapArrayIndex;
delete rel_299_new_StoreHeapArrayIndex;
delete rel_300_StoreHeapInstanceField;
delete rel_301_delta_StoreHeapInstanceField;
delete rel_302_new_StoreHeapInstanceField;
delete rel_303_StoreInstanceField;
delete rel_304_StoreInstanceField_Base;
delete rel_305_StoreInstanceField_From;
delete rel_306_StoreStaticField;
delete rel_307_StoreStaticField_From;
delete rel_308_StringFactoryHeap;
delete rel_309_StringFactoryType;
delete rel_310_Subclass;
delete rel_311_delta_Subclass;
delete rel_312_new_Subclass;
delete rel_313_SubtypeOf;
delete rel_314_delta_SubtypeOf;
delete rel_315_new_SubtypeOf;
delete rel_316_Superinterface;
delete rel_317_delta_Superinterface;
delete rel_318_new_Superinterface;
delete rel_319_SupertypeOf;
delete rel_320_SystemThreadGroup;
delete rel_321_TamiflexCallGraphEdge;
delete rel_322_delta_TamiflexCallGraphEdge;
delete rel_323_new_TamiflexCallGraphEdge;
delete rel_324_TamiflexConstructorCallGraphEdge;
delete rel_325_delta_TamiflexConstructorCallGraphEdge;
delete rel_326_new_TamiflexConstructorCallGraphEdge;
delete rel_327_TamiflexInvocationArgumentArrayValue;
delete rel_328_delta_TamiflexInvocationArgumentArrayValue;
delete rel_329_new_TamiflexInvocationArgumentArrayValue;
delete rel_330_TamiflexInvocationFirstParam;
delete rel_331_delta_TamiflexInvocationFirstParam;
delete rel_332_new_TamiflexInvocationFirstParam;
delete rel_333_Tamiflex_Array_NewInstance;
delete rel_334_Tamiflex_Class_NewInstance;
delete rel_335_Tamiflex_Constructor_NewInstance;
delete rel_336_Tamiflex_Invoke;
delete rel_337_delta_Tamiflex_Invoke;
delete rel_338_new_Tamiflex_Invoke;
delete rel_339_Tamiflex_ReflectionData;
delete rel_340_Tamiflex_ReflectionMap;
delete rel_341_Tamiflex_ReifiedField;
delete rel_342_Tamiflex_ReifiedFieldArray;
delete rel_343_Tamiflex_ReifiedMethod;
delete rel_344_Tamiflex_ReifiedMethodArray;
delete rel_345_Temp1;
delete rel_346_delta_Temp1;
delete rel_347_new_Temp1;
delete rel_348_Temp2;
delete rel_349_delta_Temp2;
delete rel_350_new_Temp2;
delete rel_351_Throw;
delete rel_352_ThrowPointsTo;
delete rel_353_delta_ThrowPointsTo;
delete rel_354_new_ThrowPointsTo;
delete rel_355_Throw_Var;
delete rel_356_TopLevelEntryPoint;
delete rel_357_TypeForFormals;
delete rel_358_TypeToConcreteImplementationOrd;
delete rel_359_Type_byte;
delete rel_360_Type_char;
delete rel_361_Type_double;
delete rel_362_Type_float;
delete rel_363_Type_int;
delete rel_364_Type_long;
delete rel_365_Type_null;
delete rel_366_Type_short;
delete rel_367_Value_Num;
delete rel_368_Value_Type;
delete rel_369_Value_isHeap;
delete rel_370_Value_isMock;
delete rel_371_Value_isNonHeap;
delete rel_372_VarPointsTo;
delete rel_373_delta_VarPointsTo;
delete rel_374_new_VarPointsTo;
delete rel_375_Var_DeclaringMethod;
delete rel_376_Var_Type;
delete rel_377_VarsAtInvocationRetrievingView;
delete rel_378_ViewObjectValueFromId;
delete rel_379_ViewRetrievalByArg0MethodInvocation;
delete rel_380_VirtualMethodInvocation;
delete rel_381_VirtualMethodInvocation_Base;
delete rel_382_VirtualMethodInvocation_Descriptor;
delete rel_383_VirtualMethodInvocation_SimpleName;
delete rel_384_Activity;
delete rel_385_ActualParam;
delete rel_386_AndroidEntryPoint;
delete rel_387_ApplicationClass;
delete rel_388_ArrayType;
delete rel_389_AssignBinop;
delete rel_390_AssignCast;
delete rel_391_AssignCastNull;
delete rel_392_AssignCastNumConstant;
delete rel_393_AssignHeapAllocation;
delete rel_394_AssignInstanceOf;
delete rel_395_AssignLocal;
delete rel_396_AssignNull;
delete rel_397_AssignNumConstant;
delete rel_398_AssignPhantomInvoke;
delete rel_399_AssignReturnValue;
delete rel_400_AssignUnop;
delete rel_401_BootstrapParam;
delete rel_402_BreakpointStmt;
delete rel_403_BroadcastReceiver;
delete rel_404_CallbackMethod;
delete rel_405_ClassHeap;
delete rel_406_ClassModifier;
delete rel_407_ClassType;
delete rel_408_ComponentType;
delete rel_409_ContentProvider;
delete rel_410_Dacapo;
delete rel_411_DirectSuperclass;
delete rel_412_DirectSuperinterface;
delete rel_413_DynamicMethodInvocation;
delete rel_414_EmptyArray;
delete rel_415_EnterMonitor;
delete rel_416_ExceptionHandler;
delete rel_417_ExceptionHandler_Previous;
delete rel_418_ExitMonitor;
delete rel_419_Field;
delete rel_420_FieldInitialValue;
delete rel_421_Field_Modifier;
delete rel_422_FormalParam;
delete rel_423_Goto;
delete rel_424_If;
delete rel_425_InterfaceType;
delete rel_426_LayoutControl;
delete rel_427_LoadArrayIndex;
delete rel_428_LoadInstanceField;
delete rel_429_LoadStaticField;
delete rel_430_LookupSwitch;
delete rel_431_Method;
delete rel_432_MethodHandleConstant;
delete rel_433_MethodInvocation_Line;
delete rel_434_Method_DeclaresException;
delete rel_435_Method_Modifier;
delete rel_436_NativeReturnVar;
delete rel_437_NormalHeap;
delete rel_438_PhantomInvoke;
delete rel_439_Return;
delete rel_440_ReturnVoid;
delete rel_441_Service;
delete rel_442_SpecialMethodInvocation;
delete rel_443_StaticMethodInvocation;
delete rel_444_StoreArrayIndex;
delete rel_445_StoreInstanceField;
delete rel_446_StoreStaticField;
delete rel_447_StringConstant;
delete rel_448_TableSwitch;
delete rel_449_Tamiflex_ReflectionData;
delete rel_450_Tamiflex_ToDoopFormat;
delete rel_451_ThisVar;
delete rel_452_Throw;
delete rel_453_ThrowNull;
delete rel_454_UnsupportedInstruction;
delete rel_455_Var_DeclaringMethod;
delete rel_456_Var_Type;
delete rel_457_VirtualMethodInvocation;
delete rel_458_isArrayType;
delete rel_459_isAssignCast_Insn;
delete rel_460_isAssignHeapAllocation_Insn;
delete rel_461_isAssignLocal_Insn;
delete rel_462_isAssignNull_Insn;
delete rel_463_isClassHeap;
delete rel_464_isClassType;
delete rel_465_isClinitContext;
delete rel_466_isContext;
delete rel_467_delta_isContext;
delete rel_468_new_isContext;
delete rel_469_isExceptionHandler;
delete rel_470_isField;
delete rel_471_isHContext;
delete rel_472_delta_isHContext;
delete rel_473_new_isHContext;
delete rel_474_isHeapAllocation;
delete rel_475_isImmutableContext;
delete rel_476_isImmutableHContext;
delete rel_477_isInitialContext;
delete rel_478_isInstruction;
delete rel_479_isInterfaceType;
delete rel_480_isJVMStartupContext;
delete rel_481_isJVMStartupHContext;
delete rel_482_isLoadArrayIndex_Insn;
delete rel_483_isLoadInstanceField_Insn;
delete rel_484_isLoadStaticField_Insn;
delete rel_485_isMethod;
delete rel_486_isMethodInvocation;
delete rel_487_isNumConstant;
delete rel_488_isPrimitiveType;
delete rel_489_isReferenceType;
delete rel_490_isReturnNonvoid_Insn;
delete rel_491_isStaticMethodInvocation_Insn;
delete rel_492_isStoreArrayIndex_Insn;
delete rel_493_isStoreInstanceField_Insn;
delete rel_494_isStoreStaticField_Insn;
delete rel_495_isStringConstant;
delete rel_496_isThrow_Insn;
delete rel_497_isType;
delete rel_498_isValue;
delete rel_499_isVar;
delete rel_500_isVirtualMethodInvocation_Insn;
}
void run() {
// -- initialize counter --
std::atomic<RamDomain> ctr(0);

#if defined(__EMBEDDED_SOUFFLE__) && defined(_OPENMP)
omp_set_num_threads(8);
#endif

// -- query evaluation --
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_310_Subclass_op_ctxt,rel_310_Subclass->createContext());
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_310_Subclass->insert(tuple,READ_OP_CONTEXT(rel_310_Subclass_op_ctxt));
}
PARALLEL_END;
}
rel_311_delta_Subclass->insertAll(*rel_310_Subclass);
for(;;) {
if (!rel_311_delta_Subclass->empty()&&!rel_411_DirectSuperclass->empty()) {
auto part = rel_311_delta_Subclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_311_delta_Subclass_op_ctxt,rel_311_delta_Subclass->createContext());
CREATE_OP_CONTEXT(rel_312_new_Subclass_op_ctxt,rel_312_new_Subclass->createContext());
CREATE_OP_CONTEXT(rel_310_Subclass_op_ctxt,rel_310_Subclass->createContext());
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_411_DirectSuperclass->equalRange<0>(key,READ_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt));
for(const auto& env1 : range) {
if( !rel_310_Subclass->contains(Tuple<RamDomain,2>({env1[1],env0[1]}),READ_OP_CONTEXT(rel_310_Subclass_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[1]),(RamDomain)(env0[1])});
rel_312_new_Subclass->insert(tuple,READ_OP_CONTEXT(rel_312_new_Subclass_op_ctxt));
}
}
}
PARALLEL_END;
}
if(rel_312_new_Subclass->empty()) break;
rel_310_Subclass->insertAll(*rel_312_new_Subclass);
{
auto rel_0 = rel_311_delta_Subclass;
rel_311_delta_Subclass = rel_312_new_Subclass;
rel_312_new_Subclass = rel_0;
}
rel_312_new_Subclass->purge();
}
rel_311_delta_Subclass->purge();
rel_312_new_Subclass->purge();
if (!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_316_Superinterface_op_ctxt,rel_316_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_316_Superinterface->insert(tuple,READ_OP_CONTEXT(rel_316_Superinterface_op_ctxt));
}
PARALLEL_END;
}
rel_317_delta_Superinterface->insertAll(*rel_316_Superinterface);
for(;;) {
if (!rel_317_delta_Superinterface->empty()&&!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_317_delta_Superinterface_op_ctxt,rel_317_delta_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_318_new_Superinterface_op_ctxt,rel_318_new_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_316_Superinterface_op_ctxt,rel_316_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_317_delta_Superinterface->equalRange<1>(key,READ_OP_CONTEXT(rel_317_delta_Superinterface_op_ctxt));
for(const auto& env1 : range) {
if( !rel_316_Superinterface->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_316_Superinterface_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_318_new_Superinterface->insert(tuple,READ_OP_CONTEXT(rel_318_new_Superinterface_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_317_delta_Superinterface->empty()&&!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_317_delta_Superinterface_op_ctxt,rel_317_delta_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_318_new_Superinterface_op_ctxt,rel_318_new_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_316_Superinterface_op_ctxt,rel_316_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_317_delta_Superinterface->equalRange<1>(key,READ_OP_CONTEXT(rel_317_delta_Superinterface_op_ctxt));
for(const auto& env1 : range) {
if( !rel_316_Superinterface->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_316_Superinterface_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_318_new_Superinterface->insert(tuple,READ_OP_CONTEXT(rel_318_new_Superinterface_op_ctxt));
}
}
}
PARALLEL_END;
}
if(rel_318_new_Superinterface->empty()) break;
rel_316_Superinterface->insertAll(*rel_318_new_Superinterface);
{
auto rel_0 = rel_317_delta_Superinterface;
rel_317_delta_Superinterface = rel_318_new_Superinterface;
rel_318_new_Superinterface = rel_0;
}
rel_318_new_Superinterface->purge();
}
rel_317_delta_Superinterface->purge();
rel_318_new_Superinterface->purge();
rel_359_Type_byte->insert(9);
rel_360_Type_char->insert(10);
rel_361_Type_double->insert(15);
rel_362_Type_float->insert(14);
rel_363_Type_int->insert(12);
rel_364_Type_long->insert(13);
rel_365_Type_null->insert(17);
if (!rel_365_Type_null->empty()) {
auto part = rel_365_Type_null->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_365_Type_null_op_ctxt,rel_365_Type_null->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(19)});
rel_85_HeapAllocation_Null->insert(tuple,READ_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt));
}
PARALLEL_END;
}
rel_366_Type_short->insert(11);
if (!rel_388_ArrayType->empty()) {
auto part = rel_388_ArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_388_ArrayType_op_ctxt,rel_388_ArrayType->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_458_isArrayType->insert(tuple,READ_OP_CONTEXT(rel_458_isArrayType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_408_ComponentType->empty()) {
auto part = rel_408_ComponentType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_458_isArrayType->insert(tuple,READ_OP_CONTEXT(rel_458_isArrayType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_407_ClassType->empty()) {
auto part = rel_407_ClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_407_ClassType_op_ctxt,rel_407_ClassType->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_464_isClassType->insert(tuple,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_464_isClassType->insert(tuple,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_464_isClassType->insert(tuple,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
}
PARALLEL_END;
}
rel_464_isClassType->insert(0);
rel_464_isClassType->insert(2);
rel_464_isClassType->insert(18);
if (!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_42_ClassNameIndexes_op_ctxt,rel_42_ClassNameIndexes->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(0),(RamDomain)(env0[0])});
rel_42_ClassNameIndexes->insert(tuple,READ_OP_CONTEXT(rel_42_ClassNameIndexes_op_ctxt));
}
PARALLEL_END;
}
rel_43_delta_ClassNameIndexes->insertAll(*rel_42_ClassNameIndexes);
for(;;) {
if (!rel_43_delta_ClassNameIndexes->empty()) {
auto part = rel_43_delta_ClassNameIndexes->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_43_delta_ClassNameIndexes_op_ctxt,rel_43_delta_ClassNameIndexes->createContext());
CREATE_OP_CONTEXT(rel_44_new_ClassNameIndexes_op_ctxt,rel_44_new_ClassNameIndexes->createContext());
CREATE_OP_CONTEXT(rel_42_ClassNameIndexes_op_ctxt,rel_42_ClassNameIndexes->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((!rel_42_ClassNameIndexes->contains(Tuple<RamDomain,2>({(env0[0]) + (1),env0[1]}),READ_OP_CONTEXT(rel_42_ClassNameIndexes_op_ctxt))) && ((((env0[0]) + (1)) < (strlen(symTable.resolve((size_t)env0[1]))))))) {
Tuple<RamDomain,2> tuple({(RamDomain)((env0[0]) + (1)),(RamDomain)(env0[1])});
rel_44_new_ClassNameIndexes->insert(tuple,READ_OP_CONTEXT(rel_44_new_ClassNameIndexes_op_ctxt));
}
}
PARALLEL_END;
}
if(rel_44_new_ClassNameIndexes->empty()) break;
rel_42_ClassNameIndexes->insertAll(*rel_44_new_ClassNameIndexes);
{
auto rel_0 = rel_43_delta_ClassNameIndexes;
rel_43_delta_ClassNameIndexes = rel_44_new_ClassNameIndexes;
rel_44_new_ClassNameIndexes = rel_0;
}
rel_44_new_ClassNameIndexes->purge();
}
rel_43_delta_ClassNameIndexes->purge();
rel_44_new_ClassNameIndexes->purge();
if (!rel_42_ClassNameIndexes->empty()) {
auto part = rel_42_ClassNameIndexes->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_42_ClassNameIndexes_op_ctxt,rel_42_ClassNameIndexes->createContext());
CREATE_OP_CONTEXT(rel_51_DotsInClassName_op_ctxt,rel_51_DotsInClassName->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( (((RamDomain)symTable.lookup((substr_wrapper(symTable.resolve((size_t)env0[1]),(env0[0]),(1)).c_str()))) == (142))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_51_DotsInClassName->insert(tuple,READ_OP_CONTEXT(rel_51_DotsInClassName_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_51_DotsInClassName->empty()) {
auto part = rel_51_DotsInClassName->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_51_DotsInClassName_op_ctxt,rel_51_DotsInClassName->createContext());
CREATE_OP_CONTEXT(rel_165_NotLastDot_op_ctxt,rel_165_NotLastDot->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_51_DotsInClassName->equalRange<0>(key,READ_OP_CONTEXT(rel_51_DotsInClassName_op_ctxt));
for(const auto& env1 : range) {
if( ((env1[1]) > (env0[1]))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_165_NotLastDot->insert(tuple,READ_OP_CONTEXT(rel_165_NotLastDot_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_51_DotsInClassName->empty()) {
auto part = rel_51_DotsInClassName->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_51_DotsInClassName_op_ctxt,rel_51_DotsInClassName->createContext());
CREATE_OP_CONTEXT(rel_115_LastDot_op_ctxt,rel_115_LastDot->createContext());
CREATE_OP_CONTEXT(rel_165_NotLastDot_op_ctxt,rel_165_NotLastDot->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_165_NotLastDot->contains(Tuple<RamDomain,2>({env0[1],env0[0]}),READ_OP_CONTEXT(rel_165_NotLastDot_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_115_LastDot->insert(tuple,READ_OP_CONTEXT(rel_115_LastDot_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_425_InterfaceType->empty()) {
auto part = rel_425_InterfaceType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_425_InterfaceType_op_ctxt,rel_425_InterfaceType->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_479_isInterfaceType->insert(tuple,READ_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_479_isInterfaceType->insert(tuple,READ_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt));
}
PARALLEL_END;
}
rel_488_isPrimitiveType->insert(8);
rel_488_isPrimitiveType->insert(9);
rel_488_isPrimitiveType->insert(10);
rel_488_isPrimitiveType->insert(11);
rel_488_isPrimitiveType->insert(12);
rel_488_isPrimitiveType->insert(13);
rel_488_isPrimitiveType->insert(14);
rel_488_isPrimitiveType->insert(15);
rel_488_isPrimitiveType->insert(16);
if (!rel_407_ClassType->empty()) {
auto part = rel_407_ClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_407_ClassType_op_ctxt,rel_407_ClassType->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_388_ArrayType->empty()) {
auto part = rel_388_ArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_388_ArrayType_op_ctxt,rel_388_ArrayType->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_425_InterfaceType->empty()) {
auto part = rel_425_InterfaceType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_425_InterfaceType_op_ctxt,rel_425_InterfaceType->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_408_ComponentType->empty()) {
auto part = rel_408_ComponentType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_434_Method_DeclaresException->empty()) {
auto part = rel_434_Method_DeclaresException->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_434_Method_DeclaresException_op_ctxt,rel_434_Method_DeclaresException->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_387_ApplicationClass->empty()) {
auto part = rel_387_ApplicationClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_489_isReferenceType->insert(tuple,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
}
PARALLEL_END;
}
rel_489_isReferenceType->insert(2);
rel_489_isReferenceType->insert(17);
rel_489_isReferenceType->insert(18);
if (!rel_405_ClassHeap->empty()) {
auto part = rel_405_ClassHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_405_ClassHeap_op_ctxt,rel_405_ClassHeap->createContext());
CREATE_OP_CONTEXT(rel_463_isClassHeap_op_ctxt,rel_463_isClassHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_463_isClassHeap->insert(tuple,READ_OP_CONTEXT(rel_463_isClassHeap_op_ctxt));
}
PARALLEL_END;
}
if (!rel_384_Activity->empty()) {
auto part = rel_384_Activity->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_384_Activity_op_ctxt,rel_384_Activity->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_5_AndroidAppComponent->insert(tuple,READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt));
}
PARALLEL_END;
}
if (!rel_441_Service->empty()) {
auto part = rel_441_Service->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_441_Service_op_ctxt,rel_441_Service->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_5_AndroidAppComponent->insert(tuple,READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt));
}
PARALLEL_END;
}
if (!rel_403_BroadcastReceiver->empty()) {
auto part = rel_403_BroadcastReceiver->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_403_BroadcastReceiver_op_ctxt,rel_403_BroadcastReceiver->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_5_AndroidAppComponent->insert(tuple,READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt));
}
PARALLEL_END;
}
if (!rel_409_ContentProvider->empty()) {
auto part = rel_409_ContentProvider->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_409_ContentProvider_op_ctxt,rel_409_ContentProvider->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_5_AndroidAppComponent->insert(tuple,READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt));
}
PARALLEL_END;
}
if (!rel_407_ClassType->empty()) {
auto part = rel_407_ClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_407_ClassType_op_ctxt,rel_407_ClassType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_388_ArrayType->empty()) {
auto part = rel_388_ArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_388_ArrayType_op_ctxt,rel_388_ArrayType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_425_InterfaceType->empty()) {
auto part = rel_425_InterfaceType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_425_InterfaceType_op_ctxt,rel_425_InterfaceType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_408_ComponentType->empty()) {
auto part = rel_408_ComponentType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_408_ComponentType->empty()) {
auto part = rel_408_ComponentType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_412_DirectSuperinterface->empty()) {
auto part = rel_412_DirectSuperinterface->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_412_DirectSuperinterface_op_ctxt,rel_412_DirectSuperinterface->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_434_Method_DeclaresException->empty()) {
auto part = rel_434_Method_DeclaresException->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_434_Method_DeclaresException_op_ctxt,rel_434_Method_DeclaresException->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_456_Var_Type->empty()) {
auto part = rel_456_Var_Type->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_456_Var_Type_op_ctxt,rel_456_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_387_ApplicationClass->empty()) {
auto part = rel_387_ApplicationClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_437_NormalHeap->empty()) {
auto part = rel_437_NormalHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_437_NormalHeap_op_ctxt,rel_437_NormalHeap->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_405_ClassHeap->empty()) {
auto part = rel_405_ClassHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_405_ClassHeap_op_ctxt,rel_405_ClassHeap->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
rel_497_isType->insert(2);
if (!rel_384_Activity->empty()) {
auto part = rel_384_Activity->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_384_Activity_op_ctxt,rel_384_Activity->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_441_Service->empty()) {
auto part = rel_441_Service->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_441_Service_op_ctxt,rel_441_Service->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_409_ContentProvider->empty()) {
auto part = rel_409_ContentProvider->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_409_ContentProvider_op_ctxt,rel_409_ContentProvider->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_403_BroadcastReceiver->empty()) {
auto part = rel_403_BroadcastReceiver->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_403_BroadcastReceiver_op_ctxt,rel_403_BroadcastReceiver->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_497_isType->insert(tuple,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
}
PARALLEL_END;
}
rel_497_isType->insert(8);
rel_497_isType->insert(9);
rel_497_isType->insert(10);
rel_497_isType->insert(11);
rel_497_isType->insert(12);
rel_497_isType->insert(13);
rel_497_isType->insert(14);
rel_497_isType->insert(15);
rel_497_isType->insert(16);
rel_497_isType->insert(17);
rel_497_isType->insert(18);
if (!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
PARALLEL_END;
}
if (!rel_310_Subclass->empty()) {
auto part = rel_310_Subclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_310_Subclass_op_ctxt,rel_310_Subclass->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
PARALLEL_END;
}
if (!rel_316_Superinterface->empty()&&!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_316_Superinterface_op_ctxt,rel_316_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_316_Superinterface->equalRange<1>(key,READ_OP_CONTEXT(rel_316_Superinterface_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_479_isInterfaceType->empty()&&!rel_497_isType->empty()) {
auto part = rel_479_isInterfaceType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(18)});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_479_isInterfaceType->empty()) {
auto part = rel_479_isInterfaceType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
PARALLEL_END;
}
if (!rel_316_Superinterface->empty()&&!rel_479_isInterfaceType->empty()) {
auto part = rel_479_isInterfaceType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_316_Superinterface_op_ctxt,rel_316_Superinterface->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_316_Superinterface->equalRange<1>(key,READ_OP_CONTEXT(rel_316_Superinterface_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_458_isArrayType->empty()&&!rel_497_isType->empty()) {
auto part = rel_458_isArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(18)});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_408_ComponentType->empty()&&!rel_458_isArrayType->empty()&&!rel_488_isPrimitiveType->empty()) {
auto part = rel_458_isArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
CREATE_OP_CONTEXT(rel_488_isPrimitiveType_op_ctxt,rel_488_isPrimitiveType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_458_isArrayType) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_408_ComponentType->equalRange<0>(key,READ_OP_CONTEXT(rel_408_ComponentType_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],env2[1]});
auto range = rel_408_ComponentType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_408_ComponentType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[1]});
auto range = rel_488_isPrimitiveType->equalRange<0>(key,READ_OP_CONTEXT(rel_488_isPrimitiveType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_458_isArrayType->empty()&&!rel_479_isInterfaceType->empty()&&!rel_497_isType->empty()) {
auto part = rel_458_isArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({63});
auto range = rel_479_isInterfaceType->equalRange<0>(key,READ_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({63});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(63)});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_458_isArrayType->empty()&&!rel_479_isInterfaceType->empty()&&!rel_497_isType->empty()) {
auto part = rel_458_isArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
CREATE_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt,rel_479_isInterfaceType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({64});
auto range = rel_479_isInterfaceType->equalRange<0>(key,READ_OP_CONTEXT(rel_479_isInterfaceType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({64});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(64)});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_365_Type_null->empty()&&!rel_489_isReferenceType->empty()) {
auto part = rel_365_Type_null->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_365_Type_null_op_ctxt,rel_365_Type_null->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_489_isReferenceType) {
if( ((env1[0]) != (env0[0]))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_361_Type_double->empty()&&!rel_362_Type_float->empty()) {
auto part = rel_362_Type_float->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_361_Type_double_op_ctxt,rel_361_Type_double->createContext());
CREATE_OP_CONTEXT(rel_362_Type_float_op_ctxt,rel_362_Type_float->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_361_Type_double) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_362_Type_float->empty()&&!rel_364_Type_long->empty()) {
auto part = rel_364_Type_long->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_362_Type_float_op_ctxt,rel_362_Type_float->createContext());
CREATE_OP_CONTEXT(rel_364_Type_long_op_ctxt,rel_364_Type_long->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_362_Type_float) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_363_Type_int->empty()&&!rel_364_Type_long->empty()) {
auto part = rel_363_Type_int->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_364_Type_long_op_ctxt,rel_364_Type_long->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_364_Type_long) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_360_Type_char->empty()&&!rel_363_Type_int->empty()) {
auto part = rel_360_Type_char->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_360_Type_char_op_ctxt,rel_360_Type_char->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_363_Type_int) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_363_Type_int->empty()&&!rel_366_Type_short->empty()) {
auto part = rel_366_Type_short->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_366_Type_short_op_ctxt,rel_366_Type_short->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_363_Type_int) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_359_Type_byte->empty()&&!rel_366_Type_short->empty()) {
auto part = rel_359_Type_byte->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_359_Type_byte_op_ctxt,rel_359_Type_byte->createContext());
CREATE_OP_CONTEXT(rel_366_Type_short_op_ctxt,rel_366_Type_short->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_366_Type_short) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_497_isType->empty()) {
auto part = rel_497_isType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_313_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
}
PARALLEL_END;
}
rel_314_delta_SubtypeOf->insertAll(*rel_313_SubtypeOf);
for(;;) {
if (!rel_314_delta_SubtypeOf->empty()&&!rel_408_ComponentType->empty()&&!rel_489_isReferenceType->empty()) {
auto part = rel_408_ComponentType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_314_delta_SubtypeOf_op_ctxt,rel_314_delta_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_315_new_SubtypeOf_op_ctxt,rel_315_new_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_408_ComponentType) {
if( !rel_313_SubtypeOf->contains(Tuple<RamDomain,2>({env0[0],env1[0]}),READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_489_isReferenceType->equalRange<0>(key,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_489_isReferenceType->equalRange<0>(key,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[1],env1[1]});
auto range = rel_314_delta_SubtypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_314_delta_SubtypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_315_new_SubtypeOf->insert(tuple,READ_OP_CONTEXT(rel_315_new_SubtypeOf_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if(rel_315_new_SubtypeOf->empty()) break;
rel_313_SubtypeOf->insertAll(*rel_315_new_SubtypeOf);
{
auto rel_0 = rel_314_delta_SubtypeOf;
rel_314_delta_SubtypeOf = rel_315_new_SubtypeOf;
rel_315_new_SubtypeOf = rel_0;
}
rel_315_new_SubtypeOf->purge();
}
rel_314_delta_SubtypeOf->purge();
rel_315_new_SubtypeOf->purge();
if (!rel_313_SubtypeOf->empty()) {
auto part = rel_313_SubtypeOf->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_319_SupertypeOf->insert(tuple,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
}
PARALLEL_END;
}
if (!rel_313_SubtypeOf->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_69_ExceptionType_op_ctxt,rel_69_ExceptionType->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({141});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,141});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_69_ExceptionType->insert(tuple,READ_OP_CONTEXT(rel_69_ExceptionType_op_ctxt));
}
}
}
if (!rel_464_isClassType->empty()&&!rel_497_isType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_46_CollectionLibraryClass_op_ctxt,rel_46_CollectionLibraryClass->createContext());
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((!rel_387_ApplicationClass->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt))) && (regex_wrapper(symTable.resolve((size_t)143),symTable.resolve((size_t)env0[0]))))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_46_CollectionLibraryClass->insert(tuple,READ_OP_CONTEXT(rel_46_CollectionLibraryClass_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_46_CollectionLibraryClass_op_ctxt,rel_46_CollectionLibraryClass->createContext());
CREATE_OP_CONTEXT(rel_249_SpecialLibraryClass_op_ctxt,rel_249_SpecialLibraryClass->createContext());
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((!rel_387_ApplicationClass->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt))) && (!rel_46_CollectionLibraryClass->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_46_CollectionLibraryClass_op_ctxt))))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_249_SpecialLibraryClass->insert(tuple,READ_OP_CONTEXT(rel_249_SpecialLibraryClass_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_497_isType->empty()) {
auto part = rel_497_isType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt,rel_9_AndroidLibraryType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( regex_wrapper(symTable.resolve((size_t)80),symTable.resolve((size_t)env0[0]))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_9_AndroidLibraryType->insert(tuple,READ_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_387_ApplicationClass->empty()) {
auto part = rel_387_ApplicationClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_6_AndroidApplicationClass_op_ctxt,rel_6_AndroidApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt,rel_9_AndroidLibraryType->createContext());
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_9_AndroidLibraryType->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_6_AndroidApplicationClass->insert(tuple,READ_OP_CONTEXT(rel_6_AndroidApplicationClass_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_9_AndroidLibraryType->empty()&&!rel_497_isType->empty()) {
auto part = rel_9_AndroidLibraryType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_8_AndroidLibraryListenerType_op_ctxt,rel_8_AndroidLibraryListenerType->createContext());
CREATE_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt,rel_9_AndroidLibraryType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( (std::string(symTable.resolve((size_t)env0[0])).find(symTable.resolve((size_t)83))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_8_AndroidLibraryListenerType->insert(tuple,READ_OP_CONTEXT(rel_8_AndroidLibraryListenerType_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_9_AndroidLibraryType->empty()&&!rel_497_isType->empty()) {
auto part = rel_9_AndroidLibraryType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_8_AndroidLibraryListenerType_op_ctxt,rel_8_AndroidLibraryListenerType->createContext());
CREATE_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt,rel_9_AndroidLibraryType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( (std::string(symTable.resolve((size_t)env0[0])).find(symTable.resolve((size_t)84))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_8_AndroidLibraryListenerType->insert(tuple,READ_OP_CONTEXT(rel_8_AndroidLibraryListenerType_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_8_AndroidLibraryListenerType->empty()&&!rel_313_SubtypeOf->empty()) {
auto part = rel_8_AndroidLibraryListenerType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_8_AndroidLibraryListenerType_op_ctxt,rel_8_AndroidLibraryListenerType->createContext());
CREATE_OP_CONTEXT(rel_120_ListenerType_op_ctxt,rel_120_ListenerType->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_120_ListenerType->insert(tuple,READ_OP_CONTEXT(rel_120_ListenerType_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_6_AndroidApplicationClass->empty()&&!rel_120_ListenerType->empty()) {
auto part = rel_6_AndroidApplicationClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_6_AndroidApplicationClass_op_ctxt,rel_6_AndroidApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_7_AndroidApplicationListenerClass_op_ctxt,rel_7_AndroidApplicationListenerClass->createContext());
CREATE_OP_CONTEXT(rel_120_ListenerType_op_ctxt,rel_120_ListenerType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_120_ListenerType->equalRange<0>(key,READ_OP_CONTEXT(rel_120_ListenerType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_7_AndroidApplicationListenerClass->insert(tuple,READ_OP_CONTEXT(rel_7_AndroidApplicationListenerClass_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt,rel_101_ImplicitlyInstantiatedLibraryType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({77});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(77)});
rel_101_ImplicitlyInstantiatedLibraryType->insert(tuple,READ_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt));
}
}
if (!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt,rel_101_ImplicitlyInstantiatedLibraryType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({78});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(78)});
rel_101_ImplicitlyInstantiatedLibraryType->insert(tuple,READ_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt));
}
}
if (!rel_101_ImplicitlyInstantiatedLibraryType->empty()&&!rel_497_isType->empty()) {
auto part = rel_101_ImplicitlyInstantiatedLibraryType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt,rel_101_ImplicitlyInstantiatedLibraryType->createContext());
CREATE_OP_CONTEXT(rel_238_ReifiedLibraryObject_op_ctxt,rel_238_ReifiedLibraryObject->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)79)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str()))});
rel_238_ReifiedLibraryObject->insert(tuple,READ_OP_CONTEXT(rel_238_ReifiedLibraryObject_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_5_AndroidAppComponent->empty()&&!rel_497_isType->empty()) {
auto part = rel_5_AndroidAppComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_236_ReifiedComponent_op_ctxt,rel_236_ReifiedComponent->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)73)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str()))});
rel_236_ReifiedComponent->insert(tuple,READ_OP_CONTEXT(rel_236_ReifiedComponent_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_313_SubtypeOf->empty()&&!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt,rel_1_AllConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_406_ClassModifier_op_ctxt,rel_406_ClassModifier->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_406_ClassModifier->contains(Tuple<RamDomain,2>({3,env0[0]}),READ_OP_CONTEXT(rel_406_ClassModifier_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_313_SubtypeOf->equalRange<0>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_1_AllConcreteImplementations->insert(tuple,READ_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt,rel_1_AllConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_406_ClassModifier_op_ctxt,rel_406_ClassModifier->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_406_ClassModifier->contains(Tuple<RamDomain,2>({3,env0[0]}),READ_OP_CONTEXT(rel_406_ClassModifier_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_1_AllConcreteImplementations->insert(tuple,READ_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_458_isArrayType->empty()) {
auto part = rel_458_isArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt,rel_1_AllConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_1_AllConcreteImplementations->insert(tuple,READ_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt));
}
PARALLEL_END;
}
if (!rel_1_AllConcreteImplementations->empty()) {
auto part = rel_1_AllConcreteImplementations->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt,rel_1_AllConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_358_TypeToConcreteImplementationOrd_op_ctxt,rel_358_TypeToConcreteImplementationOrd->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
ram::Tuple<RamDomain,2> env1;
RamDomain res = MAX_RAM_DOMAIN;
const ram::Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_1_AllConcreteImplementations->equalRange<1>(key,READ_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt));
if(!range.empty()) {
for(const auto& cur : range) {
env1 = cur;
res = std::min(res,env1[0]);
}
env1[0] = res;
{
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env1[0])});
rel_358_TypeToConcreteImplementationOrd->insert(tuple,READ_OP_CONTEXT(rel_358_TypeToConcreteImplementationOrd_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_358_TypeToConcreteImplementationOrd->empty()&&!rel_497_isType->empty()) {
auto part = rel_358_TypeToConcreteImplementationOrd->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_48_ConcreteImplementations_op_ctxt,rel_48_ConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_358_TypeToConcreteImplementationOrd_op_ctxt,rel_358_TypeToConcreteImplementationOrd->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_497_isType) {
if( ((env0[1]) == (env1[0]))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_48_ConcreteImplementations->insert(tuple,READ_OP_CONTEXT(rel_48_ConcreteImplementations_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_1_AllConcreteImplementations->empty()) {
auto part = rel_1_AllConcreteImplementations->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_1_AllConcreteImplementations_op_ctxt,rel_1_AllConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_49_ConcreteType_op_ctxt,rel_49_ConcreteType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_49_ConcreteType->insert(tuple,READ_OP_CONTEXT(rel_49_ConcreteType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_48_ConcreteImplementations->empty()) {
auto part = rel_48_ConcreteImplementations->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_48_ConcreteImplementations_op_ctxt,rel_48_ConcreteImplementations->createContext());
CREATE_OP_CONTEXT(rel_49_ConcreteType_op_ctxt,rel_49_ConcreteType->createContext());
CREATE_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt,rel_257_StaticToActualType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_49_ConcreteType->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_49_ConcreteType_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_257_StaticToActualType->insert(tuple,READ_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_49_ConcreteType->empty()) {
auto part = rel_49_ConcreteType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_49_ConcreteType_op_ctxt,rel_49_ConcreteType->createContext());
CREATE_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt,rel_257_StaticToActualType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_257_StaticToActualType->insert(tuple,READ_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt,rel_47_ConcreteClass->createContext());
CREATE_OP_CONTEXT(rel_406_ClassModifier_op_ctxt,rel_406_ClassModifier->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_406_ClassModifier->contains(Tuple<RamDomain,2>({3,env0[0]}),READ_OP_CONTEXT(rel_406_ClassModifier_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_47_ConcreteClass->insert(tuple,READ_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_393_AssignHeapAllocation->empty()) {
auto part = rel_393_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_28_AssignHeapAllocation_Heap_op_ctxt,rel_28_AssignHeapAllocation_Heap->createContext());
CREATE_OP_CONTEXT(rel_393_AssignHeapAllocation_op_ctxt,rel_393_AssignHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_28_AssignHeapAllocation_Heap->insert(tuple,READ_OP_CONTEXT(rel_28_AssignHeapAllocation_Heap_op_ctxt));
}
PARALLEL_END;
}
if (!rel_393_AssignHeapAllocation->empty()) {
auto part = rel_393_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_393_AssignHeapAllocation_op_ctxt,rel_393_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_460_isAssignHeapAllocation_Insn_op_ctxt,rel_460_isAssignHeapAllocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_460_isAssignHeapAllocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_460_isAssignHeapAllocation_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_24_AssignCast_From_op_ctxt,rel_24_AssignCast_From->createContext());
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_24_AssignCast_From->insert(tuple,READ_OP_CONTEXT(rel_24_AssignCast_From_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_23_AssignCastNumConstant_Id_op_ctxt,rel_23_AssignCastNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_23_AssignCastNumConstant_Id->insert(tuple,READ_OP_CONTEXT(rel_23_AssignCastNumConstant_Id_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt,rel_25_AssignCast_Type->createContext());
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_25_AssignCast_Type->insert(tuple,READ_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt,rel_25_AssignCast_Type->createContext());
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_25_AssignCast_Type->insert(tuple,READ_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_391_AssignCastNull->empty()) {
auto part = rel_391_AssignCastNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt,rel_25_AssignCast_Type->createContext());
CREATE_OP_CONTEXT(rel_391_AssignCastNull_op_ctxt,rel_391_AssignCastNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_25_AssignCast_Type->insert(tuple,READ_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt,rel_459_isAssignCast_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_459_isAssignCast_Insn->insert(tuple,READ_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
CREATE_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt,rel_459_isAssignCast_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_459_isAssignCast_Insn->insert(tuple,READ_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_391_AssignCastNull->empty()) {
auto part = rel_391_AssignCastNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_391_AssignCastNull_op_ctxt,rel_391_AssignCastNull->createContext());
CREATE_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt,rel_459_isAssignCast_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_459_isAssignCast_Insn->insert(tuple,READ_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_395_AssignLocal->empty()) {
auto part = rel_395_AssignLocal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_31_AssignLocal_From_op_ctxt,rel_31_AssignLocal_From->createContext());
CREATE_OP_CONTEXT(rel_395_AssignLocal_op_ctxt,rel_395_AssignLocal->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_31_AssignLocal_From->insert(tuple,READ_OP_CONTEXT(rel_31_AssignLocal_From_op_ctxt));
}
PARALLEL_END;
}
if (!rel_395_AssignLocal->empty()) {
auto part = rel_395_AssignLocal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_395_AssignLocal_op_ctxt,rel_395_AssignLocal->createContext());
CREATE_OP_CONTEXT(rel_461_isAssignLocal_Insn_op_ctxt,rel_461_isAssignLocal_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_461_isAssignLocal_Insn->insert(tuple,READ_OP_CONTEXT(rel_461_isAssignLocal_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_396_AssignNull->empty()) {
auto part = rel_396_AssignNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_396_AssignNull_op_ctxt,rel_396_AssignNull->createContext());
CREATE_OP_CONTEXT(rel_462_isAssignNull_Insn_op_ctxt,rel_462_isAssignNull_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_462_isAssignNull_Insn->insert(tuple,READ_OP_CONTEXT(rel_462_isAssignNull_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_397_AssignNumConstant->empty()) {
auto part = rel_397_AssignNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt,rel_34_AssignNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_397_AssignNumConstant_op_ctxt,rel_397_AssignNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_34_AssignNumConstant_Id->insert(tuple,READ_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_487_isNumConstant->insert(tuple,READ_OP_CONTEXT(rel_487_isNumConstant_op_ctxt));
}
PARALLEL_END;
}
if (!rel_397_AssignNumConstant->empty()) {
auto part = rel_397_AssignNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_397_AssignNumConstant_op_ctxt,rel_397_AssignNumConstant->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_487_isNumConstant->insert(tuple,READ_OP_CONTEXT(rel_487_isNumConstant_op_ctxt));
}
PARALLEL_END;
}
if (!rel_393_AssignHeapAllocation->empty()) {
auto part = rel_393_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_393_AssignHeapAllocation_op_ctxt,rel_393_AssignHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_395_AssignLocal->empty()) {
auto part = rel_395_AssignLocal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_395_AssignLocal_op_ctxt,rel_395_AssignLocal->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_389_AssignBinop->empty()) {
auto part = rel_389_AssignBinop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_389_AssignBinop_op_ctxt,rel_389_AssignBinop->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_400_AssignUnop->empty()) {
auto part = rel_400_AssignUnop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_400_AssignUnop_op_ctxt,rel_400_AssignUnop->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_391_AssignCastNull->empty()) {
auto part = rel_391_AssignCastNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_391_AssignCastNull_op_ctxt,rel_391_AssignCastNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_397_AssignNumConstant->empty()) {
auto part = rel_397_AssignNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_397_AssignNumConstant_op_ctxt,rel_397_AssignNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_396_AssignNull->empty()) {
auto part = rel_396_AssignNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_396_AssignNull_op_ctxt,rel_396_AssignNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_394_AssignInstanceOf->empty()) {
auto part = rel_394_AssignInstanceOf->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_394_AssignInstanceOf_op_ctxt,rel_394_AssignInstanceOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_29_AssignInstruction_To->insert(tuple,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_439_Return->empty()) {
auto part = rel_439_Return->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_241_ReturnNonvoid_Var_op_ctxt,rel_241_ReturnNonvoid_Var->createContext());
CREATE_OP_CONTEXT(rel_439_Return_op_ctxt,rel_439_Return->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_241_ReturnNonvoid_Var->insert(tuple,READ_OP_CONTEXT(rel_241_ReturnNonvoid_Var_op_ctxt));
}
PARALLEL_END;
}
if (!rel_439_Return->empty()) {
auto part = rel_439_Return->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_439_Return_op_ctxt,rel_439_Return->createContext());
CREATE_OP_CONTEXT(rel_490_isReturnNonvoid_Insn_op_ctxt,rel_490_isReturnNonvoid_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_490_isReturnNonvoid_Insn->insert(tuple,READ_OP_CONTEXT(rel_490_isReturnNonvoid_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_427_LoadArrayIndex->empty()) {
auto part = rel_427_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_122_LoadArrayIndex_Base_op_ctxt,rel_122_LoadArrayIndex_Base->createContext());
CREATE_OP_CONTEXT(rel_427_LoadArrayIndex_op_ctxt,rel_427_LoadArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_122_LoadArrayIndex_Base->insert(tuple,READ_OP_CONTEXT(rel_122_LoadArrayIndex_Base_op_ctxt));
}
PARALLEL_END;
}
if (!rel_427_LoadArrayIndex->empty()) {
auto part = rel_427_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_123_LoadArrayIndex_To_op_ctxt,rel_123_LoadArrayIndex_To->createContext());
CREATE_OP_CONTEXT(rel_427_LoadArrayIndex_op_ctxt,rel_427_LoadArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_123_LoadArrayIndex_To->insert(tuple,READ_OP_CONTEXT(rel_123_LoadArrayIndex_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_427_LoadArrayIndex->empty()) {
auto part = rel_427_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_427_LoadArrayIndex_op_ctxt,rel_427_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_482_isLoadArrayIndex_Insn_op_ctxt,rel_482_isLoadArrayIndex_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_482_isLoadArrayIndex_Insn->insert(tuple,READ_OP_CONTEXT(rel_482_isLoadArrayIndex_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_131_LoadInstanceField_Base_op_ctxt,rel_131_LoadInstanceField_Base->createContext());
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_131_LoadInstanceField_Base->insert(tuple,READ_OP_CONTEXT(rel_131_LoadInstanceField_Base_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_132_LoadInstanceField_To_op_ctxt,rel_132_LoadInstanceField_To->createContext());
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_132_LoadInstanceField_To->insert(tuple,READ_OP_CONTEXT(rel_132_LoadInstanceField_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
CREATE_OP_CONTEXT(rel_483_isLoadInstanceField_Insn_op_ctxt,rel_483_isLoadInstanceField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_483_isLoadInstanceField_Insn->insert(tuple,READ_OP_CONTEXT(rel_483_isLoadInstanceField_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_429_LoadStaticField->empty()) {
auto part = rel_429_LoadStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_134_LoadStaticField_To_op_ctxt,rel_134_LoadStaticField_To->createContext());
CREATE_OP_CONTEXT(rel_429_LoadStaticField_op_ctxt,rel_429_LoadStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_134_LoadStaticField_To->insert(tuple,READ_OP_CONTEXT(rel_134_LoadStaticField_To_op_ctxt));
}
PARALLEL_END;
}
if (!rel_429_LoadStaticField->empty()) {
auto part = rel_429_LoadStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_429_LoadStaticField_op_ctxt,rel_429_LoadStaticField->createContext());
CREATE_OP_CONTEXT(rel_484_isLoadStaticField_Insn_op_ctxt,rel_484_isLoadStaticField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_484_isLoadStaticField_Insn->insert(tuple,READ_OP_CONTEXT(rel_484_isLoadStaticField_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_491_isStaticMethodInvocation_Insn_op_ctxt,rel_491_isStaticMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_491_isStaticMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_491_isStaticMethodInvocation_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_444_StoreArrayIndex->empty()) {
auto part = rel_444_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_295_StoreArrayIndex_Base_op_ctxt,rel_295_StoreArrayIndex_Base->createContext());
CREATE_OP_CONTEXT(rel_444_StoreArrayIndex_op_ctxt,rel_444_StoreArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_295_StoreArrayIndex_Base->insert(tuple,READ_OP_CONTEXT(rel_295_StoreArrayIndex_Base_op_ctxt));
}
PARALLEL_END;
}
if (!rel_444_StoreArrayIndex->empty()) {
auto part = rel_444_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_296_StoreArrayIndex_From_op_ctxt,rel_296_StoreArrayIndex_From->createContext());
CREATE_OP_CONTEXT(rel_444_StoreArrayIndex_op_ctxt,rel_444_StoreArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_296_StoreArrayIndex_From->insert(tuple,READ_OP_CONTEXT(rel_296_StoreArrayIndex_From_op_ctxt));
}
PARALLEL_END;
}
if (!rel_444_StoreArrayIndex->empty()) {
auto part = rel_444_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_444_StoreArrayIndex_op_ctxt,rel_444_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_492_isStoreArrayIndex_Insn_op_ctxt,rel_492_isStoreArrayIndex_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_492_isStoreArrayIndex_Insn->insert(tuple,READ_OP_CONTEXT(rel_492_isStoreArrayIndex_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_304_StoreInstanceField_Base_op_ctxt,rel_304_StoreInstanceField_Base->createContext());
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_304_StoreInstanceField_Base->insert(tuple,READ_OP_CONTEXT(rel_304_StoreInstanceField_Base_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_305_StoreInstanceField_From_op_ctxt,rel_305_StoreInstanceField_From->createContext());
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_305_StoreInstanceField_From->insert(tuple,READ_OP_CONTEXT(rel_305_StoreInstanceField_From_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
CREATE_OP_CONTEXT(rel_493_isStoreInstanceField_Insn_op_ctxt,rel_493_isStoreInstanceField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_493_isStoreInstanceField_Insn->insert(tuple,READ_OP_CONTEXT(rel_493_isStoreInstanceField_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_72_FieldInstruction_Signature->insert(tuple,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_72_FieldInstruction_Signature->insert(tuple,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
}
PARALLEL_END;
}
if (!rel_446_StoreStaticField->empty()) {
auto part = rel_446_StoreStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_446_StoreStaticField_op_ctxt,rel_446_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_72_FieldInstruction_Signature->insert(tuple,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
}
PARALLEL_END;
}
if (!rel_429_LoadStaticField->empty()) {
auto part = rel_429_LoadStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_429_LoadStaticField_op_ctxt,rel_429_LoadStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_72_FieldInstruction_Signature->insert(tuple,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
}
PARALLEL_END;
}
if (!rel_446_StoreStaticField->empty()) {
auto part = rel_446_StoreStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_307_StoreStaticField_From_op_ctxt,rel_307_StoreStaticField_From->createContext());
CREATE_OP_CONTEXT(rel_446_StoreStaticField_op_ctxt,rel_446_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_307_StoreStaticField_From->insert(tuple,READ_OP_CONTEXT(rel_307_StoreStaticField_From_op_ctxt));
}
PARALLEL_END;
}
if (!rel_446_StoreStaticField->empty()) {
auto part = rel_446_StoreStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_446_StoreStaticField_op_ctxt,rel_446_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_494_isStoreStaticField_Insn_op_ctxt,rel_494_isStoreStaticField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_494_isStoreStaticField_Insn->insert(tuple,READ_OP_CONTEXT(rel_494_isStoreStaticField_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_452_Throw->empty()) {
auto part = rel_452_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_355_Throw_Var_op_ctxt,rel_355_Throw_Var->createContext());
CREATE_OP_CONTEXT(rel_452_Throw_op_ctxt,rel_452_Throw->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_355_Throw_Var->insert(tuple,READ_OP_CONTEXT(rel_355_Throw_Var_op_ctxt));
}
PARALLEL_END;
}
if (!rel_452_Throw->empty()) {
auto part = rel_452_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_452_Throw_op_ctxt,rel_452_Throw->createContext());
CREATE_OP_CONTEXT(rel_496_isThrow_Insn_op_ctxt,rel_496_isThrow_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_496_isThrow_Insn->insert(tuple,READ_OP_CONTEXT(rel_496_isThrow_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_453_ThrowNull->empty()) {
auto part = rel_453_ThrowNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_453_ThrowNull_op_ctxt,rel_453_ThrowNull->createContext());
CREATE_OP_CONTEXT(rel_496_isThrow_Insn_op_ctxt,rel_496_isThrow_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_496_isThrow_Insn->insert(tuple,READ_OP_CONTEXT(rel_496_isThrow_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_452_Throw->empty()) {
auto part = rel_452_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_351_Throw_op_ctxt,rel_351_Throw->createContext());
CREATE_OP_CONTEXT(rel_452_Throw_op_ctxt,rel_452_Throw->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_351_Throw->insert(tuple,READ_OP_CONTEXT(rel_351_Throw_op_ctxt));
}
PARALLEL_END;
}
if (!rel_355_Throw_Var->empty()&&!rel_496_isThrow_Insn->empty()) {
auto part = rel_496_isThrow_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_351_Throw_op_ctxt,rel_351_Throw->createContext());
CREATE_OP_CONTEXT(rel_355_Throw_Var_op_ctxt,rel_355_Throw_Var->createContext());
CREATE_OP_CONTEXT(rel_496_isThrow_Insn_op_ctxt,rel_496_isThrow_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_355_Throw_Var->equalRange<0>(key,READ_OP_CONTEXT(rel_355_Throw_Var_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_351_Throw->insert(tuple,READ_OP_CONTEXT(rel_351_Throw_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_431_Method->empty()) {
auto part = rel_431_Method->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_431_Method_op_ctxt,rel_431_Method->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_153_Method_DeclaringType->insert(tuple,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_387_ApplicationClass->empty()) {
auto part = rel_153_Method_DeclaringType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_387_ApplicationClass->equalRange<0>(key,READ_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_11_ApplicationMethod->insert(tuple,READ_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_249_SpecialLibraryClass->empty()) {
auto part = rel_153_Method_DeclaringType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_249_SpecialLibraryClass_op_ctxt,rel_249_SpecialLibraryClass->createContext());
CREATE_OP_CONTEXT(rel_250_SpecialLibraryMethod_op_ctxt,rel_250_SpecialLibraryMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_249_SpecialLibraryClass->equalRange<0>(key,READ_OP_CONTEXT(rel_249_SpecialLibraryClass_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_250_SpecialLibraryMethod->insert(tuple,READ_OP_CONTEXT(rel_250_SpecialLibraryMethod_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_431_Method->empty()) {
auto part = rel_431_Method->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_431_Method_op_ctxt,rel_431_Method->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_154_Method_Descriptor->insert(tuple,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
}
PARALLEL_END;
}
if (!rel_431_Method->empty()) {
auto part = rel_431_Method->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_431_Method_op_ctxt,rel_431_Method->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_156_Method_SimpleName->insert(tuple,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
}
PARALLEL_END;
}
if (!rel_431_Method->empty()) {
auto part = rel_431_Method->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt,rel_155_Method_ReturnType->createContext());
CREATE_OP_CONTEXT(rel_431_Method_op_ctxt,rel_431_Method->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_155_Method_ReturnType->insert(tuple,READ_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_154_Method_Descriptor->empty()&&!rel_156_Method_SimpleName->empty()) {
auto part = rel_156_Method_SimpleName->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt,rel_148_MethodImplemented->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({3,env0[0]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_154_Method_Descriptor->equalRange<0>(key,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env1[1]),(RamDomain)(env2[1]),(RamDomain)(env0[0])});
rel_148_MethodImplemented->insert(tuple,READ_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_148_MethodImplemented->empty()) {
auto part = rel_148_MethodImplemented->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt,rel_148_MethodImplemented->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env0[3])});
rel_150_MethodLookup->insert(tuple,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
}
PARALLEL_END;
}
if (!rel_148_MethodImplemented->empty()&&!rel_458_isArrayType->empty()&&!rel_497_isType->empty()) {
auto part = rel_458_isArrayType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt,rel_148_MethodImplemented->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,4> key({0,0,18,0});
auto range = rel_148_MethodImplemented->equalRange<2>(key,READ_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env0[0]),(RamDomain)(env2[3])});
rel_150_MethodLookup->insert(tuple,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
}
}
}
PARALLEL_END;
}
rel_151_delta_MethodLookup->insertAll(*rel_150_MethodLookup);
for(;;) {
if (!rel_151_delta_MethodLookup->empty()&&!rel_411_DirectSuperclass->empty()) {
auto part = rel_411_DirectSuperclass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_151_delta_MethodLookup_op_ctxt,rel_151_delta_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_152_new_MethodLookup_op_ctxt,rel_152_new_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt,rel_148_MethodImplemented->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[1],0});
auto range = rel_151_delta_MethodLookup->equalRange<2>(key,READ_OP_CONTEXT(rel_151_delta_MethodLookup_op_ctxt));
for(const auto& env1 : range) {
if( ((rel_148_MethodImplemented->equalRange<0,1,2>(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],0}),READ_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt)).empty()) && (!rel_150_MethodLookup->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env1[3]}),READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env1[3])});
rel_152_new_MethodLookup->insert(tuple,READ_OP_CONTEXT(rel_152_new_MethodLookup_op_ctxt));
}
}
}
PARALLEL_END;
}
if(rel_152_new_MethodLookup->empty()) break;
rel_150_MethodLookup->insertAll(*rel_152_new_MethodLookup);
{
auto rel_0 = rel_151_delta_MethodLookup;
rel_151_delta_MethodLookup = rel_152_new_MethodLookup;
rel_152_new_MethodLookup = rel_0;
}
rel_152_new_MethodLookup->purge();
}
rel_151_delta_MethodLookup->purge();
rel_152_new_MethodLookup->purge();
if (!rel_150_MethodLookup->empty()) {
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_194_OverridesFinalize_op_ctxt,rel_194_OverridesFinalize->createContext());
const Tuple<RamDomain,4> key({58,59,0,0});
auto range = rel_150_MethodLookup->equalRange<0,1>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
for(const auto& env0 : range) {
if( ((env0[3]) != (60))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_194_OverridesFinalize->insert(tuple,READ_OP_CONTEXT(rel_194_OverridesFinalize_op_ctxt));
}
}
}
if (!rel_6_AndroidApplicationClass->empty()&&!rel_9_AndroidLibraryType->empty()&&!rel_150_MethodLookup->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_154_Method_Descriptor->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_319_SupertypeOf->empty()) {
auto part = rel_153_Method_DeclaringType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_6_AndroidApplicationClass_op_ctxt,rel_6_AndroidApplicationClass->createContext());
CREATE_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt,rel_9_AndroidLibraryType->createContext());
CREATE_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt,rel_10_AppMethodOverridesAndroidLibraryMethod->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_6_AndroidApplicationClass->equalRange<0>(key,READ_OP_CONTEXT(rel_6_AndroidApplicationClass_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_154_Method_Descriptor->equalRange<0>(key,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_319_SupertypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,1> key({env4[0]});
auto range = rel_9_AndroidLibraryType->equalRange<0>(key,READ_OP_CONTEXT(rel_9_AndroidLibraryType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,4> key({env3[1],env2[1],env4[0],0});
auto range = rel_150_MethodLookup->equalRange<0,1,2>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_10_AppMethodOverridesAndroidLibraryMethod->insert(tuple,READ_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_464_isClassType->empty()) {
auto part = rel_464_isClassType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_153_Method_DeclaringType->equalRange<1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_145_MethodDeclaredOrInherited->insert(tuple,READ_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt));
}
}
PARALLEL_END;
}
rel_146_delta_MethodDeclaredOrInherited->insertAll(*rel_145_MethodDeclaredOrInherited);
for(;;) {
if (!rel_146_delta_MethodDeclaredOrInherited->empty()&&!rel_150_MethodLookup->empty()&&!rel_154_Method_Descriptor->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_411_DirectSuperclass->empty()) {
auto part = rel_146_delta_MethodDeclaredOrInherited->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_146_delta_MethodDeclaredOrInherited_op_ctxt,rel_146_delta_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_147_new_MethodDeclaredOrInherited_op_ctxt,rel_147_new_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_154_Method_Descriptor->equalRange<0>(key,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_411_DirectSuperclass->equalRange<1>(key,READ_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt));
for(const auto& env3 : range) {
if( !rel_145_MethodDeclaredOrInherited->contains(Tuple<RamDomain,2>({env0[0],env3[0]}),READ_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt))) {
const Tuple<RamDomain,4> key({env2[1],env1[1],env3[0],env0[0]});
auto range = rel_150_MethodLookup->equalRange<0,1,2,3>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env3[0])});
rel_147_new_MethodDeclaredOrInherited->insert(tuple,READ_OP_CONTEXT(rel_147_new_MethodDeclaredOrInherited_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if(rel_147_new_MethodDeclaredOrInherited->empty()) break;
rel_145_MethodDeclaredOrInherited->insertAll(*rel_147_new_MethodDeclaredOrInherited);
{
auto rel_0 = rel_146_delta_MethodDeclaredOrInherited;
rel_146_delta_MethodDeclaredOrInherited = rel_147_new_MethodDeclaredOrInherited;
rel_147_new_MethodDeclaredOrInherited = rel_0;
}
rel_147_new_MethodDeclaredOrInherited->purge();
}
rel_146_delta_MethodDeclaredOrInherited->purge();
rel_147_new_MethodDeclaredOrInherited->purge();
if (!rel_5_AndroidAppComponent->empty()&&!rel_145_MethodDeclaredOrInherited->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_5_AndroidAppComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_203_ProtectedMethodOfComponent_op_ctxt,rel_203_ProtectedMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_145_MethodDeclaredOrInherited->equalRange<1>(key,READ_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({61,env1[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_203_ProtectedMethodOfComponent->insert(tuple,READ_OP_CONTEXT(rel_203_ProtectedMethodOfComponent_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_10_AppMethodOverridesAndroidLibraryMethod->empty()&&!rel_203_ProtectedMethodOfComponent->empty()) {
auto part = rel_203_ProtectedMethodOfComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt,rel_10_AppMethodOverridesAndroidLibraryMethod->createContext());
CREATE_OP_CONTEXT(rel_195_OverridingProtectedMethodOfComponent_op_ctxt,rel_195_OverridingProtectedMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_203_ProtectedMethodOfComponent_op_ctxt,rel_203_ProtectedMethodOfComponent->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_10_AppMethodOverridesAndroidLibraryMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_195_OverridingProtectedMethodOfComponent->insert(tuple,READ_OP_CONTEXT(rel_195_OverridingProtectedMethodOfComponent_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_5_AndroidAppComponent->empty()&&!rel_145_MethodDeclaredOrInherited->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_5_AndroidAppComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_208_PublicMethodOfComponent_op_ctxt,rel_208_PublicMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_145_MethodDeclaredOrInherited->equalRange<1>(key,READ_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({4,env1[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_208_PublicMethodOfComponent->insert(tuple,READ_OP_CONTEXT(rel_208_PublicMethodOfComponent_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_148_MethodImplemented->empty()) {
CREATE_OP_CONTEXT(rel_40_ClassInitializer_op_ctxt,rel_40_ClassInitializer->createContext());
CREATE_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt,rel_148_MethodImplemented->createContext());
const Tuple<RamDomain,4> key({89,59,0,0});
auto range = rel_148_MethodImplemented->equalRange<0,1>(key,READ_OP_CONTEXT(rel_148_MethodImplemented_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env0[3])});
rel_40_ClassInitializer->insert(tuple,READ_OP_CONTEXT(rel_40_ClassInitializer_op_ctxt));
}
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_153_Method_DeclaringType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_39_ClassHasPossibleEntryPoint_op_ctxt,rel_39_ClassHasPossibleEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_406_ClassModifier_op_ctxt,rel_406_ClassModifier->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((!rel_406_ClassModifier->contains(Tuple<RamDomain,2>({5,env0[1]}),READ_OP_CONTEXT(rel_406_ClassModifier_op_ctxt))) && (!rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[0]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))))) {
const Tuple<RamDomain,2> key({4,env0[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_39_ClassHasPossibleEntryPoint->insert(tuple,READ_OP_CONTEXT(rel_39_ClassHasPossibleEntryPoint_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_39_ClassHasPossibleEntryPoint->empty()&&!rel_115_LastDot->empty()) {
auto part = rel_39_ClassHasPossibleEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_39_ClassHasPossibleEntryPoint_op_ctxt,rel_39_ClassHasPossibleEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_115_LastDot_op_ctxt,rel_115_LastDot->createContext());
CREATE_OP_CONTEXT(rel_201_PrefixAbove_op_ctxt,rel_201_PrefixAbove->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_115_LastDot->equalRange<0>(key,READ_OP_CONTEXT(rel_115_LastDot_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((substr_wrapper(symTable.resolve((size_t)env0[0]),(0),((env1[1]) + (1))).c_str()))),(RamDomain)((env1[1]) + (1))});
rel_201_PrefixAbove->insert(tuple,READ_OP_CONTEXT(rel_201_PrefixAbove_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_39_ClassHasPossibleEntryPoint->empty()&&!rel_115_LastDot->empty()) {
auto part = rel_39_ClassHasPossibleEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_39_ClassHasPossibleEntryPoint_op_ctxt,rel_39_ClassHasPossibleEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_115_LastDot_op_ctxt,rel_115_LastDot->createContext());
CREATE_OP_CONTEXT(rel_202_PrefixBelow_op_ctxt,rel_202_PrefixBelow->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_115_LastDot->equalRange<0>(key,READ_OP_CONTEXT(rel_115_LastDot_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((substr_wrapper(symTable.resolve((size_t)env0[0]),(0),(env1[1])).c_str())))});
rel_202_PrefixBelow->insert(tuple,READ_OP_CONTEXT(rel_202_PrefixBelow_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_201_PrefixAbove->empty()&&!rel_202_PrefixBelow->empty()) {
auto part = rel_201_PrefixAbove->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_41_ClassIsAboveOtherInNamingHierarchy_op_ctxt,rel_41_ClassIsAboveOtherInNamingHierarchy->createContext());
CREATE_OP_CONTEXT(rel_201_PrefixAbove_op_ctxt,rel_201_PrefixAbove->createContext());
CREATE_OP_CONTEXT(rel_202_PrefixBelow_op_ctxt,rel_202_PrefixBelow->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_202_PrefixBelow) {
if( ((env0[1]) == ((RamDomain)symTable.lookup((substr_wrapper(symTable.resolve((size_t)env1[1]),(0),(env0[2])).c_str()))))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_41_ClassIsAboveOtherInNamingHierarchy->insert(tuple,READ_OP_CONTEXT(rel_41_ClassIsAboveOtherInNamingHierarchy_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_39_ClassHasPossibleEntryPoint->empty()) {
auto part = rel_39_ClassHasPossibleEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_39_ClassHasPossibleEntryPoint_op_ctxt,rel_39_ClassHasPossibleEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_41_ClassIsAboveOtherInNamingHierarchy_op_ctxt,rel_41_ClassIsAboveOtherInNamingHierarchy->createContext());
CREATE_OP_CONTEXT(rel_45_ClassWithTopLevelEntryPoint_op_ctxt,rel_45_ClassWithTopLevelEntryPoint->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_41_ClassIsAboveOtherInNamingHierarchy->equalRange<1>(Tuple<RamDomain,2>({0,env0[0]}),READ_OP_CONTEXT(rel_41_ClassIsAboveOtherInNamingHierarchy_op_ctxt)).empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_45_ClassWithTopLevelEntryPoint->insert(tuple,READ_OP_CONTEXT(rel_45_ClassWithTopLevelEntryPoint_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_153_Method_DeclaringType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_200_PossibleEntryPoint_op_ctxt,rel_200_PossibleEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_406_ClassModifier_op_ctxt,rel_406_ClassModifier->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((!rel_406_ClassModifier->contains(Tuple<RamDomain,2>({5,env0[1]}),READ_OP_CONTEXT(rel_406_ClassModifier_op_ctxt))) && (!rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[0]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))))) {
const Tuple<RamDomain,2> key({4,env0[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_200_PossibleEntryPoint->insert(tuple,READ_OP_CONTEXT(rel_200_PossibleEntryPoint_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_45_ClassWithTopLevelEntryPoint->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_200_PossibleEntryPoint->empty()&&!rel_387_ApplicationClass->empty()) {
auto part = rel_200_PossibleEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_45_ClassWithTopLevelEntryPoint_op_ctxt,rel_45_ClassWithTopLevelEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_200_PossibleEntryPoint_op_ctxt,rel_200_PossibleEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt,rel_356_TopLevelEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_387_ApplicationClass->equalRange<0>(key,READ_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_45_ClassWithTopLevelEntryPoint->equalRange<0>(key,READ_OP_CONTEXT(rel_45_ClassWithTopLevelEntryPoint_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_356_TopLevelEntryPoint->insert(tuple,READ_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_356_TopLevelEntryPoint->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_356_TopLevelEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_80_FormalsForEntryPoints_op_ctxt,rel_80_FormalsForEntryPoints->createContext());
CREATE_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt,rel_356_TopLevelEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[0],0});
auto range = rel_422_FormalParam->equalRange<1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[2])});
rel_80_FormalsForEntryPoints->insert(tuple,READ_OP_CONTEXT(rel_80_FormalsForEntryPoints_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_259_Stats_Simple_ApplicationConcreteMethod_op_ctxt,rel_259_Stats_Simple_ApplicationConcreteMethod->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({3,env0[0]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_259_Stats_Simple_ApplicationConcreteMethod->insert(tuple,READ_OP_CONTEXT(rel_259_Stats_Simple_ApplicationConcreteMethod_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_422_FormalParam->empty()) {
auto part = rel_422_FormalParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_434_Method_DeclaresException->empty()) {
auto part = rel_434_Method_DeclaresException->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_434_Method_DeclaresException_op_ctxt,rel_434_Method_DeclaresException->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_435_Method_Modifier->empty()) {
auto part = rel_435_Method_Modifier->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_436_NativeReturnVar->empty()) {
auto part = rel_436_NativeReturnVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_436_NativeReturnVar_op_ctxt,rel_436_NativeReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_455_Var_DeclaringMethod->empty()) {
auto part = rel_455_Var_DeclaringMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_455_Var_DeclaringMethod_op_ctxt,rel_455_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_451_ThisVar->empty()) {
auto part = rel_451_ThisVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_431_Method->empty()) {
auto part = rel_431_Method->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_431_Method_op_ctxt,rel_431_Method->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_404_CallbackMethod->empty()) {
auto part = rel_404_CallbackMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_404_CallbackMethod_op_ctxt,rel_404_CallbackMethod->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_485_isMethod->insert(tuple,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_393_AssignHeapAllocation->empty()) {
auto part = rel_393_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_393_AssignHeapAllocation_op_ctxt,rel_393_AssignHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_395_AssignLocal->empty()) {
auto part = rel_395_AssignLocal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_395_AssignLocal_op_ctxt,rel_395_AssignLocal->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_389_AssignBinop->empty()) {
auto part = rel_389_AssignBinop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_389_AssignBinop_op_ctxt,rel_389_AssignBinop->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_400_AssignUnop->empty()) {
auto part = rel_400_AssignUnop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_400_AssignUnop_op_ctxt,rel_400_AssignUnop->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[5])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[5])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_391_AssignCastNull->empty()) {
auto part = rel_391_AssignCastNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_391_AssignCastNull_op_ctxt,rel_391_AssignCastNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_397_AssignNumConstant->empty()) {
auto part = rel_397_AssignNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_397_AssignNumConstant_op_ctxt,rel_397_AssignNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_396_AssignNull->empty()) {
auto part = rel_396_AssignNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_396_AssignNull_op_ctxt,rel_396_AssignNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_394_AssignInstanceOf->empty()) {
auto part = rel_394_AssignInstanceOf->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_394_AssignInstanceOf_op_ctxt,rel_394_AssignInstanceOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[5])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_415_EnterMonitor->empty()) {
auto part = rel_415_EnterMonitor->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_415_EnterMonitor_op_ctxt,rel_415_EnterMonitor->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_418_ExitMonitor->empty()) {
auto part = rel_418_ExitMonitor->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_418_ExitMonitor_op_ctxt,rel_418_ExitMonitor->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_413_DynamicMethodInvocation->empty()) {
auto part = rel_413_DynamicMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_413_DynamicMethodInvocation_op_ctxt,rel_413_DynamicMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_452_Throw->empty()) {
auto part = rel_452_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_452_Throw_op_ctxt,rel_452_Throw->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_453_ThrowNull->empty()) {
auto part = rel_453_ThrowNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_453_ThrowNull_op_ctxt,rel_453_ThrowNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[5])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[5])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_446_StoreStaticField->empty()) {
auto part = rel_446_StoreStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_446_StoreStaticField_op_ctxt,rel_446_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_429_LoadStaticField->empty()) {
auto part = rel_429_LoadStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_429_LoadStaticField_op_ctxt,rel_429_LoadStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_444_StoreArrayIndex->empty()) {
auto part = rel_444_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_444_StoreArrayIndex_op_ctxt,rel_444_StoreArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_427_LoadArrayIndex->empty()) {
auto part = rel_427_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_427_LoadArrayIndex_op_ctxt,rel_427_LoadArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_423_Goto->empty()) {
auto part = rel_423_Goto->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_423_Goto_op_ctxt,rel_423_Goto->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_424_If->empty()) {
auto part = rel_424_If->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_424_If_op_ctxt,rel_424_If->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_448_TableSwitch->empty()) {
auto part = rel_448_TableSwitch->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_448_TableSwitch_op_ctxt,rel_448_TableSwitch->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_430_LookupSwitch->empty()) {
auto part = rel_430_LookupSwitch->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_430_LookupSwitch_op_ctxt,rel_430_LookupSwitch->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_439_Return->empty()) {
auto part = rel_439_Return->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_439_Return_op_ctxt,rel_439_Return->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_440_ReturnVoid->empty()) {
auto part = rel_440_ReturnVoid->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_440_ReturnVoid_op_ctxt,rel_440_ReturnVoid->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_398_AssignPhantomInvoke->empty()) {
auto part = rel_398_AssignPhantomInvoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_398_AssignPhantomInvoke_op_ctxt,rel_398_AssignPhantomInvoke->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_438_PhantomInvoke->empty()) {
auto part = rel_438_PhantomInvoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_438_PhantomInvoke_op_ctxt,rel_438_PhantomInvoke->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_402_BreakpointStmt->empty()) {
auto part = rel_402_BreakpointStmt->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_402_BreakpointStmt_op_ctxt,rel_402_BreakpointStmt->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_454_UnsupportedInstruction->empty()) {
auto part = rel_454_UnsupportedInstruction->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_454_UnsupportedInstruction_op_ctxt,rel_454_UnsupportedInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str())),(RamDomain)(130)});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(132)});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(134)});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(135)});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(137)});
rel_109_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
}
}
}
}
rel_110_delta_Instruction_Method->insertAll(*rel_109_Instruction_Method);
if (!rel_436_NativeReturnVar->empty()) {
auto part = rel_436_NativeReturnVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_436_NativeReturnVar_op_ctxt,rel_436_NativeReturnVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_242_ReturnVar->insert(tuple,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
}
PARALLEL_END;
}
rel_243_delta_ReturnVar->insertAll(*rel_242_ReturnVar);
for(;;) {
SECTIONS_START;
SECTION_START;
if (!rel_243_delta_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_243_delta_ReturnVar_op_ctxt,rel_243_delta_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_111_new_Instruction_Method_op_ctxt,rel_111_new_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
if( !rel_109_Instruction_Method->contains(Tuple<RamDomain,2>({(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str()),125}),READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt))) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_243_delta_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_243_delta_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({127});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str())),(RamDomain)(125)});
rel_111_new_Instruction_Method->insert(tuple,READ_OP_CONTEXT(rel_111_new_Instruction_Method_op_ctxt));
}
}
}
}
}
SECTION_END
SECTION_START;
if (!rel_110_delta_Instruction_Method->empty()&&!rel_241_ReturnNonvoid_Var->empty()&&!rel_490_isReturnNonvoid_Insn->empty()) {
auto part = rel_490_isReturnNonvoid_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_110_delta_Instruction_Method_op_ctxt,rel_110_delta_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_244_new_ReturnVar_op_ctxt,rel_244_new_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_241_ReturnNonvoid_Var_op_ctxt,rel_241_ReturnNonvoid_Var->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_490_isReturnNonvoid_Insn_op_ctxt,rel_490_isReturnNonvoid_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_110_delta_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_110_delta_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_241_ReturnNonvoid_Var->equalRange<0>(key,READ_OP_CONTEXT(rel_241_ReturnNonvoid_Var_op_ctxt));
for(const auto& env2 : range) {
if( !rel_242_ReturnVar->contains(Tuple<RamDomain,2>({env2[1],env1[1]}),READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env2[1]),(RamDomain)(env1[1])});
rel_244_new_ReturnVar->insert(tuple,READ_OP_CONTEXT(rel_244_new_ReturnVar_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTIONS_END;
if(((rel_111_new_Instruction_Method->empty()) && (rel_244_new_ReturnVar->empty()))) break;
rel_109_Instruction_Method->insertAll(*rel_111_new_Instruction_Method);
{
auto rel_0 = rel_110_delta_Instruction_Method;
rel_110_delta_Instruction_Method = rel_111_new_Instruction_Method;
rel_111_new_Instruction_Method = rel_0;
}
rel_111_new_Instruction_Method->purge();
rel_242_ReturnVar->insertAll(*rel_244_new_ReturnVar);
{
auto rel_0 = rel_243_delta_ReturnVar;
rel_243_delta_ReturnVar = rel_244_new_ReturnVar;
rel_244_new_ReturnVar = rel_0;
}
rel_244_new_ReturnVar->purge();
}
rel_110_delta_Instruction_Method->purge();
rel_111_new_Instruction_Method->purge();
rel_243_delta_ReturnVar->purge();
rel_244_new_ReturnVar->purge();
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({127});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str())),(RamDomain)(127)});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str())),(RamDomain)(60)});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(133)});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(133)});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(136)});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(136)});
rel_149_MethodInvocation_Method->insert(tuple,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
}
}
}
}
if (!rel_109_Instruction_Method->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_491_isStaticMethodInvocation_Insn->empty()) {
auto part = rel_491_isStaticMethodInvocation_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_491_isStaticMethodInvocation_Insn_op_ctxt,rel_491_isStaticMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env2[1]),(RamDomain)(env1[1])});
rel_256_StaticMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_176_OptForNameInvocation_op_ctxt,rel_176_OptForNameInvocation->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({172});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,172,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[2])});
rel_176_OptForNameInvocation->insert(tuple,READ_OP_CONTEXT(rel_176_OptForNameInvocation_op_ctxt));
}
}
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_176_OptForNameInvocation_op_ctxt,rel_176_OptForNameInvocation->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({173});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,173,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[2])});
rel_176_OptForNameInvocation->insert(tuple,READ_OP_CONTEXT(rel_176_OptForNameInvocation_op_ctxt));
}
}
}
if (!rel_149_MethodInvocation_Method->empty()&&!rel_155_Method_ReturnType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt,rel_155_Method_ReturnType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt,rel_379_ViewRetrievalByArg0MethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,2> key({0,86});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,2> key({env0[0],81});
auto range = rel_155_Method_ReturnType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({81});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_149_MethodInvocation_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env3[0])});
rel_379_ViewRetrievalByArg0MethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt));
}
}
}
}
}
if (!rel_149_MethodInvocation_Method->empty()&&!rel_155_Method_ReturnType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt,rel_155_Method_ReturnType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt,rel_379_ViewRetrievalByArg0MethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,2> key({0,87});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,2> key({env0[0],81});
auto range = rel_155_Method_ReturnType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({81});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_149_MethodInvocation_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env3[0])});
rel_379_ViewRetrievalByArg0MethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt));
}
}
}
}
}
if (!rel_149_MethodInvocation_Method->empty()&&!rel_155_Method_ReturnType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt,rel_155_Method_ReturnType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt,rel_379_ViewRetrievalByArg0MethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,2> key({0,88});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,2> key({env0[0],81});
auto range = rel_155_Method_ReturnType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_155_Method_ReturnType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({81});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_149_MethodInvocation_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env3[0])});
rel_379_ViewRetrievalByArg0MethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt));
}
}
}
}
}
if (!rel_28_AssignHeapAllocation_Heap->empty()&&!rel_109_Instruction_Method->empty()&&!rel_250_SpecialLibraryMethod->empty()) {
auto part = rel_28_AssignHeapAllocation_Heap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_28_AssignHeapAllocation_Heap_op_ctxt,rel_28_AssignHeapAllocation_Heap->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_250_SpecialLibraryMethod_op_ctxt,rel_250_SpecialLibraryMethod->createContext());
CREATE_OP_CONTEXT(rel_251_SpecialLibraryObject_op_ctxt,rel_251_SpecialLibraryObject->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_250_SpecialLibraryMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_250_SpecialLibraryMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_251_SpecialLibraryObject->insert(tuple,READ_OP_CONTEXT(rel_251_SpecialLibraryObject_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_252_SpecialMethodInvocation_Base_op_ctxt,rel_252_SpecialMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_252_SpecialMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_252_SpecialMethodInvocation_Base_op_ctxt));
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_252_SpecialMethodInvocation_Base_op_ctxt,rel_252_SpecialMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({127});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str())),(RamDomain)(env1[0])});
rel_252_SpecialMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_252_SpecialMethodInvocation_Base_op_ctxt));
}
}
}
}
if (!rel_29_AssignInstruction_To->empty()&&!rel_109_Instruction_Method->empty()&&!rel_462_isAssignNull_Insn->empty()) {
auto part = rel_462_isAssignNull_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_33_AssignNull_op_ctxt,rel_33_AssignNull->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_462_isAssignNull_Insn_op_ctxt,rel_462_isAssignNull_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[1]),(RamDomain)(env2[1])});
rel_33_AssignNull->insert(tuple,READ_OP_CONTEXT(rel_33_AssignNull_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_393_AssignHeapAllocation->empty()) {
auto part = rel_393_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_393_AssignHeapAllocation_op_ctxt,rel_393_AssignHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_395_AssignLocal->empty()) {
auto part = rel_395_AssignLocal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_395_AssignLocal_op_ctxt,rel_395_AssignLocal->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_389_AssignBinop->empty()) {
auto part = rel_389_AssignBinop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_389_AssignBinop_op_ctxt,rel_389_AssignBinop->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_400_AssignUnop->empty()) {
auto part = rel_400_AssignUnop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_400_AssignUnop_op_ctxt,rel_400_AssignUnop->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_391_AssignCastNull->empty()) {
auto part = rel_391_AssignCastNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_391_AssignCastNull_op_ctxt,rel_391_AssignCastNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_397_AssignNumConstant->empty()) {
auto part = rel_397_AssignNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_397_AssignNumConstant_op_ctxt,rel_397_AssignNumConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_396_AssignNull->empty()) {
auto part = rel_396_AssignNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_396_AssignNull_op_ctxt,rel_396_AssignNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_394_AssignInstanceOf->empty()) {
auto part = rel_394_AssignInstanceOf->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_394_AssignInstanceOf_op_ctxt,rel_394_AssignInstanceOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_415_EnterMonitor->empty()) {
auto part = rel_415_EnterMonitor->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_415_EnterMonitor_op_ctxt,rel_415_EnterMonitor->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_418_ExitMonitor->empty()) {
auto part = rel_418_ExitMonitor->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_418_ExitMonitor_op_ctxt,rel_418_ExitMonitor->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_413_DynamicMethodInvocation->empty()) {
auto part = rel_413_DynamicMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_413_DynamicMethodInvocation_op_ctxt,rel_413_DynamicMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_452_Throw->empty()) {
auto part = rel_452_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_452_Throw_op_ctxt,rel_452_Throw->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_453_ThrowNull->empty()) {
auto part = rel_453_ThrowNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_453_ThrowNull_op_ctxt,rel_453_ThrowNull->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_446_StoreStaticField->empty()) {
auto part = rel_446_StoreStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_446_StoreStaticField_op_ctxt,rel_446_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_429_LoadStaticField->empty()) {
auto part = rel_429_LoadStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_429_LoadStaticField_op_ctxt,rel_429_LoadStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_444_StoreArrayIndex->empty()) {
auto part = rel_444_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_444_StoreArrayIndex_op_ctxt,rel_444_StoreArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_427_LoadArrayIndex->empty()) {
auto part = rel_427_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_427_LoadArrayIndex_op_ctxt,rel_427_LoadArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_423_Goto->empty()) {
auto part = rel_423_Goto->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_423_Goto_op_ctxt,rel_423_Goto->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_424_If->empty()) {
auto part = rel_424_If->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_424_If_op_ctxt,rel_424_If->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_448_TableSwitch->empty()) {
auto part = rel_448_TableSwitch->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_448_TableSwitch_op_ctxt,rel_448_TableSwitch->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_430_LookupSwitch->empty()) {
auto part = rel_430_LookupSwitch->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_430_LookupSwitch_op_ctxt,rel_430_LookupSwitch->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_439_Return->empty()) {
auto part = rel_439_Return->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_439_Return_op_ctxt,rel_439_Return->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_440_ReturnVoid->empty()) {
auto part = rel_440_ReturnVoid->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_440_ReturnVoid_op_ctxt,rel_440_ReturnVoid->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_398_AssignPhantomInvoke->empty()) {
auto part = rel_398_AssignPhantomInvoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_398_AssignPhantomInvoke_op_ctxt,rel_398_AssignPhantomInvoke->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_438_PhantomInvoke->empty()) {
auto part = rel_438_PhantomInvoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_438_PhantomInvoke_op_ctxt,rel_438_PhantomInvoke->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_402_BreakpointStmt->empty()) {
auto part = rel_402_BreakpointStmt->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_402_BreakpointStmt_op_ctxt,rel_402_BreakpointStmt->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_454_UnsupportedInstruction->empty()) {
auto part = rel_454_UnsupportedInstruction->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_454_UnsupportedInstruction_op_ctxt,rel_454_UnsupportedInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({127});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str())),(RamDomain)(1)});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str())),(RamDomain)(1)});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(1)});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(1)});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(1)});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(1)});
rel_108_Instruction_Index->insert(tuple,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
}
}
}
}
if (!rel_24_AssignCast_From->empty()&&!rel_25_AssignCast_Type->empty()&&!rel_29_AssignInstruction_To->empty()&&!rel_109_Instruction_Method->empty()&&!rel_459_isAssignCast_Insn->empty()) {
auto part = rel_459_isAssignCast_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_22_AssignCast_op_ctxt,rel_22_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_24_AssignCast_From_op_ctxt,rel_24_AssignCast_From->createContext());
CREATE_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt,rel_25_AssignCast_Type->createContext());
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_459_isAssignCast_Insn_op_ctxt,rel_459_isAssignCast_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_24_AssignCast_From->equalRange<0>(key,READ_OP_CONTEXT(rel_24_AssignCast_From_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_25_AssignCast_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_25_AssignCast_Type_op_ctxt));
for(const auto& env4 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env1[1])});
rel_22_AssignCast->insert(tuple,READ_OP_CONTEXT(rel_22_AssignCast_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_22_AssignCast->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_22_AssignCast_op_ctxt,rel_22_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_261_Stats_Simple_Application_Cast_op_ctxt,rel_261_Stats_Simple_Application_Cast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_22_AssignCast->equalRange<3>(key,READ_OP_CONTEXT(rel_22_AssignCast_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_261_Stats_Simple_Application_Cast->insert(tuple,READ_OP_CONTEXT(rel_261_Stats_Simple_Application_Cast_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_500_isVirtualMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
}
PARALLEL_END;
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str()))});
rel_500_isVirtualMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_500_isVirtualMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_500_isVirtualMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_500_isVirtualMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_500_isVirtualMethodInvocation_Insn->insert(tuple,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
}
}
}
}
if (!rel_109_Instruction_Method->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_500_isVirtualMethodInvocation_Insn->empty()) {
auto part = rel_500_isVirtualMethodInvocation_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env2[1]),(RamDomain)(env1[1])});
rel_380_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str())),(RamDomain)(60),(RamDomain)(130)});
rel_380_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(133),(RamDomain)(132)});
rel_380_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(133),(RamDomain)(134)});
rel_380_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(136),(RamDomain)(135)});
rel_380_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(136),(RamDomain)(137)});
rel_380_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_149_MethodInvocation_Method->empty()&&!rel_154_Method_Descriptor->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_500_isVirtualMethodInvocation_Insn->empty()) {
auto part = rel_500_isVirtualMethodInvocation_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_382_VirtualMethodInvocation_Descriptor_op_ctxt,rel_382_VirtualMethodInvocation_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_154_Method_Descriptor->equalRange<0>(key,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env3[1])});
rel_382_VirtualMethodInvocation_Descriptor->insert(tuple,READ_OP_CONTEXT(rel_382_VirtualMethodInvocation_Descriptor_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_149_MethodInvocation_Method->empty()&&!rel_154_Method_Descriptor->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_500_isVirtualMethodInvocation_Insn->empty()) {
auto part = rel_500_isVirtualMethodInvocation_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_383_VirtualMethodInvocation_SimpleName_op_ctxt,rel_383_VirtualMethodInvocation_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_154_Method_Descriptor->equalRange<0>(key,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env2[1])});
rel_383_VirtualMethodInvocation_SimpleName->insert(tuple,READ_OP_CONTEXT(rel_383_VirtualMethodInvocation_SimpleName_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_109_Instruction_Method->empty()&&!rel_500_isVirtualMethodInvocation_Insn->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_274_Stats_Simple_Application_VirtualMethodInvocation_op_ctxt,rel_274_Stats_Simple_Application_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_500_isVirtualMethodInvocation_Insn->equalRange<0>(key,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_274_Stats_Simple_Application_VirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_274_Stats_Simple_Application_VirtualMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_381_VirtualMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
}
PARALLEL_END;
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str())),(RamDomain)(env1[2])});
rel_381_VirtualMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(env1[2])});
rel_381_VirtualMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(env1[2])});
rel_381_VirtualMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(env1[2])});
rel_381_VirtualMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(env1[2])});
rel_381_VirtualMethodInvocation_Base->insert(tuple,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
}
}
}
}
if (!rel_410_Dacapo->empty()) {
auto part = rel_410_Dacapo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt,rel_83_HeapAllocation_Keep->createContext());
CREATE_OP_CONTEXT(rel_410_Dacapo_op_ctxt,rel_410_Dacapo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_83_HeapAllocation_Keep->insert(tuple,READ_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt));
}
PARALLEL_END;
}
if (!rel_437_NormalHeap->empty()) {
auto part = rel_437_NormalHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_437_NormalHeap_op_ctxt,rel_437_NormalHeap->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_474_isHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_447_StringConstant->empty()) {
auto part = rel_447_StringConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_447_StringConstant_op_ctxt,rel_447_StringConstant->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_474_isHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_405_ClassHeap->empty()) {
auto part = rel_405_ClassHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_405_ClassHeap_op_ctxt,rel_405_ClassHeap->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_474_isHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_432_MethodHandleConstant->empty()) {
auto part = rel_432_MethodHandleConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_432_MethodHandleConstant_op_ctxt,rel_432_MethodHandleConstant->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_474_isHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_365_Type_null->empty()) {
auto part = rel_365_Type_null->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_365_Type_null_op_ctxt,rel_365_Type_null->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(19)});
rel_474_isHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
rel_474_isHeapAllocation->insert(20);
rel_474_isHeapAllocation->insert(22);
rel_474_isHeapAllocation->insert(23);
rel_474_isHeapAllocation->insert(25);
rel_474_isHeapAllocation->insert(26);
rel_474_isHeapAllocation->insert(27);
rel_474_isHeapAllocation->insert(28);
rel_474_isHeapAllocation->insert(29);
rel_474_isHeapAllocation->insert(31);
rel_474_isHeapAllocation->insert(33);
rel_474_isHeapAllocation->insert(34);
rel_474_isHeapAllocation->insert(36);
rel_474_isHeapAllocation->insert(38);
rel_474_isHeapAllocation->insert(39);
rel_474_isHeapAllocation->insert(40);
rel_474_isHeapAllocation->insert(41);
rel_474_isHeapAllocation->insert(42);
rel_474_isHeapAllocation->insert(43);
rel_474_isHeapAllocation->insert(44);
if (!rel_410_Dacapo->empty()) {
auto part = rel_410_Dacapo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_410_Dacapo_op_ctxt,rel_410_Dacapo->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_474_isHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_28_AssignHeapAllocation_Heap->empty()&&!rel_29_AssignInstruction_To->empty()&&!rel_109_Instruction_Method->empty()&&!rel_460_isAssignHeapAllocation_Insn->empty()) {
auto part = rel_460_isAssignHeapAllocation_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_28_AssignHeapAllocation_Heap_op_ctxt,rel_28_AssignHeapAllocation_Heap->createContext());
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_460_isAssignHeapAllocation_Insn_op_ctxt,rel_460_isAssignHeapAllocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_28_AssignHeapAllocation_Heap->equalRange<0>(key,READ_OP_CONTEXT(rel_28_AssignHeapAllocation_Heap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env1[1])});
rel_27_AssignHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({23});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(23),(RamDomain)(env1[0]),(RamDomain)(125)});
rel_27_AssignHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({128});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,128});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({25});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(25),(RamDomain)(env1[0]),(RamDomain)(128)});
rel_27_AssignHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({128});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,128});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({0});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({26});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(26),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)128)) + std::string(symTable.resolve((size_t)129))).c_str())),(RamDomain)(128)});
rel_27_AssignHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt));
}
}
}
}
}
if (!rel_27_AssignHeapAllocation->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_175_OptAssignHeapAllocation_op_ctxt,rel_175_OptAssignHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env0[0])});
rel_175_OptAssignHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_175_OptAssignHeapAllocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_175_OptAssignHeapAllocation->empty()) {
auto part = rel_175_OptAssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_170_ObjectMultipleAllocated_op_ctxt,rel_170_ObjectMultipleAllocated->createContext());
CREATE_OP_CONTEXT(rel_175_OptAssignHeapAllocation_op_ctxt,rel_175_OptAssignHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_175_OptAssignHeapAllocation->equalRange<1>(key,READ_OP_CONTEXT(rel_175_OptAssignHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
if( ((env0[0]) != (env1[0]))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_170_ObjectMultipleAllocated->insert(tuple,READ_OP_CONTEXT(rel_170_ObjectMultipleAllocated_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_437_NormalHeap->empty()) {
auto part = rel_437_NormalHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_437_NormalHeap_op_ctxt,rel_437_NormalHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_87_HeapAllocation_Type->insert(tuple,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_447_StringConstant->empty()) {
auto part = rel_447_StringConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_447_StringConstant_op_ctxt,rel_447_StringConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(0)});
rel_87_HeapAllocation_Type->insert(tuple,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_405_ClassHeap->empty()) {
auto part = rel_405_ClassHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_405_ClassHeap_op_ctxt,rel_405_ClassHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(1)});
rel_87_HeapAllocation_Type->insert(tuple,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_432_MethodHandleConstant->empty()) {
auto part = rel_432_MethodHandleConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_432_MethodHandleConstant_op_ctxt,rel_432_MethodHandleConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(2)});
rel_87_HeapAllocation_Type->insert(tuple,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_365_Type_null->empty()) {
auto part = rel_365_Type_null->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_365_Type_null_op_ctxt,rel_365_Type_null->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(19),(RamDomain)(env0[0])});
rel_87_HeapAllocation_Type->insert(tuple,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
}
PARALLEL_END;
}
rel_87_HeapAllocation_Type->insert(20,21);
rel_87_HeapAllocation_Type->insert(22,0);
rel_87_HeapAllocation_Type->insert(23,24);
rel_87_HeapAllocation_Type->insert(25,21);
rel_87_HeapAllocation_Type->insert(26,0);
rel_87_HeapAllocation_Type->insert(27,0);
rel_87_HeapAllocation_Type->insert(28,0);
rel_87_HeapAllocation_Type->insert(29,30);
rel_87_HeapAllocation_Type->insert(31,32);
rel_87_HeapAllocation_Type->insert(33,35);
rel_87_HeapAllocation_Type->insert(34,35);
rel_87_HeapAllocation_Type->insert(36,37);
rel_87_HeapAllocation_Type->insert(38,18);
rel_87_HeapAllocation_Type->insert(39,18);
rel_87_HeapAllocation_Type->insert(40,18);
rel_87_HeapAllocation_Type->insert(41,18);
rel_87_HeapAllocation_Type->insert(42,18);
rel_87_HeapAllocation_Type->insert(43,18);
rel_87_HeapAllocation_Type->insert(44,18);
if (!rel_410_Dacapo->empty()) {
auto part = rel_410_Dacapo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_410_Dacapo_op_ctxt,rel_410_Dacapo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(0)});
rel_87_HeapAllocation_Type->insert(tuple,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_27_AssignHeapAllocation->empty()&&!rel_87_HeapAllocation_Type->empty()&&!rel_194_OverridesFinalize->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_194_OverridesFinalize_op_ctxt,rel_194_OverridesFinalize->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_194_OverridesFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_194_OverridesFinalize_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_2_AllocatedObjectSupportsFinalize->insert(tuple,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_2_AllocatedObjectSupportsFinalize->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)70)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)71)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)72))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_71_FakeInvocation_RegisterFinalize0->insert(tuple,READ_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_2_AllocatedObjectSupportsFinalize->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)70)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)71)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)72))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_71_FakeInvocation_RegisterFinalize0->insert(tuple,READ_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_27_AssignHeapAllocation->empty()&&!rel_69_ExceptionType->empty()&&!rel_87_HeapAllocation_Type->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_69_ExceptionType_op_ctxt,rel_69_ExceptionType->createContext());
CREATE_OP_CONTEXT(rel_70_ExceptionTypeToHeap_op_ctxt,rel_70_ExceptionTypeToHeap->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_69_ExceptionType->equalRange<0>(key,READ_OP_CONTEXT(rel_69_ExceptionType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_70_ExceptionTypeToHeap->insert(tuple,READ_OP_CONTEXT(rel_70_ExceptionTypeToHeap_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_70_ExceptionTypeToHeap->empty()) {
auto part = rel_70_ExceptionTypeToHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_68_ExceptionHeapTypeRepresentativeOrdinal_op_ctxt,rel_68_ExceptionHeapTypeRepresentativeOrdinal->createContext());
CREATE_OP_CONTEXT(rel_70_ExceptionTypeToHeap_op_ctxt,rel_70_ExceptionTypeToHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
ram::Tuple<RamDomain,2> env1;
RamDomain res = MAX_RAM_DOMAIN;
const ram::Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_70_ExceptionTypeToHeap->equalRange<1>(key,READ_OP_CONTEXT(rel_70_ExceptionTypeToHeap_op_ctxt));
if(!range.empty()) {
for(const auto& cur : range) {
env1 = cur;
res = std::min(res,env1[0]);
}
env1[0] = res;
{
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env1[0])});
rel_68_ExceptionHeapTypeRepresentativeOrdinal->insert(tuple,READ_OP_CONTEXT(rel_68_ExceptionHeapTypeRepresentativeOrdinal_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_87_HeapAllocation_Type->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_474_isHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_369_Value_isHeap_op_ctxt,rel_369_Value_isHeap->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_369_Value_isHeap->insert(tuple,READ_OP_CONTEXT(rel_369_Value_isHeap_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_447_StringConstant->empty()) {
auto part = rel_447_StringConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_447_StringConstant_op_ctxt,rel_447_StringConstant->createContext());
CREATE_OP_CONTEXT(rel_495_isStringConstant_op_ctxt,rel_495_isStringConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_495_isStringConstant->insert(tuple,READ_OP_CONTEXT(rel_495_isStringConstant_op_ctxt));
}
PARALLEL_END;
}
if (!rel_410_Dacapo->empty()) {
auto part = rel_410_Dacapo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_410_Dacapo_op_ctxt,rel_410_Dacapo->createContext());
CREATE_OP_CONTEXT(rel_495_isStringConstant_op_ctxt,rel_495_isStringConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_495_isStringConstant->insert(tuple,READ_OP_CONTEXT(rel_495_isStringConstant_op_ctxt));
}
PARALLEL_END;
}
rel_309_StringFactoryType->insert(30);
rel_309_StringFactoryType->insert(32);
if (!rel_87_HeapAllocation_Type->empty()&&!rel_309_StringFactoryType->empty()) {
auto part = rel_87_HeapAllocation_Type->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_308_StringFactoryHeap_op_ctxt,rel_308_StringFactoryHeap->createContext());
CREATE_OP_CONTEXT(rel_309_StringFactoryType_op_ctxt,rel_309_StringFactoryType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_309_StringFactoryType->equalRange<0>(key,READ_OP_CONTEXT(rel_309_StringFactoryType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_308_StringFactoryHeap->insert(tuple,READ_OP_CONTEXT(rel_308_StringFactoryHeap_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_27_AssignHeapAllocation->empty()&&!rel_87_HeapAllocation_Type->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt,rel_83_HeapAllocation_Keep->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_142_MethodAndTypeToHeap_op_ctxt,rel_142_MethodAndTypeToHeap->createContext());
CREATE_OP_CONTEXT(rel_170_ObjectMultipleAllocated_op_ctxt,rel_170_ObjectMultipleAllocated->createContext());
CREATE_OP_CONTEXT(rel_308_StringFactoryHeap_op_ctxt,rel_308_StringFactoryHeap->createContext());
CREATE_OP_CONTEXT(rel_414_EmptyArray_op_ctxt,rel_414_EmptyArray->createContext());
CREATE_OP_CONTEXT(rel_495_isStringConstant_op_ctxt,rel_495_isStringConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((((((((!rel_495_isStringConstant->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_495_isStringConstant_op_ctxt))) && (!rel_308_StringFactoryHeap->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_308_StringFactoryHeap_op_ctxt))))) && (!rel_414_EmptyArray->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_414_EmptyArray_op_ctxt))))) && (!rel_170_ObjectMultipleAllocated->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_170_ObjectMultipleAllocated_op_ctxt))))) && (!rel_83_HeapAllocation_Keep->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt))))) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1]),(RamDomain)(env0[2])});
rel_142_MethodAndTypeToHeap->insert(tuple,READ_OP_CONTEXT(rel_142_MethodAndTypeToHeap_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_142_MethodAndTypeToHeap->empty()) {
auto part = rel_142_MethodAndTypeToHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_4_AllocationsPerMethodAndType_op_ctxt,rel_4_AllocationsPerMethodAndType->createContext());
CREATE_OP_CONTEXT(rel_142_MethodAndTypeToHeap_op_ctxt,rel_142_MethodAndTypeToHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
ram::Tuple<RamDomain,3> env1;
RamDomain res = 0;
const ram::Tuple<RamDomain,3> key({0,env0[1],env0[2]});
auto range = rel_142_MethodAndTypeToHeap->equalRange<1,2>(key,READ_OP_CONTEXT(rel_142_MethodAndTypeToHeap_op_ctxt));
for(const auto& cur : range) {
++res
;}
env1[0] = res;
{
Tuple<RamDomain,3> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env1[0])});
rel_4_AllocationsPerMethodAndType->insert(tuple,READ_OP_CONTEXT(rel_4_AllocationsPerMethodAndType_op_ctxt));
}
}
PARALLEL_END;
}
rel_141_MethodAllocationMergeThreshold->insert(50);
if (!rel_4_AllocationsPerMethodAndType->empty()&&!rel_141_MethodAllocationMergeThreshold->empty()) {
auto part = rel_4_AllocationsPerMethodAndType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_3_AllocationShouldBeMergedPerMethod_op_ctxt,rel_3_AllocationShouldBeMergedPerMethod->createContext());
CREATE_OP_CONTEXT(rel_4_AllocationsPerMethodAndType_op_ctxt,rel_4_AllocationsPerMethodAndType->createContext());
CREATE_OP_CONTEXT(rel_141_MethodAllocationMergeThreshold_op_ctxt,rel_141_MethodAllocationMergeThreshold->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_141_MethodAllocationMergeThreshold) {
if( ((env0[2]) > (env1[0]))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_3_AllocationShouldBeMergedPerMethod->insert(tuple,READ_OP_CONTEXT(rel_3_AllocationShouldBeMergedPerMethod_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_4_AllocationsPerMethodAndType->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_249_SpecialLibraryClass->empty()) {
auto part = rel_4_AllocationsPerMethodAndType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_3_AllocationShouldBeMergedPerMethod_op_ctxt,rel_3_AllocationShouldBeMergedPerMethod->createContext());
CREATE_OP_CONTEXT(rel_4_AllocationsPerMethodAndType_op_ctxt,rel_4_AllocationsPerMethodAndType->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_249_SpecialLibraryClass_op_ctxt,rel_249_SpecialLibraryClass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((env0[2]) > (1))) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_249_SpecialLibraryClass->equalRange<0>(key,READ_OP_CONTEXT(rel_249_SpecialLibraryClass_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_3_AllocationShouldBeMergedPerMethod->insert(tuple,READ_OP_CONTEXT(rel_3_AllocationShouldBeMergedPerMethod_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_3_AllocationShouldBeMergedPerMethod->empty()&&!rel_142_MethodAndTypeToHeap->empty()) {
auto part = rel_3_AllocationShouldBeMergedPerMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_3_AllocationShouldBeMergedPerMethod_op_ctxt,rel_3_AllocationShouldBeMergedPerMethod->createContext());
CREATE_OP_CONTEXT(rel_142_MethodAndTypeToHeap_op_ctxt,rel_142_MethodAndTypeToHeap->createContext());
CREATE_OP_CONTEXT(rel_143_MethodAndTypeToMergedHeap_op_ctxt,rel_143_MethodAndTypeToMergedHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[0],env0[1]});
auto range = rel_142_MethodAndTypeToHeap->equalRange<1,2>(key,READ_OP_CONTEXT(rel_142_MethodAndTypeToHeap_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_143_MethodAndTypeToMergedHeap->insert(tuple,READ_OP_CONTEXT(rel_143_MethodAndTypeToMergedHeap_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_143_MethodAndTypeToMergedHeap->empty()) {
auto part = rel_143_MethodAndTypeToMergedHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_143_MethodAndTypeToMergedHeap_op_ctxt,rel_143_MethodAndTypeToMergedHeap->createContext());
CREATE_OP_CONTEXT(rel_157_MinHeapOrdinalPerMethodAndType_op_ctxt,rel_157_MinHeapOrdinalPerMethodAndType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
ram::Tuple<RamDomain,3> env1;
RamDomain res = MAX_RAM_DOMAIN;
const ram::Tuple<RamDomain,3> key({0,env0[1],env0[2]});
auto range = rel_143_MethodAndTypeToMergedHeap->equalRange<1,2>(key,READ_OP_CONTEXT(rel_143_MethodAndTypeToMergedHeap_op_ctxt));
if(!range.empty()) {
for(const auto& cur : range) {
env1 = cur;
res = std::min(res,env1[0]);
}
env1[0] = res;
{
Tuple<RamDomain,3> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_157_MinHeapOrdinalPerMethodAndType->insert(tuple,READ_OP_CONTEXT(rel_157_MinHeapOrdinalPerMethodAndType_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_157_MinHeapOrdinalPerMethodAndType->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_474_isHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_144_MethodAndTypeToRepresentative_op_ctxt,rel_144_MethodAndTypeToRepresentative->createContext());
CREATE_OP_CONTEXT(rel_157_MinHeapOrdinalPerMethodAndType_op_ctxt,rel_157_MinHeapOrdinalPerMethodAndType->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[0],0,0});
auto range = rel_157_MinHeapOrdinalPerMethodAndType->equalRange<0>(key,READ_OP_CONTEXT(rel_157_MinHeapOrdinalPerMethodAndType_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_144_MethodAndTypeToRepresentative->insert(tuple,READ_OP_CONTEXT(rel_144_MethodAndTypeToRepresentative_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_474_isHeapAllocation->empty()&&!rel_495_isStringConstant->empty()) {
auto part = rel_495_isStringConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt,rel_83_HeapAllocation_Keep->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_495_isStringConstant_op_ctxt,rel_495_isStringConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_83_HeapAllocation_Keep->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt))) {
const Tuple<RamDomain,1> key({27});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(27),(RamDomain)(env0[0])});
rel_90_HeapRepresentative->insert(tuple,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_143_MethodAndTypeToMergedHeap->empty()&&!rel_144_MethodAndTypeToRepresentative->empty()) {
auto part = rel_144_MethodAndTypeToRepresentative->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
CREATE_OP_CONTEXT(rel_143_MethodAndTypeToMergedHeap_op_ctxt,rel_143_MethodAndTypeToMergedHeap->createContext());
CREATE_OP_CONTEXT(rel_144_MethodAndTypeToRepresentative_op_ctxt,rel_144_MethodAndTypeToRepresentative->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[0],env0[1]});
auto range = rel_143_MethodAndTypeToMergedHeap->equalRange<1,2>(key,READ_OP_CONTEXT(rel_143_MethodAndTypeToMergedHeap_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env1[0])});
rel_90_HeapRepresentative->insert(tuple,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_87_HeapAllocation_Type->empty()) {
CREATE_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt,rel_83_HeapAllocation_Keep->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({0,30});
auto range = rel_87_HeapAllocation_Type->equalRange<1>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env0 : range) {
if( !rel_83_HeapAllocation_Keep->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(29),(RamDomain)(env0[0])});
rel_90_HeapRepresentative->insert(tuple,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
}
}
}
if (!rel_87_HeapAllocation_Type->empty()) {
CREATE_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt,rel_83_HeapAllocation_Keep->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({0,32});
auto range = rel_87_HeapAllocation_Type->equalRange<1>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env0 : range) {
if( !rel_83_HeapAllocation_Keep->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(31),(RamDomain)(env0[0])});
rel_90_HeapRepresentative->insert(tuple,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
}
}
}
if (!rel_68_ExceptionHeapTypeRepresentativeOrdinal->empty()&&!rel_70_ExceptionTypeToHeap->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_68_ExceptionHeapTypeRepresentativeOrdinal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_68_ExceptionHeapTypeRepresentativeOrdinal_op_ctxt,rel_68_ExceptionHeapTypeRepresentativeOrdinal->createContext());
CREATE_OP_CONTEXT(rel_70_ExceptionTypeToHeap_op_ctxt,rel_70_ExceptionTypeToHeap->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_70_ExceptionTypeToHeap->equalRange<1>(key,READ_OP_CONTEXT(rel_70_ExceptionTypeToHeap_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_474_isHeapAllocation) {
if( ((env0[1]) == (env2[0]))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env2[0]),(RamDomain)(env1[0])});
rel_90_HeapRepresentative->insert(tuple,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_90_HeapRepresentative->empty()) {
CREATE_OP_CONTEXT(rel_88_HeapIsMergedString_op_ctxt,rel_88_HeapIsMergedString->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({27,0});
auto range = rel_90_HeapRepresentative->equalRange<0>(key,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_88_HeapIsMergedString->insert(tuple,READ_OP_CONTEXT(rel_88_HeapIsMergedString_op_ctxt));
}
}
if (!rel_90_HeapRepresentative->empty()) {
CREATE_OP_CONTEXT(rel_89_HeapIsMergedStringFactory_op_ctxt,rel_89_HeapIsMergedStringFactory->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({29,0});
auto range = rel_90_HeapRepresentative->equalRange<0>(key,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_89_HeapIsMergedStringFactory->insert(tuple,READ_OP_CONTEXT(rel_89_HeapIsMergedStringFactory_op_ctxt));
}
}
if (!rel_90_HeapRepresentative->empty()) {
CREATE_OP_CONTEXT(rel_89_HeapIsMergedStringFactory_op_ctxt,rel_89_HeapIsMergedStringFactory->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({31,0});
auto range = rel_90_HeapRepresentative->equalRange<0>(key,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_89_HeapIsMergedStringFactory->insert(tuple,READ_OP_CONTEXT(rel_89_HeapIsMergedStringFactory_op_ctxt));
}
}
if (!rel_90_HeapRepresentative->empty()) {
auto part = rel_90_HeapRepresentative->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt,rel_83_HeapAllocation_Keep->createContext());
CREATE_OP_CONTEXT(rel_88_HeapIsMergedString_op_ctxt,rel_88_HeapIsMergedString->createContext());
CREATE_OP_CONTEXT(rel_89_HeapIsMergedStringFactory_op_ctxt,rel_89_HeapIsMergedStringFactory->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
CREATE_OP_CONTEXT(rel_239_RepresentativesToPickFrom_op_ctxt,rel_239_RepresentativesToPickFrom->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((((!rel_88_HeapIsMergedString->contains(Tuple<RamDomain,1>({env0[1]}),READ_OP_CONTEXT(rel_88_HeapIsMergedString_op_ctxt))) && (!rel_89_HeapIsMergedStringFactory->contains(Tuple<RamDomain,1>({env0[1]}),READ_OP_CONTEXT(rel_89_HeapIsMergedStringFactory_op_ctxt))))) && (!rel_83_HeapAllocation_Keep->contains(Tuple<RamDomain,1>({env0[1]}),READ_OP_CONTEXT(rel_83_HeapAllocation_Keep_op_ctxt))))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_239_RepresentativesToPickFrom->insert(tuple,READ_OP_CONTEXT(rel_239_RepresentativesToPickFrom_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_239_RepresentativesToPickFrom->empty()) {
auto part = rel_239_RepresentativesToPickFrom->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_158_MinRepresentativeHeapToPickFromOrdinal_op_ctxt,rel_158_MinRepresentativeHeapToPickFromOrdinal->createContext());
CREATE_OP_CONTEXT(rel_239_RepresentativesToPickFrom_op_ctxt,rel_239_RepresentativesToPickFrom->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
ram::Tuple<RamDomain,2> env1;
RamDomain res = MAX_RAM_DOMAIN;
const ram::Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_239_RepresentativesToPickFrom->equalRange<1>(key,READ_OP_CONTEXT(rel_239_RepresentativesToPickFrom_op_ctxt));
if(!range.empty()) {
for(const auto& cur : range) {
env1 = cur;
res = std::min(res,env1[0]);
}
env1[0] = res;
{
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[1])});
rel_158_MinRepresentativeHeapToPickFromOrdinal->insert(tuple,READ_OP_CONTEXT(rel_158_MinRepresentativeHeapToPickFromOrdinal_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_90_HeapRepresentative->empty()) {
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({27,0});
auto range = rel_90_HeapRepresentative->equalRange<0>(key,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(27)});
rel_84_HeapAllocation_Merge->insert(tuple,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
}
}
if (!rel_90_HeapRepresentative->empty()) {
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({29,0});
auto range = rel_90_HeapRepresentative->equalRange<0>(key,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(29)});
rel_84_HeapAllocation_Merge->insert(tuple,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
}
}
if (!rel_90_HeapRepresentative->empty()) {
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
const Tuple<RamDomain,2> key({31,0});
auto range = rel_90_HeapRepresentative->equalRange<0>(key,READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt));
for(const auto& env0 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(31)});
rel_84_HeapAllocation_Merge->insert(tuple,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
}
}
if (!rel_158_MinRepresentativeHeapToPickFromOrdinal->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_474_isHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_158_MinRepresentativeHeapToPickFromOrdinal_op_ctxt,rel_158_MinRepresentativeHeapToPickFromOrdinal->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_158_MinRepresentativeHeapToPickFromOrdinal->equalRange<0>(key,READ_OP_CONTEXT(rel_158_MinRepresentativeHeapToPickFromOrdinal_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[1]),(RamDomain)(env0[0])});
rel_84_HeapAllocation_Merge->insert(tuple,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_495_isStringConstant->empty()) {
auto part = rel_495_isStringConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt,rel_82_HeapAllocation_ContextInsensitive->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
CREATE_OP_CONTEXT(rel_495_isStringConstant_op_ctxt,rel_495_isStringConstant->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_90_HeapRepresentative->equalRange<1>(Tuple<RamDomain,2>({0,env0[0]}),READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt)).empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_82_HeapAllocation_ContextInsensitive->insert(tuple,READ_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_463_isClassHeap->empty()) {
auto part = rel_463_isClassHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt,rel_82_HeapAllocation_ContextInsensitive->createContext());
CREATE_OP_CONTEXT(rel_463_isClassHeap_op_ctxt,rel_463_isClassHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_82_HeapAllocation_ContextInsensitive->insert(tuple,READ_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt));
}
PARALLEL_END;
}
if (!rel_251_SpecialLibraryObject->empty()) {
auto part = rel_251_SpecialLibraryObject->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt,rel_82_HeapAllocation_ContextInsensitive->createContext());
CREATE_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt,rel_90_HeapRepresentative->createContext());
CREATE_OP_CONTEXT(rel_251_SpecialLibraryObject_op_ctxt,rel_251_SpecialLibraryObject->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_90_HeapRepresentative->equalRange<1>(Tuple<RamDomain,2>({0,env0[0]}),READ_OP_CONTEXT(rel_90_HeapRepresentative_op_ctxt)).empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_82_HeapAllocation_ContextInsensitive->insert(tuple,READ_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_87_HeapAllocation_Type->empty()&&!rel_408_ComponentType->empty()&&!rel_458_isArrayType->empty()&&!rel_488_isPrimitiveType->empty()) {
auto part = rel_87_HeapAllocation_Type->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt,rel_82_HeapAllocation_ContextInsensitive->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
CREATE_OP_CONTEXT(rel_488_isPrimitiveType_op_ctxt,rel_488_isPrimitiveType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_458_isArrayType->equalRange<0>(key,READ_OP_CONTEXT(rel_458_isArrayType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_408_ComponentType->equalRange<0>(key,READ_OP_CONTEXT(rel_408_ComponentType_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[1]});
auto range = rel_488_isPrimitiveType->equalRange<0>(key,READ_OP_CONTEXT(rel_488_isPrimitiveType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_82_HeapAllocation_ContextInsensitive->insert(tuple,READ_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_82_HeapAllocation_ContextInsensitive->empty()) {
auto part = rel_82_HeapAllocation_ContextInsensitive->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt,rel_82_HeapAllocation_ContextInsensitive->createContext());
CREATE_OP_CONTEXT(rel_86_HeapAllocation_Special_op_ctxt,rel_86_HeapAllocation_Special->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_86_HeapAllocation_Special->insert(tuple,READ_OP_CONTEXT(rel_86_HeapAllocation_Special_op_ctxt));
}
PARALLEL_END;
}
if (!rel_84_HeapAllocation_Merge->empty()) {
auto part = rel_84_HeapAllocation_Merge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_86_HeapAllocation_Special_op_ctxt,rel_86_HeapAllocation_Special->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_86_HeapAllocation_Special->insert(tuple,READ_OP_CONTEXT(rel_86_HeapAllocation_Special_op_ctxt));
}
PARALLEL_END;
}
if (!rel_27_AssignHeapAllocation->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_86_HeapAllocation_Special_op_ctxt,rel_86_HeapAllocation_Special->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_86_HeapAllocation_Special->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_86_HeapAllocation_Special_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_32_AssignNormalHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_27_AssignHeapAllocation->empty()&&!rel_84_HeapAllocation_Merge->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt,rel_26_AssignContextInsensitiveHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_84_HeapAllocation_Merge->equalRange<0>(key,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env1[1]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_26_AssignContextInsensitiveHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_27_AssignHeapAllocation->empty()&&!rel_82_HeapAllocation_ContextInsensitive->empty()) {
auto part = rel_27_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt,rel_26_AssignContextInsensitiveHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt,rel_82_HeapAllocation_ContextInsensitive->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_84_HeapAllocation_Merge->equalRange<0>(Tuple<RamDomain,2>({env0[0],0}),READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt)).empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_82_HeapAllocation_ContextInsensitive->equalRange<0>(key,READ_OP_CONTEXT(rel_82_HeapAllocation_ContextInsensitive_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_26_AssignContextInsensitiveHeapAllocation->insert(tuple,READ_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_419_Field->empty()) {
auto part = rel_419_Field->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt,rel_73_Field_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_419_Field_op_ctxt,rel_419_Field->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_73_Field_DeclaringType->insert(tuple,READ_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt));
}
PARALLEL_END;
}
if (!rel_426_LayoutControl->empty()&&!rel_497_isType->empty()) {
auto part = rel_426_LayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_426_LayoutControl_op_ctxt,rel_426_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_116_LayoutControl->insert(tuple,READ_OP_CONTEXT(rel_116_LayoutControl_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_145_MethodDeclaredOrInherited->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_145_MethodDeclaredOrInherited->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_204_ProtectedOnMethodOfLayoutControl_op_ctxt,rel_204_ProtectedOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_116_LayoutControl->equalRange<1>(key,READ_OP_CONTEXT(rel_116_LayoutControl_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
if( regex_wrapper(symTable.resolve((size_t)85),symTable.resolve((size_t)env2[1]))) {
const Tuple<RamDomain,2> key({61,env0[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_204_ProtectedOnMethodOfLayoutControl->insert(tuple,READ_OP_CONTEXT(rel_204_ProtectedOnMethodOfLayoutControl_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_10_AppMethodOverridesAndroidLibraryMethod->empty()&&!rel_204_ProtectedOnMethodOfLayoutControl->empty()) {
auto part = rel_204_ProtectedOnMethodOfLayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt,rel_10_AppMethodOverridesAndroidLibraryMethod->createContext());
CREATE_OP_CONTEXT(rel_196_OverridingProtectedOnMethodOfLayoutControl_op_ctxt,rel_196_OverridingProtectedOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_204_ProtectedOnMethodOfLayoutControl_op_ctxt,rel_204_ProtectedOnMethodOfLayoutControl->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_10_AppMethodOverridesAndroidLibraryMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_196_OverridingProtectedOnMethodOfLayoutControl->insert(tuple,READ_OP_CONTEXT(rel_196_OverridingProtectedOnMethodOfLayoutControl_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_145_MethodDeclaredOrInherited->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_145_MethodDeclaredOrInherited->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_209_PublicOnMethodOfLayoutControl_op_ctxt,rel_209_PublicOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_116_LayoutControl->equalRange<1>(key,READ_OP_CONTEXT(rel_116_LayoutControl_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
if( regex_wrapper(symTable.resolve((size_t)85),symTable.resolve((size_t)env2[1]))) {
const Tuple<RamDomain,2> key({4,env0[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_209_PublicOnMethodOfLayoutControl->insert(tuple,READ_OP_CONTEXT(rel_209_PublicOnMethodOfLayoutControl_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_497_isType->empty()) {
auto part = rel_116_LayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_237_ReifiedLayoutControl_op_ctxt,rel_237_ReifiedLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)75)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)76)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_237_ReifiedLayoutControl->insert(tuple,READ_OP_CONTEXT(rel_237_ReifiedLayoutControl_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_236_ReifiedComponent->empty()) {
auto part = rel_236_ReifiedComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_236_ReifiedComponent_op_ctxt,rel_236_ReifiedComponent->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_235_ReifiedAndroidObjectValue->insert(tuple,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
}
PARALLEL_END;
}
if (!rel_237_ReifiedLayoutControl->empty()) {
auto part = rel_237_ReifiedLayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_237_ReifiedLayoutControl_op_ctxt,rel_237_ReifiedLayoutControl->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env0[0])});
rel_235_ReifiedAndroidObjectValue->insert(tuple,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
}
PARALLEL_END;
}
if (!rel_238_ReifiedLibraryObject->empty()) {
auto part = rel_238_ReifiedLibraryObject->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_238_ReifiedLibraryObject_op_ctxt,rel_238_ReifiedLibraryObject->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_235_ReifiedAndroidObjectValue->insert(tuple,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_237_ReifiedLayoutControl->empty()) {
auto part = rel_116_LayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_237_ReifiedLayoutControl_op_ctxt,rel_237_ReifiedLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_378_ViewObjectValueFromId_op_ctxt,rel_378_ViewObjectValueFromId->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[1],env0[0],0});
auto range = rel_237_ReifiedLayoutControl->equalRange<0,1>(key,READ_OP_CONTEXT(rel_237_ReifiedLayoutControl_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_378_ViewObjectValueFromId->insert(tuple,READ_OP_CONTEXT(rel_378_ViewObjectValueFromId_op_ctxt));
}
}
PARALLEL_END;
}
rel_135_MainClass->insert(176);
if (!rel_135_MainClass->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_154_Method_Descriptor->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_135_MainClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_135_MainClass_op_ctxt,rel_135_MainClass->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt,rel_154_Method_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_153_Method_DeclaringType->equalRange<1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],67});
auto range = rel_156_Method_SimpleName->equalRange<0,1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env1[0],68});
auto range = rel_154_Method_Descriptor->equalRange<0,1>(key,READ_OP_CONTEXT(rel_154_Method_Descriptor_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({4,env1[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({7,env1[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_138_MainMethodDeclaration->insert(tuple,READ_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_399_AssignReturnValue->empty()) {
auto part = rel_399_AssignReturnValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_399_AssignReturnValue_op_ctxt,rel_399_AssignReturnValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_35_AssignReturnValue->insert(tuple,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,130});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str())),(RamDomain)(env1[0])});
rel_35_AssignReturnValue->insert(tuple,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,132});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(env1[0])});
rel_35_AssignReturnValue->insert(tuple,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,134});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str())),(RamDomain)(env1[0])});
rel_35_AssignReturnValue->insert(tuple,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,135});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(env1[0])});
rel_35_AssignReturnValue->insert(tuple,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,137});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str())),(RamDomain)(env1[0])});
rel_35_AssignReturnValue->insert(tuple,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
}
}
}
if (!rel_35_AssignReturnValue->empty()&&!rel_379_ViewRetrievalByArg0MethodInvocation->empty()&&!rel_385_ActualParam->empty()) {
auto part = rel_379_ViewRetrievalByArg0MethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_377_VarsAtInvocationRetrievingView_op_ctxt,rel_377_VarsAtInvocationRetrievingView->createContext());
CREATE_OP_CONTEXT(rel_379_ViewRetrievalByArg0MethodInvocation_op_ctxt,rel_379_ViewRetrievalByArg0MethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env0[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[1]),(RamDomain)(env2[2])});
rel_377_VarsAtInvocationRetrievingView->insert(tuple,READ_OP_CONTEXT(rel_377_VarsAtInvocationRetrievingView_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_385_ActualParam->empty()) {
auto part = rel_385_ActualParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_401_BootstrapParam->empty()) {
auto part = rel_401_BootstrapParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_401_BootstrapParam_op_ctxt,rel_401_BootstrapParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_399_AssignReturnValue->empty()) {
auto part = rel_399_AssignReturnValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_399_AssignReturnValue_op_ctxt,rel_399_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_393_AssignHeapAllocation->empty()) {
auto part = rel_393_AssignHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_393_AssignHeapAllocation_op_ctxt,rel_393_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_395_AssignLocal->empty()) {
auto part = rel_395_AssignLocal->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_395_AssignLocal_op_ctxt,rel_395_AssignLocal->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_389_AssignBinop->empty()) {
auto part = rel_389_AssignBinop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_389_AssignBinop_op_ctxt,rel_389_AssignBinop->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_400_AssignUnop->empty()) {
auto part = rel_400_AssignUnop->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_400_AssignUnop_op_ctxt,rel_400_AssignUnop->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_390_AssignCast->empty()) {
auto part = rel_390_AssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_390_AssignCast_op_ctxt,rel_390_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_392_AssignCastNumConstant->empty()) {
auto part = rel_392_AssignCastNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_392_AssignCastNumConstant_op_ctxt,rel_392_AssignCastNumConstant->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_391_AssignCastNull->empty()) {
auto part = rel_391_AssignCastNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_391_AssignCastNull_op_ctxt,rel_391_AssignCastNull->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_397_AssignNumConstant->empty()) {
auto part = rel_397_AssignNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_397_AssignNumConstant_op_ctxt,rel_397_AssignNumConstant->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_396_AssignNull->empty()) {
auto part = rel_396_AssignNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_396_AssignNull_op_ctxt,rel_396_AssignNull->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_394_AssignInstanceOf->empty()) {
auto part = rel_394_AssignInstanceOf->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_394_AssignInstanceOf_op_ctxt,rel_394_AssignInstanceOf->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_415_EnterMonitor->empty()) {
auto part = rel_415_EnterMonitor->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_415_EnterMonitor_op_ctxt,rel_415_EnterMonitor->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_418_ExitMonitor->empty()) {
auto part = rel_418_ExitMonitor->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_418_ExitMonitor_op_ctxt,rel_418_ExitMonitor->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_413_DynamicMethodInvocation->empty()) {
auto part = rel_413_DynamicMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_413_DynamicMethodInvocation_op_ctxt,rel_413_DynamicMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_452_Throw->empty()) {
auto part = rel_452_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_452_Throw_op_ctxt,rel_452_Throw->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_453_ThrowNull->empty()) {
auto part = rel_453_ThrowNull->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_453_ThrowNull_op_ctxt,rel_453_ThrowNull->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_445_StoreInstanceField->empty()) {
auto part = rel_445_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_445_StoreInstanceField_op_ctxt,rel_445_StoreInstanceField->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_428_LoadInstanceField->empty()) {
auto part = rel_428_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_428_LoadInstanceField_op_ctxt,rel_428_LoadInstanceField->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_446_StoreStaticField->empty()) {
auto part = rel_446_StoreStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_446_StoreStaticField_op_ctxt,rel_446_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_429_LoadStaticField->empty()) {
auto part = rel_429_LoadStaticField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_429_LoadStaticField_op_ctxt,rel_429_LoadStaticField->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_444_StoreArrayIndex->empty()) {
auto part = rel_444_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_444_StoreArrayIndex_op_ctxt,rel_444_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_427_LoadArrayIndex->empty()) {
auto part = rel_427_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_427_LoadArrayIndex_op_ctxt,rel_427_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_423_Goto->empty()) {
auto part = rel_423_Goto->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_423_Goto_op_ctxt,rel_423_Goto->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_424_If->empty()) {
auto part = rel_424_If->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_424_If_op_ctxt,rel_424_If->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_448_TableSwitch->empty()) {
auto part = rel_448_TableSwitch->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_448_TableSwitch_op_ctxt,rel_448_TableSwitch->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_430_LookupSwitch->empty()) {
auto part = rel_430_LookupSwitch->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_430_LookupSwitch_op_ctxt,rel_430_LookupSwitch->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_439_Return->empty()) {
auto part = rel_439_Return->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_439_Return_op_ctxt,rel_439_Return->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_440_ReturnVoid->empty()) {
auto part = rel_440_ReturnVoid->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_440_ReturnVoid_op_ctxt,rel_440_ReturnVoid->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_398_AssignPhantomInvoke->empty()) {
auto part = rel_398_AssignPhantomInvoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_398_AssignPhantomInvoke_op_ctxt,rel_398_AssignPhantomInvoke->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_438_PhantomInvoke->empty()) {
auto part = rel_438_PhantomInvoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_438_PhantomInvoke_op_ctxt,rel_438_PhantomInvoke->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_402_BreakpointStmt->empty()) {
auto part = rel_402_BreakpointStmt->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_402_BreakpointStmt_op_ctxt,rel_402_BreakpointStmt->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_454_UnsupportedInstruction->empty()) {
auto part = rel_454_UnsupportedInstruction->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_454_UnsupportedInstruction_op_ctxt,rel_454_UnsupportedInstruction->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
PARALLEL_END;
}
if (!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_2_AllocatedObjectSupportsFinalize->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)70)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)71)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)72))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({127});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,130});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,132});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,134});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,135});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,137});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
if (!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_2_AllocatedObjectSupportsFinalize->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)70)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)71)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)72))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_478_isInstruction->insert(tuple,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_385_ActualParam->empty()) {
auto part = rel_385_ActualParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_401_BootstrapParam->empty()) {
auto part = rel_401_BootstrapParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_401_BootstrapParam_op_ctxt,rel_401_BootstrapParam->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_399_AssignReturnValue->empty()) {
auto part = rel_399_AssignReturnValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_399_AssignReturnValue_op_ctxt,rel_399_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_433_MethodInvocation_Line->empty()) {
auto part = rel_433_MethodInvocation_Line->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_433_MethodInvocation_Line_op_ctxt,rel_433_MethodInvocation_Line->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_443_StaticMethodInvocation->empty()) {
auto part = rel_443_StaticMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_443_StaticMethodInvocation_op_ctxt,rel_443_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_442_SpecialMethodInvocation->empty()) {
auto part = rel_442_SpecialMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_442_SpecialMethodInvocation_op_ctxt,rel_442_SpecialMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_457_VirtualMethodInvocation->empty()) {
auto part = rel_457_VirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_457_VirtualMethodInvocation_op_ctxt,rel_457_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_413_DynamicMethodInvocation->empty()) {
auto part = rel_413_DynamicMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_413_DynamicMethodInvocation_op_ctxt,rel_413_DynamicMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
PARALLEL_END;
}
if (!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_2_AllocatedObjectSupportsFinalize->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)70)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)71)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)72))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({125});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,125});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({127});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)125)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)126)) + std::string(symTable.resolve((size_t)127))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,130,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({60});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({130});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,130});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)130)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)60))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,132,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({132});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,132});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)132)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,134,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({133});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({134});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,134});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)134)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)133))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,135,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({135});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,135});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)135)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
if (!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,137,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({136});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
const Tuple<RamDomain,1> key({137});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,137});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)137)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)131)) + std::string(symTable.resolve((size_t)136))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
if (!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_2_AllocatedObjectSupportsFinalize->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)70)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)71)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)72))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_486_isMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_456_Var_Type->empty()) {
auto part = rel_456_Var_Type->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_456_Var_Type_op_ctxt,rel_456_Var_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_376_Var_Type->insert(tuple,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()&&!rel_486_isMethodInvocation->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({116});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,116,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_486_isMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env1[0])) + std::string(symTable.resolve((size_t)115))).c_str())),(RamDomain)(18)});
rel_376_Var_Type->insert(tuple,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
}
}
}
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({128});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,128});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({0});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({26});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)128)) + std::string(symTable.resolve((size_t)129))).c_str())),(RamDomain)(0)});
rel_376_Var_Type->insert(tuple,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
}
}
}
}
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_356_TopLevelEntryPoint->empty()&&!rel_489_isReferenceType->empty()) {
auto part = rel_356_TopLevelEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt,rel_356_TopLevelEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_406_ClassModifier_op_ctxt,rel_406_ClassModifier->createContext());
CREATE_OP_CONTEXT(rel_489_isReferenceType_op_ctxt,rel_489_isReferenceType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
if( !rel_406_ClassModifier->contains(Tuple<RamDomain,2>({3,env1[1]}),READ_OP_CONTEXT(rel_406_ClassModifier_op_ctxt))) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_489_isReferenceType->equalRange<0>(key,READ_OP_CONTEXT(rel_489_isReferenceType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[1])});
rel_167_ObjToMock->insert(tuple,READ_OP_CONTEXT(rel_167_ObjToMock_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_80_FormalsForEntryPoints->empty()&&!rel_257_StaticToActualType->empty()&&!rel_376_Var_Type->empty()) {
auto part = rel_80_FormalsForEntryPoints->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_80_FormalsForEntryPoints_op_ctxt,rel_80_FormalsForEntryPoints->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt,rel_257_StaticToActualType->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_257_StaticToActualType->equalRange<1>(key,READ_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env2[0])});
rel_167_ObjToMock->insert(tuple,READ_OP_CONTEXT(rel_167_ObjToMock_op_ctxt));
}
}
}
PARALLEL_END;
}
rel_168_delta_ObjToMock->insertAll(*rel_167_ObjToMock);
for(;;) {
if (!rel_168_delta_ObjToMock->empty()&&!rel_257_StaticToActualType->empty()&&!rel_408_ComponentType->empty()&&!rel_458_isArrayType->empty()) {
auto part = rel_168_delta_ObjToMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_168_delta_ObjToMock_op_ctxt,rel_168_delta_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_169_new_ObjToMock_op_ctxt,rel_169_new_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt,rel_257_StaticToActualType->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_458_isArrayType->equalRange<0>(key,READ_OP_CONTEXT(rel_458_isArrayType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_408_ComponentType->equalRange<0>(key,READ_OP_CONTEXT(rel_408_ComponentType_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env2[1]});
auto range = rel_257_StaticToActualType->equalRange<1>(key,READ_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt));
for(const auto& env3 : range) {
if( !rel_167_ObjToMock->contains(Tuple<RamDomain,1>({env3[0]}),READ_OP_CONTEXT(rel_167_ObjToMock_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env3[0])});
rel_169_new_ObjToMock->insert(tuple,READ_OP_CONTEXT(rel_169_new_ObjToMock_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if(rel_169_new_ObjToMock->empty()) break;
rel_167_ObjToMock->insertAll(*rel_169_new_ObjToMock);
{
auto rel_0 = rel_168_delta_ObjToMock;
rel_168_delta_ObjToMock = rel_169_new_ObjToMock;
rel_169_new_ObjToMock = rel_0;
}
rel_169_new_ObjToMock->purge();
}
rel_168_delta_ObjToMock->purge();
rel_169_new_ObjToMock->purge();
if (!rel_167_ObjToMock->empty()) {
auto part = rel_167_ObjToMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_160_MockObject_op_ctxt,rel_160_MockObject->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((rel_138_MainMethodDeclaration->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt)).empty()) && (rel_5_AndroidAppComponent->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt)).empty()))) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)151))).c_str())),(RamDomain)(env0[0])});
rel_160_MockObject->insert(tuple,READ_OP_CONTEXT(rel_160_MockObject_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_160_MockObject->empty()&&!rel_257_StaticToActualType->empty()) {
auto part = rel_160_MockObject->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_160_MockObject_op_ctxt,rel_160_MockObject->createContext());
CREATE_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt,rel_163_MockObjectForType->createContext());
CREATE_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt,rel_257_StaticToActualType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_257_StaticToActualType->equalRange<0>(key,READ_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_163_MockObjectForType->insert(tuple,READ_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_163_MockObjectForType->empty()&&!rel_408_ComponentType->empty()) {
auto part = rel_408_ComponentType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_162_MockObjectForComponentType_op_ctxt,rel_162_MockObjectForComponentType->createContext());
CREATE_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt,rel_163_MockObjectForType->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_163_MockObjectForType->equalRange<1>(key,READ_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_162_MockObjectForComponentType->insert(tuple,READ_OP_CONTEXT(rel_162_MockObjectForComponentType_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_150_MethodLookup->empty()&&!rel_313_SubtypeOf->empty()&&!rel_376_Var_Type->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()&&!rel_382_VirtualMethodInvocation_Descriptor->empty()&&!rel_383_VirtualMethodInvocation_SimpleName->empty()) {
auto part = rel_383_VirtualMethodInvocation_SimpleName->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_382_VirtualMethodInvocation_Descriptor_op_ctxt,rel_382_VirtualMethodInvocation_Descriptor->createContext());
CREATE_OP_CONTEXT(rel_383_VirtualMethodInvocation_SimpleName_op_ctxt,rel_383_VirtualMethodInvocation_SimpleName->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_382_VirtualMethodInvocation_Descriptor->equalRange<0>(key,READ_OP_CONTEXT(rel_382_VirtualMethodInvocation_Descriptor_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,4> key({env0[1],env1[1],env4[0],0});
auto range = rel_150_MethodLookup->equalRange<0,1,2>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env4[0]),(RamDomain)(env0[0]),(RamDomain)(env5[3])});
rel_240_ResolveInvocation->insert(tuple,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_80_FormalsForEntryPoints->empty()&&!rel_257_StaticToActualType->empty()&&!rel_376_Var_Type->empty()) {
auto part = rel_80_FormalsForEntryPoints->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_80_FormalsForEntryPoints_op_ctxt,rel_80_FormalsForEntryPoints->createContext());
CREATE_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt,rel_257_StaticToActualType->createContext());
CREATE_OP_CONTEXT(rel_357_TypeForFormals_op_ctxt,rel_357_TypeForFormals->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_257_StaticToActualType->equalRange<1>(key,READ_OP_CONTEXT(rel_257_StaticToActualType_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0]),(RamDomain)(env2[0])});
rel_357_TypeForFormals->insert(tuple,READ_OP_CONTEXT(rel_357_TypeForFormals_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_160_MockObject->empty()&&!rel_357_TypeForFormals->empty()) {
auto part = rel_357_TypeForFormals->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_159_MockForFormal_op_ctxt,rel_159_MockForFormal->createContext());
CREATE_OP_CONTEXT(rel_160_MockObject_op_ctxt,rel_160_MockObject->createContext());
CREATE_OP_CONTEXT(rel_357_TypeForFormals_op_ctxt,rel_357_TypeForFormals->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_160_MockObject->equalRange<1>(key,READ_OP_CONTEXT(rel_160_MockObject_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0]),(RamDomain)(env0[2]),(RamDomain)(env0[1])});
rel_159_MockForFormal->insert(tuple,READ_OP_CONTEXT(rel_159_MockForFormal_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_385_ActualParam->empty()) {
auto part = rel_385_ActualParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_401_BootstrapParam->empty()) {
auto part = rel_401_BootstrapParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_401_BootstrapParam_op_ctxt,rel_401_BootstrapParam->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_422_FormalParam->empty()) {
auto part = rel_422_FormalParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[2])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_436_NativeReturnVar->empty()) {
auto part = rel_436_NativeReturnVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_436_NativeReturnVar_op_ctxt,rel_436_NativeReturnVar->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_456_Var_Type->empty()) {
auto part = rel_456_Var_Type->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_456_Var_Type_op_ctxt,rel_456_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_455_Var_DeclaringMethod->empty()) {
auto part = rel_455_Var_DeclaringMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_455_Var_DeclaringMethod_op_ctxt,rel_455_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_451_ThisVar->empty()) {
auto part = rel_451_ThisVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_399_AssignReturnValue->empty()) {
auto part = rel_399_AssignReturnValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_399_AssignReturnValue_op_ctxt,rel_399_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
PARALLEL_END;
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()&&!rel_486_isMethodInvocation->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({116});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,116,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_486_isMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env1[0])) + std::string(symTable.resolve((size_t)115))).c_str()))});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
}
}
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({128});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,128});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({0});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({26});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)128)) + std::string(symTable.resolve((size_t)129))).c_str()))});
rel_499_isVar->insert(tuple,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
}
}
}
}
}
if (!rel_29_AssignInstruction_To->empty()&&!rel_31_AssignLocal_From->empty()&&!rel_109_Instruction_Method->empty()&&!rel_461_isAssignLocal_Insn->empty()) {
auto part = rel_461_isAssignLocal_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_30_AssignLocal_op_ctxt,rel_30_AssignLocal->createContext());
CREATE_OP_CONTEXT(rel_31_AssignLocal_From_op_ctxt,rel_31_AssignLocal_From->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_461_isAssignLocal_Insn_op_ctxt,rel_461_isAssignLocal_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_31_AssignLocal_From->equalRange<0>(key,READ_OP_CONTEXT(rel_31_AssignLocal_From_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[1]),(RamDomain)(env1[1]),(RamDomain)(env2[1])});
rel_30_AssignLocal->insert(tuple,READ_OP_CONTEXT(rel_30_AssignLocal_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_485_isMethod->empty()&&!rel_499_isVar->empty()) {
CREATE_OP_CONTEXT(rel_30_AssignLocal_op_ctxt,rel_30_AssignLocal->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({103});
auto range = rel_499_isVar->equalRange<0>(key,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({104});
auto range = rel_499_isVar->equalRange<0>(key,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({105});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(103),(RamDomain)(104),(RamDomain)(105)});
rel_30_AssignLocal->insert(tuple,READ_OP_CONTEXT(rel_30_AssignLocal_op_ctxt));
}
}
}
}
if (!rel_486_isMethodInvocation->empty()) {
auto part = rel_486_isMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_248_SiteShouldNotBeRefined->insert(tuple,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
}
PARALLEL_END;
}
if (!rel_109_Instruction_Method->empty()&&!rel_295_StoreArrayIndex_Base->empty()&&!rel_296_StoreArrayIndex_From->empty()&&!rel_492_isStoreArrayIndex_Insn->empty()) {
auto part = rel_492_isStoreArrayIndex_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_295_StoreArrayIndex_Base_op_ctxt,rel_295_StoreArrayIndex_Base->createContext());
CREATE_OP_CONTEXT(rel_296_StoreArrayIndex_From_op_ctxt,rel_296_StoreArrayIndex_From->createContext());
CREATE_OP_CONTEXT(rel_492_isStoreArrayIndex_Insn_op_ctxt,rel_492_isStoreArrayIndex_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_296_StoreArrayIndex_From->equalRange<0>(key,READ_OP_CONTEXT(rel_296_StoreArrayIndex_From_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_295_StoreArrayIndex_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_295_StoreArrayIndex_Base_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env1[1])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()&&!rel_486_isMethodInvocation->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({116});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,116,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_486_isMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env1[0])) + std::string(symTable.resolve((size_t)115))).c_str())),(RamDomain)(env3[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
}
}
if (!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({117});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,117,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({3,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[2]),(RamDomain)(env2[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({118});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,118,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[2]),(RamDomain)(env2[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({119});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,119,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[2]),(RamDomain)(env2[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({120});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,120,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[2]),(RamDomain)(env2[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({121});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,121,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[2]),(RamDomain)(env2[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({128});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,128});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({0});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({26});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)128)) + std::string(symTable.resolve((size_t)129))).c_str())),(RamDomain)(env1[0]),(RamDomain)(128)});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({153});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,153,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env3[2]),(RamDomain)(env2[2]),(RamDomain)(env1[2])});
rel_294_StoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_294_StoreArrayIndex->empty()) {
auto part = rel_294_StoreArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_187_OptStoreArrayIndex_op_ctxt,rel_187_OptStoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_187_OptStoreArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_187_OptStoreArrayIndex_op_ctxt));
}
PARALLEL_END;
}
if (!rel_109_Instruction_Method->empty()&&!rel_122_LoadArrayIndex_Base->empty()&&!rel_123_LoadArrayIndex_To->empty()&&!rel_482_isLoadArrayIndex_Insn->empty()) {
auto part = rel_482_isLoadArrayIndex_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_122_LoadArrayIndex_Base_op_ctxt,rel_122_LoadArrayIndex_Base->createContext());
CREATE_OP_CONTEXT(rel_123_LoadArrayIndex_To_op_ctxt,rel_123_LoadArrayIndex_To->createContext());
CREATE_OP_CONTEXT(rel_482_isLoadArrayIndex_Insn_op_ctxt,rel_482_isLoadArrayIndex_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_122_LoadArrayIndex_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_122_LoadArrayIndex_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_123_LoadArrayIndex_To->equalRange<0>(key,READ_OP_CONTEXT(rel_123_LoadArrayIndex_To_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env1[1])});
rel_121_LoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()&&!rel_486_isMethodInvocation->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({116});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,116,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_486_isMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[2]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env1[0])) + std::string(symTable.resolve((size_t)115))).c_str())),(RamDomain)(env1[2])});
rel_121_LoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
}
}
}
}
}
}
}
if (!rel_35_AssignReturnValue->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({122});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,122,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[2]),(RamDomain)(env3[1]),(RamDomain)(env1[2])});
rel_121_LoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_35_AssignReturnValue->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({123});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,123,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[2]),(RamDomain)(env3[1]),(RamDomain)(env1[2])});
rel_121_LoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_35_AssignReturnValue->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({124});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,124,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[2]),(RamDomain)(env3[1]),(RamDomain)(env1[2])});
rel_121_LoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_35_AssignReturnValue->empty()&&!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({152});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,152,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[2]),(RamDomain)(env3[1]),(RamDomain)(env1[2])});
rel_121_LoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
}
}
}
}
}
if (!rel_121_LoadArrayIndex->empty()) {
auto part = rel_121_LoadArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_180_OptLoadArrayIndex_op_ctxt,rel_180_OptLoadArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_180_OptLoadArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_180_OptLoadArrayIndex_op_ctxt));
}
PARALLEL_END;
}
if (!rel_455_Var_DeclaringMethod->empty()) {
auto part = rel_455_Var_DeclaringMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_455_Var_DeclaringMethod_op_ctxt,rel_455_Var_DeclaringMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_375_Var_DeclaringMethod->insert(tuple,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
}
PARALLEL_END;
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_485_isMethod->empty()&&!rel_486_isMethodInvocation->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt,rel_486_isMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({116});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,116,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,3> key({2,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_486_isMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_486_isMethodInvocation_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({18});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env1[0])) + std::string(symTable.resolve((size_t)115))).c_str())),(RamDomain)(env1[2])});
rel_375_Var_DeclaringMethod->insert(tuple,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
}
}
}
}
}
}
}
if (!rel_242_ReturnVar->empty()&&!rel_474_isHeapAllocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({128});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,128});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({0});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({26});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)128)) + std::string(symTable.resolve((size_t)129))).c_str())),(RamDomain)(128)});
rel_375_Var_DeclaringMethod->insert(tuple,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
}
}
}
}
}
if (!rel_11_ApplicationMethod->empty()&&!rel_375_Var_DeclaringMethod->empty()) {
auto part = rel_375_Var_DeclaringMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_18_ApplicationVar_op_ctxt,rel_18_ApplicationVar->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_11_ApplicationMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_18_ApplicationVar->insert(tuple,READ_OP_CONTEXT(rel_18_ApplicationVar_op_ctxt));
}
}
PARALLEL_END;
}
rel_450_Tamiflex_ToDoopFormat->insert(45,1);
rel_450_Tamiflex_ToDoopFormat->insert(46,47);
rel_450_Tamiflex_ToDoopFormat->insert(48,49);
rel_450_Tamiflex_ToDoopFormat->insert(50,51);
rel_450_Tamiflex_ToDoopFormat->insert(52,53);
rel_450_Tamiflex_ToDoopFormat->insert(54,55);
rel_450_Tamiflex_ToDoopFormat->insert(56,57);
if (!rel_449_Tamiflex_ReflectionData->empty()&&!rel_450_Tamiflex_ToDoopFormat->empty()) {
auto part = rel_449_Tamiflex_ReflectionData->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt,rel_339_Tamiflex_ReflectionData->createContext());
CREATE_OP_CONTEXT(rel_449_Tamiflex_ReflectionData_op_ctxt,rel_449_Tamiflex_ReflectionData->createContext());
CREATE_OP_CONTEXT(rel_450_Tamiflex_ToDoopFormat_op_ctxt,rel_450_Tamiflex_ToDoopFormat->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_450_Tamiflex_ToDoopFormat->equalRange<0>(key,READ_OP_CONTEXT(rel_450_Tamiflex_ToDoopFormat_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_450_Tamiflex_ToDoopFormat->equalRange<0>(key,READ_OP_CONTEXT(rel_450_Tamiflex_ToDoopFormat_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,6> tuple({(RamDomain)(env1[1]),(RamDomain)(env2[1]),(RamDomain)(env0[2]),(RamDomain)(env0[3]),(RamDomain)(env0[4]),(RamDomain)(env0[5])});
rel_339_Tamiflex_ReflectionData->insert(tuple,READ_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_449_Tamiflex_ReflectionData->empty()&&!rel_450_Tamiflex_ToDoopFormat->empty()) {
auto part = rel_449_Tamiflex_ReflectionData->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt,rel_339_Tamiflex_ReflectionData->createContext());
CREATE_OP_CONTEXT(rel_449_Tamiflex_ReflectionData_op_ctxt,rel_449_Tamiflex_ReflectionData->createContext());
CREATE_OP_CONTEXT(rel_450_Tamiflex_ToDoopFormat_op_ctxt,rel_450_Tamiflex_ToDoopFormat->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_450_Tamiflex_ToDoopFormat->equalRange<0>(key,READ_OP_CONTEXT(rel_450_Tamiflex_ToDoopFormat_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,6> tuple({(RamDomain)(env1[1]),(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env0[3]),(RamDomain)(env0[4]),(RamDomain)(env0[5])});
rel_339_Tamiflex_ReflectionData->insert(tuple,READ_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_109_Instruction_Method->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_339_Tamiflex_ReflectionData->empty()&&!rel_433_MethodInvocation_Line->empty()&&!rel_464_isClassType->empty()) {
auto part = rel_339_Tamiflex_ReflectionData->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt,rel_339_Tamiflex_ReflectionData->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_433_MethodInvocation_Line_op_ctxt,rel_433_MethodInvocation_Line->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((env0[5]) > (0))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_464_isClassType->equalRange<0>(key,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],env0[0]});
auto range = rel_153_Method_DeclaringType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[3]});
auto range = rel_464_isClassType->equalRange<0>(key,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[4]});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env5[0],env0[3]});
auto range = rel_153_Method_DeclaringType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[5]});
auto range = rel_433_MethodInvocation_Line->equalRange<1>(key,READ_OP_CONTEXT(rel_433_MethodInvocation_Line_op_ctxt));
for(const auto& env7 : range) {
const Tuple<RamDomain,2> key({env7[0],env2[0]});
auto range = rel_149_MethodInvocation_Method->equalRange<0,1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env7[0],env5[0]});
auto range = rel_109_Instruction_Method->equalRange<0,1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env7[0])});
rel_340_Tamiflex_ReflectionMap->insert(tuple,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
}
}
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_109_Instruction_Method->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_339_Tamiflex_ReflectionData->empty()&&!rel_464_isClassType->empty()) {
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt,rel_339_Tamiflex_ReflectionData->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_464_isClassType_op_ctxt,rel_464_isClassType->createContext());
const Tuple<RamDomain,6> key({0,0,0,0,0,0});
auto range = rel_339_Tamiflex_ReflectionData->equalRange<5>(key,READ_OP_CONTEXT(rel_339_Tamiflex_ReflectionData_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_464_isClassType->equalRange<0>(key,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],env0[0]});
auto range = rel_153_Method_DeclaringType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[3]});
auto range = rel_464_isClassType->equalRange<0>(key,READ_OP_CONTEXT(rel_464_isClassType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[4]});
auto range = rel_156_Method_SimpleName->equalRange<1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env5[0],env0[3]});
auto range = rel_153_Method_DeclaringType->equalRange<0,1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env2[0]});
auto range = rel_149_MethodInvocation_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env7 : range) {
const Tuple<RamDomain,2> key({env7[0],env5[0]});
auto range = rel_109_Instruction_Method->equalRange<0,1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env7[0])});
rel_340_Tamiflex_ReflectionMap->insert(tuple,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
}
}
}
}
}
}
}
}
}
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({158});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,158,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env5[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env5[1]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_335_Tamiflex_Constructor_NewInstance->insert(tuple,READ_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_333_Tamiflex_Array_NewInstance_op_ctxt,rel_333_Tamiflex_Array_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({159});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,159,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_333_Tamiflex_Array_NewInstance->insert(tuple,READ_OP_CONTEXT(rel_333_Tamiflex_Array_NewInstance_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_334_Tamiflex_Class_NewInstance_op_ctxt,rel_334_Tamiflex_Class_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({157});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,157,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_334_Tamiflex_Class_NewInstance->insert(tuple,READ_OP_CONTEXT(rel_334_Tamiflex_Class_NewInstance_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_342_Tamiflex_ReifiedFieldArray_op_ctxt,rel_342_Tamiflex_ReifiedFieldArray->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({163});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,163,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str())),(RamDomain)(env1[0])});
rel_342_Tamiflex_ReifiedFieldArray->insert(tuple,READ_OP_CONTEXT(rel_342_Tamiflex_ReifiedFieldArray_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_342_Tamiflex_ReifiedFieldArray_op_ctxt,rel_342_Tamiflex_ReifiedFieldArray->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({164});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,164,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str())),(RamDomain)(env1[0])});
rel_342_Tamiflex_ReifiedFieldArray->insert(tuple,READ_OP_CONTEXT(rel_342_Tamiflex_ReifiedFieldArray_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_343_Tamiflex_ReifiedMethod_op_ctxt,rel_343_Tamiflex_ReifiedMethod->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({166});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,166,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env1[0])});
rel_343_Tamiflex_ReifiedMethod->insert(tuple,READ_OP_CONTEXT(rel_343_Tamiflex_ReifiedMethod_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_343_Tamiflex_ReifiedMethod_op_ctxt,rel_343_Tamiflex_ReifiedMethod->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({167});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,167,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env1[0])});
rel_343_Tamiflex_ReifiedMethod->insert(tuple,READ_OP_CONTEXT(rel_343_Tamiflex_ReifiedMethod_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_344_Tamiflex_ReifiedMethodArray_op_ctxt,rel_344_Tamiflex_ReifiedMethodArray->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({169});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,169,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str())),(RamDomain)(env1[0])});
rel_344_Tamiflex_ReifiedMethodArray->insert(tuple,READ_OP_CONTEXT(rel_344_Tamiflex_ReifiedMethodArray_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_344_Tamiflex_ReifiedMethodArray_op_ctxt,rel_344_Tamiflex_ReifiedMethodArray->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({170});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,170,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str())),(RamDomain)(env1[0])});
rel_344_Tamiflex_ReifiedMethodArray->insert(tuple,READ_OP_CONTEXT(rel_344_Tamiflex_ReifiedMethodArray_op_ctxt));
}
}
}
}
}
}
if (!rel_34_AssignNumConstant_Id->empty()&&!rel_109_Instruction_Method->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_363_Type_int->empty()&&!rel_487_isNumConstant->empty()&&!rel_497_isType->empty()) {
auto part = rel_487_isNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt,rel_34_AssignNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_34_AssignNumConstant_Id->equalRange<1>(key,READ_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],89});
auto range = rel_156_Method_SimpleName->equalRange<0,1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env4 : range) {
if( (std::string(symTable.resolve((size_t)env4[1])).find(symTable.resolve((size_t)149))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env4[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
for(const auto& env6 : *rel_363_Type_int) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)148)) + std::string(symTable.resolve((size_t)env0[0]))).c_str())),(RamDomain)(env0[0])});
rel_367_Value_Num->insert(tuple,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_73_Field_DeclaringType->empty()&&!rel_363_Type_int->empty()&&!rel_420_FieldInitialValue->empty()&&!rel_487_isNumConstant->empty()&&!rel_497_isType->empty()) {
auto part = rel_487_isNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt,rel_73_Field_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt,rel_420_FieldInitialValue->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_420_FieldInitialValue->equalRange<1>(key,READ_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_73_Field_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
if( (std::string(symTable.resolve((size_t)env2[1])).find(symTable.resolve((size_t)149))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env2[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
for(const auto& env4 : *rel_363_Type_int) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)148)) + std::string(symTable.resolve((size_t)env0[0]))).c_str())),(RamDomain)(env0[0])});
rel_367_Value_Num->insert(tuple,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_421_Field_Modifier->empty()) {
auto part = rel_421_Field_Modifier->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt,rel_421_Field_Modifier->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_470_isField->insert(tuple,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
}
PARALLEL_END;
}
if (!rel_419_Field->empty()) {
auto part = rel_419_Field->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_419_Field_op_ctxt,rel_419_Field->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_470_isField->insert(tuple,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
}
PARALLEL_END;
}
if (!rel_5_AndroidAppComponent->empty()&&!rel_497_isType->empty()) {
auto part = rel_5_AndroidAppComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)73)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str())),(RamDomain)(env0[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_497_isType->empty()) {
auto part = rel_116_LayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)75)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)76)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str())))).c_str())))).c_str())),(RamDomain)(env0[1])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_101_ImplicitlyInstantiatedLibraryType->empty()&&!rel_497_isType->empty()) {
auto part = rel_101_ImplicitlyInstantiatedLibraryType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt,rel_101_ImplicitlyInstantiatedLibraryType->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)79)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str())),(RamDomain)(env0[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_87_HeapAllocation_Type->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_474_isHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_34_AssignNumConstant_Id->empty()&&!rel_109_Instruction_Method->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_363_Type_int->empty()&&!rel_487_isNumConstant->empty()&&!rel_497_isType->empty()) {
auto part = rel_487_isNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt,rel_34_AssignNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_34_AssignNumConstant_Id->equalRange<1>(key,READ_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],89});
auto range = rel_156_Method_SimpleName->equalRange<0,1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env4 : range) {
if( (std::string(symTable.resolve((size_t)env4[1])).find(symTable.resolve((size_t)149))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env4[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
for(const auto& env6 : *rel_363_Type_int) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)148)) + std::string(symTable.resolve((size_t)env0[0]))).c_str())),(RamDomain)(env6[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_73_Field_DeclaringType->empty()&&!rel_363_Type_int->empty()&&!rel_420_FieldInitialValue->empty()&&!rel_487_isNumConstant->empty()&&!rel_497_isType->empty()) {
auto part = rel_487_isNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt,rel_73_Field_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt,rel_420_FieldInitialValue->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_420_FieldInitialValue->equalRange<1>(key,READ_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_73_Field_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
if( (std::string(symTable.resolve((size_t)env2[1])).find(symTable.resolve((size_t)149))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env2[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
for(const auto& env4 : *rel_363_Type_int) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)148)) + std::string(symTable.resolve((size_t)env0[0]))).c_str())),(RamDomain)(env4[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_167_ObjToMock->empty()) {
auto part = rel_167_ObjToMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((rel_138_MainMethodDeclaration->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt)).empty()) && (rel_5_AndroidAppComponent->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt)).empty()))) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)151))).c_str())),(RamDomain)(env0[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({157});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,157,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env2[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({158});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,158,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env5[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env5[1]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env5[1])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({159});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,159,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env2[0])});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({160});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,160,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(49)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({161});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,161,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(49)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({163});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,163,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str())),(RamDomain)(165)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({164});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,164,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str())),(RamDomain)(165)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({166});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,166,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(51)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({167});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,167,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(51)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({169});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,169,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str())),(RamDomain)(171)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({170});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,170,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str())),(RamDomain)(171)});
rel_368_Value_Type->insert(tuple,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
}
}
}
}
}
}
if (!rel_5_AndroidAppComponent->empty()&&!rel_497_isType->empty()) {
auto part = rel_5_AndroidAppComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)73)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_497_isType->empty()) {
auto part = rel_116_LayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)75)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)76)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_101_ImplicitlyInstantiatedLibraryType->empty()&&!rel_497_isType->empty()) {
auto part = rel_101_ImplicitlyInstantiatedLibraryType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt,rel_101_ImplicitlyInstantiatedLibraryType->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)79)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_87_HeapAllocation_Type->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_474_isHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_34_AssignNumConstant_Id->empty()&&!rel_109_Instruction_Method->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_363_Type_int->empty()&&!rel_487_isNumConstant->empty()&&!rel_497_isType->empty()) {
auto part = rel_487_isNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt,rel_34_AssignNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_34_AssignNumConstant_Id->equalRange<1>(key,READ_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],89});
auto range = rel_156_Method_SimpleName->equalRange<0,1>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env4 : range) {
if( (std::string(symTable.resolve((size_t)env4[1])).find(symTable.resolve((size_t)149))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env4[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
for(const auto& env6 : *rel_363_Type_int) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)148)) + std::string(symTable.resolve((size_t)env0[0]))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_73_Field_DeclaringType->empty()&&!rel_363_Type_int->empty()&&!rel_420_FieldInitialValue->empty()&&!rel_487_isNumConstant->empty()&&!rel_497_isType->empty()) {
auto part = rel_487_isNumConstant->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt,rel_73_Field_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_363_Type_int_op_ctxt,rel_363_Type_int->createContext());
CREATE_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt,rel_420_FieldInitialValue->createContext());
CREATE_OP_CONTEXT(rel_487_isNumConstant_op_ctxt,rel_487_isNumConstant->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_420_FieldInitialValue->equalRange<1>(key,READ_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_73_Field_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
if( (std::string(symTable.resolve((size_t)env2[1])).find(symTable.resolve((size_t)149))!=std::string::npos)) {
const Tuple<RamDomain,1> key({env2[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
for(const auto& env4 : *rel_363_Type_int) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)148)) + std::string(symTable.resolve((size_t)env0[0]))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_167_ObjToMock->empty()) {
auto part = rel_167_ObjToMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((rel_138_MainMethodDeclaration->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt)).empty()) && (rel_5_AndroidAppComponent->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt)).empty()))) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)151))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({157});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,157,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({158});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,158,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env5[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env5[1]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({159});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,159,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({160});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,160,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({161});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,161,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({163});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,163,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({164});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,164,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({166});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,166,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({167});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,167,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({169});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,169,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
const Tuple<RamDomain,1> key({170});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,170,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str()))});
rel_498_isValue->insert(tuple,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
}
}
}
}
}
}
if (!rel_498_isValue->empty()) {
auto part = rel_498_isValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_171_ObjectShouldNotBeRefined_op_ctxt,rel_171_ObjectShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_171_ObjectShouldNotBeRefined->insert(tuple,READ_OP_CONTEXT(rel_171_ObjectShouldNotBeRefined_op_ctxt));
}
PARALLEL_END;
}
if (!rel_72_FieldInstruction_Signature->empty()&&!rel_109_Instruction_Method->empty()&&!rel_134_LoadStaticField_To->empty()&&!rel_484_isLoadStaticField_Insn->empty()) {
auto part = rel_484_isLoadStaticField_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt,rel_133_LoadStaticField->createContext());
CREATE_OP_CONTEXT(rel_134_LoadStaticField_To_op_ctxt,rel_134_LoadStaticField_To->createContext());
CREATE_OP_CONTEXT(rel_484_isLoadStaticField_Insn_op_ctxt,rel_484_isLoadStaticField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_72_FieldInstruction_Signature->equalRange<0>(key,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_134_LoadStaticField_To->equalRange<0>(key,READ_OP_CONTEXT(rel_134_LoadStaticField_To_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env1[1])});
rel_133_LoadStaticField->insert(tuple,READ_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_35_AssignReturnValue->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_421_Field_Modifier->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt,rel_133_LoadStaticField->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt,rel_421_Field_Modifier->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({154});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,154,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({7,env2[0]});
auto range = rel_421_Field_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)(env5[1]),(RamDomain)(env1[2])});
rel_133_LoadStaticField->insert(tuple,READ_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt));
}
}
}
}
}
}
}
if (!rel_72_FieldInstruction_Signature->empty()&&!rel_109_Instruction_Method->empty()&&!rel_307_StoreStaticField_From->empty()&&!rel_494_isStoreStaticField_Insn->empty()) {
auto part = rel_494_isStoreStaticField_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_307_StoreStaticField_From_op_ctxt,rel_307_StoreStaticField_From->createContext());
CREATE_OP_CONTEXT(rel_494_isStoreStaticField_Insn_op_ctxt,rel_494_isStoreStaticField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_307_StoreStaticField_From->equalRange<0>(key,READ_OP_CONTEXT(rel_307_StoreStaticField_From_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_72_FieldInstruction_Signature->equalRange<0>(key,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
for(const auto& env3 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env1[1])});
rel_306_StoreStaticField->insert(tuple,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_499_isVar->empty()) {
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({108});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({106});
auto range = rel_499_isVar->equalRange<0>(key,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({107});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(106),(RamDomain)(107),(RamDomain)(108)});
rel_306_StoreStaticField->insert(tuple,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
}
}
}
}
if (!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_499_isVar->empty()) {
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({111});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({109});
auto range = rel_499_isVar->equalRange<0>(key,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({110});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(109),(RamDomain)(110),(RamDomain)(111)});
rel_306_StoreStaticField->insert(tuple,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
}
}
}
}
if (!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_499_isVar->empty()) {
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({114});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({112});
auto range = rel_499_isVar->equalRange<0>(key,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({113});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(112),(RamDomain)(113),(RamDomain)(114)});
rel_306_StoreStaticField->insert(tuple,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_421_Field_Modifier->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt,rel_421_Field_Modifier->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({155});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,155,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({7,env2[0]});
auto range = rel_421_Field_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({1,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env5[2]),(RamDomain)(env2[0]),(RamDomain)(env1[2])});
rel_306_StoreStaticField->insert(tuple,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
}
}
}
}
}
}
}
if (!rel_5_AndroidAppComponent->empty()&&!rel_497_isType->empty()) {
auto part = rel_5_AndroidAppComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)73)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_116_LayoutControl->empty()&&!rel_497_isType->empty()) {
auto part = rel_116_LayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_116_LayoutControl_op_ctxt,rel_116_LayoutControl->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)75)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)76)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[1])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str())))).c_str())))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_101_ImplicitlyInstantiatedLibraryType->empty()&&!rel_497_isType->empty()) {
auto part = rel_101_ImplicitlyInstantiatedLibraryType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_101_ImplicitlyInstantiatedLibraryType_op_ctxt,rel_101_ImplicitlyInstantiatedLibraryType->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)79)) + std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)74))).c_str())))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_167_ObjToMock->empty()) {
auto part = rel_167_ObjToMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt,rel_5_AndroidAppComponent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_167_ObjToMock_op_ctxt,rel_167_ObjToMock->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((rel_138_MainMethodDeclaration->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt)).empty()) && (rel_5_AndroidAppComponent->equalRange<>(Tuple<RamDomain,1>({0}),READ_OP_CONTEXT(rel_5_AndroidAppComponent_op_ctxt)).empty()))) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)env0[0])) + std::string(symTable.resolve((size_t)151))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({157});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,157,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({158});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,158,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env5[1]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env5[1]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_256_StaticMethodInvocation->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_478_isInstruction->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_478_isInstruction_op_ctxt,rel_478_isInstruction->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({159});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,159,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_478_isInstruction->equalRange<0>(key,READ_OP_CONTEXT(rel_478_isInstruction_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env1[0]))).c_str()))) + std::string(symTable.resolve((size_t)71))).c_str()))) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({160});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,160,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({161});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,161,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({163});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,163,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({164});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,164,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({165});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)162))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({166});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,166,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({167});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,167,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({51});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({169});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,169,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({170});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,170,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({171});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)168))).c_str()))});
rel_370_Value_isMock->insert(tuple,READ_OP_CONTEXT(rel_370_Value_isMock_op_ctxt));
}
}
}
}
}
}
if (!rel_370_Value_isMock->empty()) {
auto part = rel_370_Value_isMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
CREATE_OP_CONTEXT(rel_371_Value_isNonHeap_op_ctxt,rel_371_Value_isNonHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_371_Value_isNonHeap->insert(tuple,READ_OP_CONTEXT(rel_371_Value_isNonHeap_op_ctxt));
}
PARALLEL_END;
}
if (!rel_367_Value_Num->empty()) {
auto part = rel_367_Value_Num->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_371_Value_isNonHeap_op_ctxt,rel_371_Value_isNonHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_371_Value_isNonHeap->insert(tuple,READ_OP_CONTEXT(rel_371_Value_isNonHeap_op_ctxt));
}
PARALLEL_END;
}
if (!rel_369_Value_isHeap->empty()) {
auto part = rel_369_Value_isHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt,rel_164_NotEmptyArrayValue->createContext());
CREATE_OP_CONTEXT(rel_369_Value_isHeap_op_ctxt,rel_369_Value_isHeap->createContext());
CREATE_OP_CONTEXT(rel_414_EmptyArray_op_ctxt,rel_414_EmptyArray->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_414_EmptyArray->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_414_EmptyArray_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_164_NotEmptyArrayValue->insert(tuple,READ_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_371_Value_isNonHeap->empty()) {
auto part = rel_371_Value_isNonHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt,rel_164_NotEmptyArrayValue->createContext());
CREATE_OP_CONTEXT(rel_371_Value_isNonHeap_op_ctxt,rel_371_Value_isNonHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_164_NotEmptyArrayValue->insert(tuple,READ_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt));
}
PARALLEL_END;
}
if (!rel_369_Value_isHeap->empty()) {
auto part = rel_369_Value_isHeap->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt,rel_166_NotSpecialObject->createContext());
CREATE_OP_CONTEXT(rel_369_Value_isHeap_op_ctxt,rel_369_Value_isHeap->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_166_NotSpecialObject->insert(tuple,READ_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt));
}
PARALLEL_END;
}
if (!rel_370_Value_isMock->empty()) {
auto part = rel_370_Value_isMock->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt,rel_166_NotSpecialObject->createContext());
CREATE_OP_CONTEXT(rel_370_Value_isMock_op_ctxt,rel_370_Value_isMock->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_166_NotSpecialObject->insert(tuple,READ_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt));
}
PARALLEL_END;
}
if (!rel_367_Value_Num->empty()) {
auto part = rel_367_Value_Num->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt,rel_166_NotSpecialObject->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_166_NotSpecialObject->insert(tuple,READ_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt));
}
PARALLEL_END;
}
if (!rel_72_FieldInstruction_Signature->empty()&&!rel_109_Instruction_Method->empty()&&!rel_304_StoreInstanceField_Base->empty()&&!rel_305_StoreInstanceField_From->empty()&&!rel_493_isStoreInstanceField_Insn->empty()) {
auto part = rel_493_isStoreInstanceField_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_303_StoreInstanceField_op_ctxt,rel_303_StoreInstanceField->createContext());
CREATE_OP_CONTEXT(rel_304_StoreInstanceField_Base_op_ctxt,rel_304_StoreInstanceField_Base->createContext());
CREATE_OP_CONTEXT(rel_305_StoreInstanceField_From_op_ctxt,rel_305_StoreInstanceField_From->createContext());
CREATE_OP_CONTEXT(rel_493_isStoreInstanceField_Insn_op_ctxt,rel_493_isStoreInstanceField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_305_StoreInstanceField_From->equalRange<0>(key,READ_OP_CONTEXT(rel_305_StoreInstanceField_From_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_304_StoreInstanceField_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_304_StoreInstanceField_Base_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_72_FieldInstruction_Signature->equalRange<0>(key,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
for(const auto& env4 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env4[1]),(RamDomain)(env1[1])});
rel_303_StoreInstanceField->insert(tuple,READ_OP_CONTEXT(rel_303_StoreInstanceField_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_303_StoreInstanceField_op_ctxt,rel_303_StoreInstanceField->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt,rel_421_Field_Modifier->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({155});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,155,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
if( !rel_421_Field_Modifier->contains(Tuple<RamDomain,2>({7,env2[0]}),READ_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt))) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,3> key({1,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[2]),(RamDomain)(env4[2]),(RamDomain)(env2[0]),(RamDomain)(env1[2])});
rel_303_StoreInstanceField->insert(tuple,READ_OP_CONTEXT(rel_303_StoreInstanceField_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_72_FieldInstruction_Signature->empty()&&!rel_109_Instruction_Method->empty()&&!rel_131_LoadInstanceField_Base->empty()&&!rel_132_LoadInstanceField_To->empty()&&!rel_483_isLoadInstanceField_Insn->empty()) {
auto part = rel_483_isLoadInstanceField_Insn->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt,rel_72_FieldInstruction_Signature->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_130_LoadInstanceField_op_ctxt,rel_130_LoadInstanceField->createContext());
CREATE_OP_CONTEXT(rel_131_LoadInstanceField_Base_op_ctxt,rel_131_LoadInstanceField_Base->createContext());
CREATE_OP_CONTEXT(rel_132_LoadInstanceField_To_op_ctxt,rel_132_LoadInstanceField_To->createContext());
CREATE_OP_CONTEXT(rel_483_isLoadInstanceField_Insn_op_ctxt,rel_483_isLoadInstanceField_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_131_LoadInstanceField_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_131_LoadInstanceField_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_72_FieldInstruction_Signature->equalRange<0>(key,READ_OP_CONTEXT(rel_72_FieldInstruction_Signature_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_132_LoadInstanceField_To->equalRange<0>(key,READ_OP_CONTEXT(rel_132_LoadInstanceField_To_op_ctxt));
for(const auto& env4 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[1]),(RamDomain)(env3[1]),(RamDomain)(env4[1]),(RamDomain)(env1[1])});
rel_130_LoadInstanceField->insert(tuple,READ_OP_CONTEXT(rel_130_LoadInstanceField_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_35_AssignReturnValue->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_385_ActualParam->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_130_LoadInstanceField_op_ctxt,rel_130_LoadInstanceField->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt,rel_421_Field_Modifier->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({154});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,154,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
if( !rel_421_Field_Modifier->contains(Tuple<RamDomain,2>({7,env2[0]}),READ_OP_CONTEXT(rel_421_Field_Modifier_op_ctxt))) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[2]),(RamDomain)(env2[0]),(RamDomain)(env5[1]),(RamDomain)(env1[2])});
rel_130_LoadInstanceField->insert(tuple,READ_OP_CONTEXT(rel_130_LoadInstanceField_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_341_Tamiflex_ReifiedField_op_ctxt,rel_341_Tamiflex_ReifiedField->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({160});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,160,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env1[0])});
rel_341_Tamiflex_ReifiedField->insert(tuple,READ_OP_CONTEXT(rel_341_Tamiflex_ReifiedField_op_ctxt));
}
}
}
}
}
}
if (!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_470_isField->empty()&&!rel_485_isMethod->empty()&&!rel_497_isType->empty()) {
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_341_Tamiflex_ReifiedField_op_ctxt,rel_341_Tamiflex_ReifiedField->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
CREATE_OP_CONTEXT(rel_497_isType_op_ctxt,rel_497_isType->createContext());
const Tuple<RamDomain,1> key({161});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,161,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({49});
auto range = rel_497_isType->equalRange<0>(key,READ_OP_CONTEXT(rel_497_isType_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)156)) + std::string(symTable.resolve((size_t)env2[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env1[0])});
rel_341_Tamiflex_ReifiedField->insert(tuple,READ_OP_CONTEXT(rel_341_Tamiflex_ReifiedField_op_ctxt));
}
}
}
}
}
}
rel_481_isJVMStartupHContext->insert(pack(ram::Tuple<RamDomain,1>({40})));
if (!rel_481_isJVMStartupHContext->empty()&&!rel_498_isValue->empty()) {
auto part = rel_481_isJVMStartupHContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_139_MainThread_op_ctxt,rel_139_MainThread->createContext());
CREATE_OP_CONTEXT(rel_481_isJVMStartupHContext_op_ctxt,rel_481_isJVMStartupHContext->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({36});
auto range = rel_498_isValue->equalRange<0>(key,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(36)});
rel_139_MainThread->insert(tuple,READ_OP_CONTEXT(rel_139_MainThread_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_481_isJVMStartupHContext->empty()&&!rel_498_isValue->empty()) {
auto part = rel_481_isJVMStartupHContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_481_isJVMStartupHContext_op_ctxt,rel_481_isJVMStartupHContext->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({34});
auto range = rel_498_isValue->equalRange<0>(key,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(34)});
rel_140_MainThreadGroup->insert(tuple,READ_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_481_isJVMStartupHContext->empty()&&!rel_498_isValue->empty()) {
auto part = rel_481_isJVMStartupHContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_481_isJVMStartupHContext_op_ctxt,rel_481_isJVMStartupHContext->createContext());
CREATE_OP_CONTEXT(rel_498_isValue_op_ctxt,rel_498_isValue->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({33});
auto range = rel_498_isValue->equalRange<0>(key,READ_OP_CONTEXT(rel_498_isValue_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(33)});
rel_320_SystemThreadGroup->insert(tuple,READ_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt));
}
}
PARALLEL_END;
}
rel_476_isImmutableHContext->insert(pack(ram::Tuple<RamDomain,1>({43})));
if (!rel_153_Method_DeclaringType->empty()&&!rel_163_MockObjectForType->empty()&&!rel_356_TopLevelEntryPoint->empty()&&!rel_451_ThisVar->empty()&&!rel_476_isImmutableHContext->empty()) {
auto part = rel_451_ThisVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_50_ContextForEntryPoint_op_ctxt,rel_50_ContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt,rel_163_MockObjectForType->createContext());
CREATE_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt,rel_356_TopLevelEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_476_isImmutableHContext_op_ctxt,rel_476_isImmutableHContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_163_MockObjectForType->equalRange<1>(key,READ_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_476_isImmutableHContext) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_356_TopLevelEntryPoint->equalRange<0>(key,READ_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env2[0]}))),(RamDomain)(env0[0])});
rel_50_ContextForEntryPoint->insert(tuple,READ_OP_CONTEXT(rel_50_ContextForEntryPoint_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_153_Method_DeclaringType->empty()&&!rel_163_MockObjectForType->empty()&&!rel_356_TopLevelEntryPoint->empty()&&!rel_451_ThisVar->empty()&&!rel_476_isImmutableHContext->empty()) {
auto part = rel_451_ThisVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt,rel_163_MockObjectForType->createContext());
CREATE_OP_CONTEXT(rel_234_ReceiverPointsTo_op_ctxt,rel_234_ReceiverPointsTo->createContext());
CREATE_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt,rel_356_TopLevelEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_476_isImmutableHContext_op_ctxt,rel_476_isImmutableHContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_163_MockObjectForType->equalRange<1>(key,READ_OP_CONTEXT(rel_163_MockObjectForType_op_ctxt));
for(const auto& env2 : range) {
for(const auto& env3 : *rel_476_isImmutableHContext) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_356_TopLevelEntryPoint->equalRange<0>(key,READ_OP_CONTEXT(rel_356_TopLevelEntryPoint_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,5> tuple({(RamDomain)(env2[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env2[0]}))),(RamDomain)(env0[1]),(RamDomain)(env1[1]),(RamDomain)(env0[0])});
rel_234_ReceiverPointsTo->insert(tuple,READ_OP_CONTEXT(rel_234_ReceiverPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_234_ReceiverPointsTo->empty()) {
auto part = rel_234_ReceiverPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_81_HContextForEntryPoint_op_ctxt,rel_81_HContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_234_ReceiverPointsTo_op_ctxt,rel_234_ReceiverPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
auto ref = env0[1];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env1 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env1[1]}))),(RamDomain)(env0[4])});
rel_81_HContextForEntryPoint->insert(tuple,READ_OP_CONTEXT(rel_81_HContextForEntryPoint_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_50_ContextForEntryPoint->empty()&&!rel_81_HContextForEntryPoint->empty()&&!rel_159_MockForFormal->empty()) {
auto part = rel_50_ContextForEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_50_ContextForEntryPoint_op_ctxt,rel_50_ContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_81_HContextForEntryPoint_op_ctxt,rel_81_HContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_159_MockForFormal_op_ctxt,rel_159_MockForFormal->createContext());
CREATE_OP_CONTEXT(rel_161_MockObjectContext_op_ctxt,rel_161_MockObjectContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_81_HContextForEntryPoint->equalRange<1>(key,READ_OP_CONTEXT(rel_81_HContextForEntryPoint_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_159_MockForFormal->equalRange<3>(key,READ_OP_CONTEXT(rel_159_MockForFormal_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)(env2[2])});
rel_161_MockObjectContext->insert(tuple,READ_OP_CONTEXT(rel_161_MockObjectContext_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_234_ReceiverPointsTo->empty()) {
auto part = rel_234_ReceiverPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_161_MockObjectContext_op_ctxt,rel_161_MockObjectContext->createContext());
CREATE_OP_CONTEXT(rel_234_ReceiverPointsTo_op_ctxt,rel_234_ReceiverPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
auto ref = env0[1];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env1 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
Tuple<RamDomain,3> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env1[1]}))),(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_161_MockObjectContext->insert(tuple,READ_OP_CONTEXT(rel_161_MockObjectContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_386_AndroidEntryPoint->empty()) {
auto part = rel_386_AndroidEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_386_AndroidEntryPoint_op_ctxt,rel_386_AndroidEntryPoint->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
PARALLEL_END;
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({91});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(91)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({92});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(92)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({93});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(93)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({94});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(94)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({95});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(95)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({96});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(96)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({97});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(97)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({98});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(98)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({99});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(99)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({100});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(100)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({101});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(101)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
if (!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({102});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(102)});
rel_100_ImplicitReachable->insert(tuple,READ_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt));
}
}
rel_475_isImmutableContext->insert(pack(ram::Tuple<RamDomain,2>({42,42})));
rel_465_isClinitContext->insert(pack(ram::Tuple<RamDomain,2>({41,41})));
rel_477_isInitialContext->insert(pack(ram::Tuple<RamDomain,2>({38,38})));
rel_480_isJVMStartupContext->insert(pack(ram::Tuple<RamDomain,2>({39,39})));
rel_136_MainMethodArgArray->insert(20);
rel_137_MainMethodArgArrayContent->insert(22);
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_57_ExceptionHandler_FormalParam_op_ctxt,rel_57_ExceptionHandler_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[4])});
rel_57_ExceptionHandler_FormalParam->insert(tuple,READ_OP_CONTEXT(rel_57_ExceptionHandler_FormalParam_op_ctxt));
}
PARALLEL_END;
}
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_55_ExceptionHandler_Begin_op_ctxt,rel_55_ExceptionHandler_Begin->createContext());
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[5])});
rel_55_ExceptionHandler_Begin->insert(tuple,READ_OP_CONTEXT(rel_55_ExceptionHandler_Begin_op_ctxt));
}
PARALLEL_END;
}
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_56_ExceptionHandler_End_op_ctxt,rel_56_ExceptionHandler_End->createContext());
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[6])});
rel_56_ExceptionHandler_End->insert(tuple,READ_OP_CONTEXT(rel_56_ExceptionHandler_End_op_ctxt));
}
PARALLEL_END;
}
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_61_ExceptionHandler_Method_op_ctxt,rel_61_ExceptionHandler_Method->createContext());
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_61_ExceptionHandler_Method->insert(tuple,READ_OP_CONTEXT(rel_61_ExceptionHandler_Method_op_ctxt));
}
PARALLEL_END;
}
if (!rel_55_ExceptionHandler_Begin->empty()&&!rel_56_ExceptionHandler_End->empty()&&!rel_61_ExceptionHandler_Method->empty()&&!rel_108_Instruction_Index->empty()&&!rel_109_Instruction_Method->empty()) {
auto part = rel_61_ExceptionHandler_Method->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_55_ExceptionHandler_Begin_op_ctxt,rel_55_ExceptionHandler_Begin->createContext());
CREATE_OP_CONTEXT(rel_56_ExceptionHandler_End_op_ctxt,rel_56_ExceptionHandler_End->createContext());
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_61_ExceptionHandler_Method_op_ctxt,rel_61_ExceptionHandler_Method->createContext());
CREATE_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt,rel_108_Instruction_Index->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_108_Instruction_Index->equalRange<0>(key,READ_OP_CONTEXT(rel_108_Instruction_Index_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_55_ExceptionHandler_Begin->equalRange<0>(key,READ_OP_CONTEXT(rel_55_ExceptionHandler_Begin_op_ctxt));
for(const auto& env3 : range) {
if( ((env3[1]) <= (env2[1]))) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_56_ExceptionHandler_End->equalRange<0>(key,READ_OP_CONTEXT(rel_56_ExceptionHandler_End_op_ctxt));
for(const auto& env4 : range) {
if( ((env4[1]) > (env2[1]))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_59_ExceptionHandler_InRange->insert(tuple,READ_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt,rel_66_ExceptionHandler_Type->createContext());
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3])});
rel_66_ExceptionHandler_Type->insert(tuple,READ_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt));
}
PARALLEL_END;
}
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_60_ExceptionHandler_Index_op_ctxt,rel_60_ExceptionHandler_Index->createContext());
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[2])});
rel_60_ExceptionHandler_Index->insert(tuple,READ_OP_CONTEXT(rel_60_ExceptionHandler_Index_op_ctxt));
}
PARALLEL_END;
}
if (!rel_417_ExceptionHandler_Previous->empty()) {
auto part = rel_417_ExceptionHandler_Previous->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt,rel_52_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_417_ExceptionHandler_Previous_op_ctxt,rel_417_ExceptionHandler_Previous->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_52_ExceptionHandler_Before->insert(tuple,READ_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt));
}
PARALLEL_END;
}
rel_53_delta_ExceptionHandler_Before->insertAll(*rel_52_ExceptionHandler_Before);
for(;;) {
if (!rel_53_delta_ExceptionHandler_Before->empty()&&!rel_417_ExceptionHandler_Previous->empty()) {
auto part = rel_53_delta_ExceptionHandler_Before->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_53_delta_ExceptionHandler_Before_op_ctxt,rel_53_delta_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_54_new_ExceptionHandler_Before_op_ctxt,rel_54_new_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt,rel_52_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_417_ExceptionHandler_Previous_op_ctxt,rel_417_ExceptionHandler_Previous->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_417_ExceptionHandler_Previous->equalRange<0>(key,READ_OP_CONTEXT(rel_417_ExceptionHandler_Previous_op_ctxt));
for(const auto& env1 : range) {
if( !rel_52_ExceptionHandler_Before->contains(Tuple<RamDomain,2>({env1[1],env0[1]}),READ_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[1]),(RamDomain)(env0[1])});
rel_54_new_ExceptionHandler_Before->insert(tuple,READ_OP_CONTEXT(rel_54_new_ExceptionHandler_Before_op_ctxt));
}
}
}
PARALLEL_END;
}
if(rel_54_new_ExceptionHandler_Before->empty()) break;
rel_52_ExceptionHandler_Before->insertAll(*rel_54_new_ExceptionHandler_Before);
{
auto rel_0 = rel_53_delta_ExceptionHandler_Before;
rel_53_delta_ExceptionHandler_Before = rel_54_new_ExceptionHandler_Before;
rel_54_new_ExceptionHandler_Before = rel_0;
}
rel_54_new_ExceptionHandler_Before->purge();
}
rel_53_delta_ExceptionHandler_Before->purge();
rel_54_new_ExceptionHandler_Before->purge();
if (!rel_47_ConcreteClass->empty()&&!rel_52_ExceptionHandler_Before->empty()&&!rel_59_ExceptionHandler_InRange->empty()&&!rel_66_ExceptionHandler_Type->empty()&&!rel_313_SubtypeOf->empty()) {
auto part = rel_59_ExceptionHandler_InRange->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt,rel_47_ConcreteClass->createContext());
CREATE_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt,rel_52_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_58_ExceptionHandler_Impossible_op_ctxt,rel_58_ExceptionHandler_Impossible->createContext());
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt,rel_66_ExceptionHandler_Type->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_59_ExceptionHandler_InRange->equalRange<1>(key,READ_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],env1[0]});
auto range = rel_52_ExceptionHandler_Before->equalRange<0,1>(key,READ_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_66_ExceptionHandler_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_66_ExceptionHandler_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env5[0],env4[1]});
auto range = rel_313_SubtypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env5[0]});
auto range = rel_47_ConcreteClass->equalRange<0>(key,READ_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env5[0]),(RamDomain)(env1[0]),(RamDomain)(env0[1])});
rel_58_ExceptionHandler_Impossible->insert(tuple,READ_OP_CONTEXT(rel_58_ExceptionHandler_Impossible_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_52_ExceptionHandler_Before->empty()&&!rel_60_ExceptionHandler_Index->empty()) {
auto part = rel_52_ExceptionHandler_Before->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt,rel_52_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_60_ExceptionHandler_Index_op_ctxt,rel_60_ExceptionHandler_Index->createContext());
CREATE_OP_CONTEXT(rel_62_ExceptionHandler_SameBlock_PartialOrder_op_ctxt,rel_62_ExceptionHandler_SameBlock_PartialOrder->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_60_ExceptionHandler_Index->equalRange<0>(key,READ_OP_CONTEXT(rel_60_ExceptionHandler_Index_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[1],env1[1]});
auto range = rel_60_ExceptionHandler_Index->equalRange<0,1>(key,READ_OP_CONTEXT(rel_60_ExceptionHandler_Index_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_62_ExceptionHandler_SameBlock_PartialOrder->insert(tuple,READ_OP_CONTEXT(rel_62_ExceptionHandler_SameBlock_PartialOrder_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_52_ExceptionHandler_Before->empty()&&!rel_59_ExceptionHandler_InRange->empty()) {
auto part = rel_59_ExceptionHandler_InRange->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt,rel_52_ExceptionHandler_Before->createContext());
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_64_ExceptionHandler_SameInsn_PartialOrder_op_ctxt,rel_64_ExceptionHandler_SameInsn_PartialOrder->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_59_ExceptionHandler_InRange->equalRange<1>(key,READ_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],env1[0]});
auto range = rel_52_ExceptionHandler_Before->equalRange<0,1>(key,READ_OP_CONTEXT(rel_52_ExceptionHandler_Before_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0]),(RamDomain)(env0[1])});
rel_64_ExceptionHandler_SameInsn_PartialOrder->insert(tuple,READ_OP_CONTEXT(rel_64_ExceptionHandler_SameInsn_PartialOrder_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_59_ExceptionHandler_InRange->empty()) {
auto part = rel_59_ExceptionHandler_InRange->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_64_ExceptionHandler_SameInsn_PartialOrder_op_ctxt,rel_64_ExceptionHandler_SameInsn_PartialOrder->createContext());
CREATE_OP_CONTEXT(rel_65_ExceptionHandler_SameInsn_Repr_op_ctxt,rel_65_ExceptionHandler_SameInsn_Repr->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_64_ExceptionHandler_SameInsn_PartialOrder->equalRange<1,2>(Tuple<RamDomain,3>({0,env0[0],env0[1]}),READ_OP_CONTEXT(rel_64_ExceptionHandler_SameInsn_PartialOrder_op_ctxt)).empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_65_ExceptionHandler_SameInsn_Repr->insert(tuple,READ_OP_CONTEXT(rel_65_ExceptionHandler_SameInsn_Repr_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_417_ExceptionHandler_Previous->empty()) {
auto part = rel_417_ExceptionHandler_Previous->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_417_ExceptionHandler_Previous_op_ctxt,rel_417_ExceptionHandler_Previous->createContext());
CREATE_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt,rel_469_isExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_469_isExceptionHandler->insert(tuple,READ_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt));
}
PARALLEL_END;
}
if (!rel_417_ExceptionHandler_Previous->empty()) {
auto part = rel_417_ExceptionHandler_Previous->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_417_ExceptionHandler_Previous_op_ctxt,rel_417_ExceptionHandler_Previous->createContext());
CREATE_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt,rel_469_isExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_469_isExceptionHandler->insert(tuple,READ_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt));
}
PARALLEL_END;
}
if (!rel_416_ExceptionHandler->empty()) {
auto part = rel_416_ExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_416_ExceptionHandler_op_ctxt,rel_416_ExceptionHandler->createContext());
CREATE_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt,rel_469_isExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_469_isExceptionHandler->insert(tuple,READ_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt));
}
PARALLEL_END;
}
if (!rel_469_isExceptionHandler->empty()) {
auto part = rel_469_isExceptionHandler->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_62_ExceptionHandler_SameBlock_PartialOrder_op_ctxt,rel_62_ExceptionHandler_SameBlock_PartialOrder->createContext());
CREATE_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt,rel_63_ExceptionHandler_SameBlock_Repr->createContext());
CREATE_OP_CONTEXT(rel_469_isExceptionHandler_op_ctxt,rel_469_isExceptionHandler->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_62_ExceptionHandler_SameBlock_PartialOrder->equalRange<1>(Tuple<RamDomain,2>({0,env0[0]}),READ_OP_CONTEXT(rel_62_ExceptionHandler_SameBlock_PartialOrder_op_ctxt)).empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[0])});
rel_63_ExceptionHandler_SameBlock_Repr->insert(tuple,READ_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_62_ExceptionHandler_SameBlock_PartialOrder->empty()) {
auto part = rel_62_ExceptionHandler_SameBlock_PartialOrder->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_62_ExceptionHandler_SameBlock_PartialOrder_op_ctxt,rel_62_ExceptionHandler_SameBlock_PartialOrder->createContext());
CREATE_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt,rel_63_ExceptionHandler_SameBlock_Repr->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_62_ExceptionHandler_SameBlock_PartialOrder->equalRange<1>(Tuple<RamDomain,2>({0,env0[0]}),READ_OP_CONTEXT(rel_62_ExceptionHandler_SameBlock_PartialOrder_op_ctxt)).empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[0])});
rel_63_ExceptionHandler_SameBlock_Repr->insert(tuple,READ_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_47_ConcreteClass->empty()&&!rel_59_ExceptionHandler_InRange->empty()&&!rel_63_ExceptionHandler_SameBlock_Repr->empty()&&!rel_65_ExceptionHandler_SameInsn_Repr->empty()&&!rel_66_ExceptionHandler_Type->empty()&&!rel_313_SubtypeOf->empty()) {
auto part = rel_59_ExceptionHandler_InRange->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt,rel_47_ConcreteClass->createContext());
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt,rel_63_ExceptionHandler_SameBlock_Repr->createContext());
CREATE_OP_CONTEXT(rel_65_ExceptionHandler_SameInsn_Repr_op_ctxt,rel_65_ExceptionHandler_SameInsn_Repr->createContext());
CREATE_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt,rel_66_ExceptionHandler_Type->createContext());
CREATE_OP_CONTEXT(rel_67_ExceptionHandler_TypeIsCaught_op_ctxt,rel_67_ExceptionHandler_TypeIsCaught->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_65_ExceptionHandler_SameInsn_Repr->equalRange<0>(key,READ_OP_CONTEXT(rel_65_ExceptionHandler_SameInsn_Repr_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_63_ExceptionHandler_SameBlock_Repr->equalRange<0>(key,READ_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_66_ExceptionHandler_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,1> key({env4[0]});
auto range = rel_47_ConcreteClass->equalRange<0>(key,READ_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env4[0]),(RamDomain)(env2[1])});
rel_67_ExceptionHandler_TypeIsCaught->insert(tuple,READ_OP_CONTEXT(rel_67_ExceptionHandler_TypeIsCaught_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_208_PublicMethodOfComponent->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_208_PublicMethodOfComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_208_PublicMethodOfComponent_op_ctxt,rel_208_PublicMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_74_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_195_OverridingProtectedMethodOfComponent->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_195_OverridingProtectedMethodOfComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_195_OverridingProtectedMethodOfComponent_op_ctxt,rel_195_OverridingProtectedMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_74_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_404_CallbackMethod->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_404_CallbackMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_404_CallbackMethod_op_ctxt,rel_404_CallbackMethod->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_74_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_209_PublicOnMethodOfLayoutControl->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_209_PublicOnMethodOfLayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_209_PublicOnMethodOfLayoutControl_op_ctxt,rel_209_PublicOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_74_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_196_OverridingProtectedOnMethodOfLayoutControl->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_196_OverridingProtectedOnMethodOfLayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_196_OverridingProtectedOnMethodOfLayoutControl_op_ctxt,rel_196_OverridingProtectedOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_74_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
}
}
PARALLEL_END;
}
rel_75_delta_ForcedReachableAndroidContext->insertAll(*rel_74_ForcedReachableAndroidContext);
rel_217_delta_ReachableApplicationObjectOfType->insertAll(*rel_216_ReachableApplicationObjectOfType);
rel_13_delta_ApplicationObjectFlowingToLibrary->insertAll(*rel_12_ApplicationObjectFlowingToLibrary);
rel_211_delta_PublicOnMethodOfReachableListener->insertAll(*rel_210_PublicOnMethodOfReachableListener);
rel_118_delta_LibraryReachableAppListenerType->insertAll(*rel_117_LibraryReachableAppListenerType);
rel_206_delta_ProtectedOnMethodOfReachableListener->insertAll(*rel_205_ProtectedOnMethodOfReachableListener);
rel_198_delta_OverridingProtectedOnMethodOfReachableListener->insertAll(*rel_197_OverridingProtectedOnMethodOfReachableListener);
rel_78_delta_FormalOfForcedReachableContext->insertAll(*rel_77_FormalOfForcedReachableContext);
rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->insertAll(*rel_15_ApplicationObjectFlowingToLibraryStaticType);
if (!rel_138_MainMethodDeclaration->empty()&&!rel_153_Method_DeclaringType->empty()) {
auto part = rel_138_MainMethodDeclaration->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_102_InitializedClass_op_ctxt,rel_102_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[1])});
rel_102_InitializedClass->insert(tuple,READ_OP_CONTEXT(rel_102_InitializedClass_op_ctxt));
}
}
PARALLEL_END;
}
rel_103_delta_InitializedClass->insertAll(*rel_102_InitializedClass);
rel_113_delta_Instruction_Throws->insertAll(*rel_112_Instruction_Throws);
rel_353_delta_ThrowPointsTo->insertAll(*rel_352_ThrowPointsTo);
if (!rel_139_MainThread->empty()) {
auto part = rel_139_MainThread->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_139_MainThread_op_ctxt,rel_139_MainThread->createContext());
CREATE_OP_CONTEXT(rel_245_RunningThread_op_ctxt,rel_245_RunningThread->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_245_RunningThread->insert(tuple,READ_OP_CONTEXT(rel_245_RunningThread_op_ctxt));
}
PARALLEL_END;
}
rel_246_delta_RunningThread->insertAll(*rel_245_RunningThread);
rel_223_delta_ReachableCurrentThreadInvocation->insertAll(*rel_222_ReachableCurrentThreadInvocation);
if (!rel_320_SystemThreadGroup->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
const Tuple<RamDomain,2> key({94,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_320_SystemThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})))});
rel_466_isContext->insert(tuple,READ_OP_CONTEXT(rel_466_isContext_op_ctxt));
}
}
}
}
if (!rel_140_MainThreadGroup->empty()&&!rel_320_SystemThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
const Tuple<RamDomain,2> key({147,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_140_MainThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,147,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_320_SystemThreadGroup) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})))});
rel_466_isContext->insert(tuple,READ_OP_CONTEXT(rel_466_isContext_op_ctxt));
}
}
}
}
}
}
if (!rel_139_MainThread->empty()&&!rel_140_MainThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_139_MainThread_op_ctxt,rel_139_MainThread->createContext());
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
const Tuple<RamDomain,2> key({93,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_139_MainThread) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,93,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_140_MainThreadGroup) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})))});
rel_466_isContext->insert(tuple,READ_OP_CONTEXT(rel_466_isContext_op_ctxt));
}
}
}
}
}
}
rel_466_isContext->insert(pack(ram::Tuple<RamDomain,2>({42,42})));
rel_466_isContext->insert(pack(ram::Tuple<RamDomain,2>({38,38})));
rel_466_isContext->insert(pack(ram::Tuple<RamDomain,2>({39,39})));
rel_466_isContext->insert(pack(ram::Tuple<RamDomain,2>({41,41})));
rel_467_delta_isContext->insertAll(*rel_466_isContext);
rel_471_isHContext->insert(pack(ram::Tuple<RamDomain,1>({43})));
rel_471_isHContext->insert(pack(ram::Tuple<RamDomain,1>({40})));
rel_472_delta_isHContext->insertAll(*rel_471_isHContext);
rel_95_delta_ImmutableContextFromHContext->insertAll(*rel_94_ImmutableContextFromHContext);
rel_98_delta_ImmutableHContextFromContext->insertAll(*rel_97_ImmutableHContextFromContext);
rel_92_delta_ImmutableContextFromContext->insertAll(*rel_91_ImmutableContextFromContext);
if (!rel_320_SystemThreadGroup->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({94,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_320_SystemThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env0[1])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
}
}
if (!rel_140_MainThreadGroup->empty()&&!rel_320_SystemThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({147,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_140_MainThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,147,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_320_SystemThreadGroup) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env0[1])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
}
}
}
}
if (!rel_140_MainThreadGroup->empty()&&!rel_320_SystemThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({147,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_140_MainThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,147,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_320_SystemThreadGroup) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[0]),(RamDomain)(env4[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env3[2])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
}
}
}
}
if (!rel_139_MainThread->empty()&&!rel_140_MainThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_139_MainThread_op_ctxt,rel_139_MainThread->createContext());
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({93,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_139_MainThread) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,93,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_140_MainThreadGroup) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env0[1])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
}
}
}
}
if (!rel_139_MainThread->empty()&&!rel_140_MainThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_139_MainThread_op_ctxt,rel_139_MainThread->createContext());
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({93,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_139_MainThread) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,93,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_140_MainThreadGroup) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[0]),(RamDomain)(env4[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env3[2])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
}
}
}
}
if (!rel_50_ContextForEntryPoint->empty()&&!rel_81_HContextForEntryPoint->empty()&&!rel_159_MockForFormal->empty()) {
auto part = rel_50_ContextForEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_50_ContextForEntryPoint_op_ctxt,rel_50_ContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_81_HContextForEntryPoint_op_ctxt,rel_81_HContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_159_MockForFormal_op_ctxt,rel_159_MockForFormal->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_81_HContextForEntryPoint->equalRange<1>(key,READ_OP_CONTEXT(rel_81_HContextForEntryPoint_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_159_MockForFormal->equalRange<3>(key,READ_OP_CONTEXT(rel_159_MockForFormal_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env2[1])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_234_ReceiverPointsTo->empty()) {
auto part = rel_234_ReceiverPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_234_ReceiverPointsTo_op_ctxt,rel_234_ReceiverPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
auto ref = env0[1];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env1 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env1[1]}))),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env1[0],env1[1]}))),(RamDomain)(env0[2])});
rel_372_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
}
}
PARALLEL_END;
}
rel_373_delta_VarPointsTo->insertAll(*rel_372_VarPointsTo);
rel_106_delta_InstanceFieldPointsTo->insertAll(*rel_105_InstanceFieldPointsTo);
if (!rel_367_Value_Num->empty()&&!rel_420_FieldInitialValue->empty()&&!rel_476_isImmutableHContext->empty()) {
auto part = rel_420_FieldInitialValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_420_FieldInitialValue_op_ctxt,rel_420_FieldInitialValue->createContext());
CREATE_OP_CONTEXT(rel_476_isImmutableHContext_op_ctxt,rel_476_isImmutableHContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_367_Value_Num->equalRange<1>(key,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_476_isImmutableHContext) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_253_StaticFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
rel_254_delta_StaticFieldPointsTo->insertAll(*rel_253_StaticFieldPointsTo);
if (!rel_161_MockObjectContext->empty()&&!rel_162_MockObjectForComponentType->empty()&&!rel_458_isArrayType->empty()) {
auto part = rel_161_MockObjectContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_161_MockObjectContext_op_ctxt,rel_161_MockObjectContext->createContext());
CREATE_OP_CONTEXT(rel_162_MockObjectForComponentType_op_ctxt,rel_162_MockObjectForComponentType->createContext());
CREATE_OP_CONTEXT(rel_458_isArrayType_op_ctxt,rel_458_isArrayType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[2]});
auto range = rel_458_isArrayType->equalRange<0>(key,READ_OP_CONTEXT(rel_458_isArrayType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_162_MockObjectForComponentType->equalRange<1>(key,READ_OP_CONTEXT(rel_162_MockObjectForComponentType_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_19_ArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
rel_20_delta_ArrayIndexPointsTo->insertAll(*rel_19_ArrayIndexPointsTo);
rel_37_delta_CallGraphEdge->insertAll(*rel_36_CallGraphEdge);
rel_214_delta_Reachable->insertAll(*rel_213_Reachable);
if (!rel_208_PublicMethodOfComponent->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_208_PublicMethodOfComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_208_PublicMethodOfComponent_op_ctxt,rel_208_PublicMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_195_OverridingProtectedMethodOfComponent->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_195_OverridingProtectedMethodOfComponent->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_195_OverridingProtectedMethodOfComponent_op_ctxt,rel_195_OverridingProtectedMethodOfComponent->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_404_CallbackMethod->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_404_CallbackMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_404_CallbackMethod_op_ctxt,rel_404_CallbackMethod->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_209_PublicOnMethodOfLayoutControl->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_209_PublicOnMethodOfLayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_209_PublicOnMethodOfLayoutControl_op_ctxt,rel_209_PublicOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_196_OverridingProtectedOnMethodOfLayoutControl->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_196_OverridingProtectedOnMethodOfLayoutControl->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_196_OverridingProtectedOnMethodOfLayoutControl_op_ctxt,rel_196_OverridingProtectedOnMethodOfLayoutControl->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_320_SystemThreadGroup->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({94,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_320_SystemThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(94)});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
}
}
if (!rel_140_MainThreadGroup->empty()&&!rel_320_SystemThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_320_SystemThreadGroup_op_ctxt,rel_320_SystemThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({147,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_140_MainThreadGroup) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,147,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_320_SystemThreadGroup) {
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(147)});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
}
}
}
}
if (!rel_139_MainThread->empty()&&!rel_140_MainThreadGroup->empty()&&!rel_422_FormalParam->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_139_MainThread_op_ctxt,rel_139_MainThread->createContext());
CREATE_OP_CONTEXT(rel_140_MainThreadGroup_op_ctxt,rel_140_MainThreadGroup->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({93,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
for(const auto& env1 : *rel_139_MainThread) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,3> key({0,93,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_140_MainThreadGroup) {
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(93)});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
}
}
}
}
if (!rel_138_MainMethodDeclaration->empty()&&!rel_477_isInitialContext->empty()) {
auto part = rel_477_isInitialContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_477_isInitialContext_op_ctxt,rel_477_isInitialContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_138_MainMethodDeclaration) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_100_ImplicitReachable->empty()&&!rel_480_isJVMStartupContext->empty()) {
auto part = rel_480_isJVMStartupContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_100_ImplicitReachable_op_ctxt,rel_100_ImplicitReachable->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_480_isJVMStartupContext_op_ctxt,rel_480_isJVMStartupContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_100_ImplicitReachable) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_50_ContextForEntryPoint->empty()) {
auto part = rel_50_ContextForEntryPoint->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_50_ContextForEntryPoint_op_ctxt,rel_50_ContextForEntryPoint->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_219_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
}
PARALLEL_END;
}
rel_220_delta_ReachableContext->insertAll(*rel_219_ReachableContext);
rel_178_delta_OptInterproceduralAssign->insertAll(*rel_177_OptInterproceduralAssign);
rel_189_delta_OptStoreIntoArray->insertAll(*rel_188_OptStoreIntoArray);
rel_128_delta_LoadHeapInstanceField->insertAll(*rel_127_LoadHeapInstanceField);
rel_301_delta_StoreHeapInstanceField->insertAll(*rel_300_StoreHeapInstanceField);
rel_125_delta_LoadHeapArrayIndex->insertAll(*rel_124_LoadHeapArrayIndex);
rel_298_delta_StoreHeapArrayIndex->insertAll(*rel_297_StoreHeapArrayIndex);
rel_173_delta_OptAssignCast->insertAll(*rel_172_OptAssignCast);
rel_232_delta_ReachableStoreStaticFieldFrom->insertAll(*rel_231_ReachableStoreStaticFieldFrom);
rel_182_delta_OptLoadHeapArrayIndex->insertAll(*rel_181_OptLoadHeapArrayIndex);
rel_346_delta_Temp1->insertAll(*rel_345_Temp1);
rel_349_delta_Temp2->insertAll(*rel_348_Temp2);
rel_226_delta_ReachableLoadArrayIndexBase->insertAll(*rel_225_ReachableLoadArrayIndexBase);
rel_229_delta_ReachableStoreArrayIndexBase->insertAll(*rel_228_ReachableStoreArrayIndexBase);
rel_192_delta_OptVirtualMethodInvocationBase->insertAll(*rel_191_OptVirtualMethodInvocationBase);
rel_185_delta_OptSpecialMethodInvocationBase->insertAll(*rel_184_OptSpecialMethodInvocationBase);
rel_337_delta_Tamiflex_Invoke->insertAll(*rel_336_Tamiflex_Invoke);
rel_322_delta_TamiflexCallGraphEdge->insertAll(*rel_321_TamiflexCallGraphEdge);
rel_325_delta_TamiflexConstructorCallGraphEdge->insertAll(*rel_324_TamiflexConstructorCallGraphEdge);
rel_331_delta_TamiflexInvocationFirstParam->insertAll(*rel_330_TamiflexInvocationFirstParam);
rel_328_delta_TamiflexInvocationArgumentArrayValue->insertAll(*rel_327_TamiflexInvocationArgumentArrayValue);
for(;;) {
SECTIONS_START;
SECTION_START;
if (!rel_211_delta_PublicOnMethodOfReachableListener->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_211_delta_PublicOnMethodOfReachableListener->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_211_delta_PublicOnMethodOfReachableListener_op_ctxt,rel_211_delta_PublicOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_76_new_ForcedReachableAndroidContext_op_ctxt,rel_76_new_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
if( !rel_74_ForcedReachableAndroidContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_76_new_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_76_new_ForcedReachableAndroidContext_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_198_delta_OverridingProtectedOnMethodOfReachableListener->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_198_delta_OverridingProtectedOnMethodOfReachableListener->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_198_delta_OverridingProtectedOnMethodOfReachableListener_op_ctxt,rel_198_delta_OverridingProtectedOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_76_new_ForcedReachableAndroidContext_op_ctxt,rel_76_new_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
if( !rel_74_ForcedReachableAndroidContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_76_new_ForcedReachableAndroidContext->insert(tuple,READ_OP_CONTEXT(rel_76_new_ForcedReachableAndroidContext_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_373_delta_VarPointsTo->empty()&&!rel_368_Value_Type->empty()&&!rel_387_ApplicationClass->empty()) {
auto part = rel_387_ApplicationClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_218_new_ReachableApplicationObjectOfType_op_ctxt,rel_218_new_ReachableApplicationObjectOfType->createContext());
CREATE_OP_CONTEXT(rel_216_ReachableApplicationObjectOfType_op_ctxt,rel_216_ReachableApplicationObjectOfType->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_387_ApplicationClass_op_ctxt,rel_387_ApplicationClass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_368_Value_Type->equalRange<1>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,env1[0],0,0});
auto range = rel_373_delta_VarPointsTo->equalRange<1>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_216_ReachableApplicationObjectOfType->contains(Tuple<RamDomain,3>({env2[0],env1[0],env0[0]}),READ_OP_CONTEXT(rel_216_ReachableApplicationObjectOfType_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_218_new_ReachableApplicationObjectOfType->insert(tuple,READ_OP_CONTEXT(rel_218_new_ReachableApplicationObjectOfType_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_217_delta_ReachableApplicationObjectOfType->empty()&&!rel_7_AndroidApplicationListenerClass->empty()) {
auto part = rel_217_delta_ReachableApplicationObjectOfType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_217_delta_ReachableApplicationObjectOfType_op_ctxt,rel_217_delta_ReachableApplicationObjectOfType->createContext());
CREATE_OP_CONTEXT(rel_14_new_ApplicationObjectFlowingToLibrary_op_ctxt,rel_14_new_ApplicationObjectFlowingToLibrary->createContext());
CREATE_OP_CONTEXT(rel_7_AndroidApplicationListenerClass_op_ctxt,rel_7_AndroidApplicationListenerClass->createContext());
CREATE_OP_CONTEXT(rel_12_ApplicationObjectFlowingToLibrary_op_ctxt,rel_12_ApplicationObjectFlowingToLibrary->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_12_ApplicationObjectFlowingToLibrary->contains(Tuple<RamDomain,3>({env0[0],env0[1],env0[2]}),READ_OP_CONTEXT(rel_12_ApplicationObjectFlowingToLibrary_op_ctxt))) {
for(const auto& env1 : *rel_7_AndroidApplicationListenerClass) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_14_new_ApplicationObjectFlowingToLibrary->insert(tuple,READ_OP_CONTEXT(rel_14_new_ApplicationObjectFlowingToLibrary_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_118_delta_LibraryReachableAppListenerType->empty()&&!rel_145_MethodDeclaredOrInherited->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_145_MethodDeclaredOrInherited->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_118_delta_LibraryReachableAppListenerType_op_ctxt,rel_118_delta_LibraryReachableAppListenerType->createContext());
CREATE_OP_CONTEXT(rel_212_new_PublicOnMethodOfReachableListener_op_ctxt,rel_212_new_PublicOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_210_PublicOnMethodOfReachableListener_op_ctxt,rel_210_PublicOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_210_PublicOnMethodOfReachableListener->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_210_PublicOnMethodOfReachableListener_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_118_delta_LibraryReachableAppListenerType->equalRange<0>(key,READ_OP_CONTEXT(rel_118_delta_LibraryReachableAppListenerType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
if( regex_wrapper(symTable.resolve((size_t)85),symTable.resolve((size_t)env2[1]))) {
const Tuple<RamDomain,2> key({4,env0[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_212_new_PublicOnMethodOfReachableListener->insert(tuple,READ_OP_CONTEXT(rel_212_new_PublicOnMethodOfReachableListener_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_217_delta_ReachableApplicationObjectOfType->empty()&&!rel_7_AndroidApplicationListenerClass->empty()) {
auto part = rel_217_delta_ReachableApplicationObjectOfType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_217_delta_ReachableApplicationObjectOfType_op_ctxt,rel_217_delta_ReachableApplicationObjectOfType->createContext());
CREATE_OP_CONTEXT(rel_119_new_LibraryReachableAppListenerType_op_ctxt,rel_119_new_LibraryReachableAppListenerType->createContext());
CREATE_OP_CONTEXT(rel_7_AndroidApplicationListenerClass_op_ctxt,rel_7_AndroidApplicationListenerClass->createContext());
CREATE_OP_CONTEXT(rel_117_LibraryReachableAppListenerType_op_ctxt,rel_117_LibraryReachableAppListenerType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_7_AndroidApplicationListenerClass) {
if( !rel_117_LibraryReachableAppListenerType->contains(Tuple<RamDomain,1>({env1[0]}),READ_OP_CONTEXT(rel_117_LibraryReachableAppListenerType_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_119_new_LibraryReachableAppListenerType->insert(tuple,READ_OP_CONTEXT(rel_119_new_LibraryReachableAppListenerType_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_118_delta_LibraryReachableAppListenerType->empty()&&!rel_145_MethodDeclaredOrInherited->empty()&&!rel_156_Method_SimpleName->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_145_MethodDeclaredOrInherited->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_118_delta_LibraryReachableAppListenerType_op_ctxt,rel_118_delta_LibraryReachableAppListenerType->createContext());
CREATE_OP_CONTEXT(rel_207_new_ProtectedOnMethodOfReachableListener_op_ctxt,rel_207_new_ProtectedOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_145_MethodDeclaredOrInherited_op_ctxt,rel_145_MethodDeclaredOrInherited->createContext());
CREATE_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt,rel_156_Method_SimpleName->createContext());
CREATE_OP_CONTEXT(rel_205_ProtectedOnMethodOfReachableListener_op_ctxt,rel_205_ProtectedOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_205_ProtectedOnMethodOfReachableListener->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_205_ProtectedOnMethodOfReachableListener_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_118_delta_LibraryReachableAppListenerType->equalRange<0>(key,READ_OP_CONTEXT(rel_118_delta_LibraryReachableAppListenerType_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_156_Method_SimpleName->equalRange<0>(key,READ_OP_CONTEXT(rel_156_Method_SimpleName_op_ctxt));
for(const auto& env2 : range) {
if( regex_wrapper(symTable.resolve((size_t)85),symTable.resolve((size_t)env2[1]))) {
const Tuple<RamDomain,2> key({61,env0[0]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_207_new_ProtectedOnMethodOfReachableListener->insert(tuple,READ_OP_CONTEXT(rel_207_new_ProtectedOnMethodOfReachableListener_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_206_delta_ProtectedOnMethodOfReachableListener->empty()&&!rel_10_AppMethodOverridesAndroidLibraryMethod->empty()) {
auto part = rel_206_delta_ProtectedOnMethodOfReachableListener->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_206_delta_ProtectedOnMethodOfReachableListener_op_ctxt,rel_206_delta_ProtectedOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_199_new_OverridingProtectedOnMethodOfReachableListener_op_ctxt,rel_199_new_OverridingProtectedOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt,rel_10_AppMethodOverridesAndroidLibraryMethod->createContext());
CREATE_OP_CONTEXT(rel_197_OverridingProtectedOnMethodOfReachableListener_op_ctxt,rel_197_OverridingProtectedOnMethodOfReachableListener->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_197_OverridingProtectedOnMethodOfReachableListener->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_197_OverridingProtectedOnMethodOfReachableListener_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_10_AppMethodOverridesAndroidLibraryMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_10_AppMethodOverridesAndroidLibraryMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_199_new_OverridingProtectedOnMethodOfReachableListener->insert(tuple,READ_OP_CONTEXT(rel_199_new_OverridingProtectedOnMethodOfReachableListener_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_75_delta_ForcedReachableAndroidContext->empty()&&!rel_376_Var_Type->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_75_delta_ForcedReachableAndroidContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_75_delta_ForcedReachableAndroidContext_op_ctxt,rel_75_delta_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_79_new_FormalOfForcedReachableContext_op_ctxt,rel_79_new_FormalOfForcedReachableContext->createContext());
CREATE_OP_CONTEXT(rel_77_FormalOfForcedReachableContext_op_ctxt,rel_77_FormalOfForcedReachableContext->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_422_FormalParam->equalRange<1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[2],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env2 : range) {
if( !rel_77_FormalOfForcedReachableContext->contains(Tuple<RamDomain,3>({env0[0],env1[2],env2[1]}),READ_OP_CONTEXT(rel_77_FormalOfForcedReachableContext_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[2]),(RamDomain)(env2[1])});
rel_79_new_FormalOfForcedReachableContext->insert(tuple,READ_OP_CONTEXT(rel_79_new_FormalOfForcedReachableContext_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_13_delta_ApplicationObjectFlowingToLibrary->empty()&&!rel_319_SupertypeOf->empty()) {
auto part = rel_13_delta_ApplicationObjectFlowingToLibrary->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_13_delta_ApplicationObjectFlowingToLibrary_op_ctxt,rel_13_delta_ApplicationObjectFlowingToLibrary->createContext());
CREATE_OP_CONTEXT(rel_17_new_ApplicationObjectFlowingToLibraryStaticType_op_ctxt,rel_17_new_ApplicationObjectFlowingToLibraryStaticType->createContext());
CREATE_OP_CONTEXT(rel_15_ApplicationObjectFlowingToLibraryStaticType_op_ctxt,rel_15_ApplicationObjectFlowingToLibraryStaticType->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_319_SupertypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
for(const auto& env1 : range) {
if( !rel_15_ApplicationObjectFlowingToLibraryStaticType->contains(Tuple<RamDomain,3>({env0[0],env0[1],env1[0]}),READ_OP_CONTEXT(rel_15_ApplicationObjectFlowingToLibraryStaticType_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0])});
rel_17_new_ApplicationObjectFlowingToLibraryStaticType->insert(tuple,READ_OP_CONTEXT(rel_17_new_ApplicationObjectFlowingToLibraryStaticType_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_103_delta_InitializedClass->empty()&&!rel_411_DirectSuperclass->empty()) {
auto part = rel_103_delta_InitializedClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_103_delta_InitializedClass_op_ctxt,rel_103_delta_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt,rel_104_new_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_102_InitializedClass_op_ctxt,rel_102_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt,rel_411_DirectSuperclass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_411_DirectSuperclass->equalRange<0>(key,READ_OP_CONTEXT(rel_411_DirectSuperclass_op_ctxt));
for(const auto& env1 : range) {
if( !rel_102_InitializedClass->contains(Tuple<RamDomain,1>({env1[1]}),READ_OP_CONTEXT(rel_102_InitializedClass_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[1])});
rel_104_new_InitializedClass->insert(tuple,READ_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_214_delta_Reachable->empty()&&!rel_27_AssignHeapAllocation->empty()&&!rel_87_HeapAllocation_Type->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt,rel_104_new_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt,rel_27_AssignHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_102_InitializedClass_op_ctxt,rel_102_InitializedClass->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_27_AssignHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_27_AssignHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_87_HeapAllocation_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
for(const auto& env2 : range) {
if( !rel_102_InitializedClass->contains(Tuple<RamDomain,1>({env2[1]}),READ_OP_CONTEXT(rel_102_InitializedClass_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env2[1])});
rel_104_new_InitializedClass->insert(tuple,READ_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_214_delta_Reachable->empty()&&!rel_109_Instruction_Method->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_491_isStaticMethodInvocation_Insn->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt,rel_104_new_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_102_InitializedClass_op_ctxt,rel_102_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_491_isStaticMethodInvocation_Insn_op_ctxt,rel_491_isStaticMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_491_isStaticMethodInvocation_Insn->equalRange<0>(key,READ_OP_CONTEXT(rel_491_isStaticMethodInvocation_Insn_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env4 : range) {
if( !rel_102_InitializedClass->contains(Tuple<RamDomain,1>({env4[1]}),READ_OP_CONTEXT(rel_102_InitializedClass_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env4[1])});
rel_104_new_InitializedClass->insert(tuple,READ_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_214_delta_Reachable->empty()&&!rel_73_Field_DeclaringType->empty()&&!rel_306_StoreStaticField->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt,rel_104_new_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt,rel_73_Field_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_102_InitializedClass_op_ctxt,rel_102_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_306_StoreStaticField->equalRange<2>(key,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_73_Field_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
if( !rel_102_InitializedClass->contains(Tuple<RamDomain,1>({env2[1]}),READ_OP_CONTEXT(rel_102_InitializedClass_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env2[1])});
rel_104_new_InitializedClass->insert(tuple,READ_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_214_delta_Reachable->empty()&&!rel_73_Field_DeclaringType->empty()&&!rel_133_LoadStaticField->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt,rel_104_new_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt,rel_73_Field_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_102_InitializedClass_op_ctxt,rel_102_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt,rel_133_LoadStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_133_LoadStaticField->equalRange<2>(key,READ_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_73_Field_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_73_Field_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
if( !rel_102_InitializedClass->contains(Tuple<RamDomain,1>({env2[1]}),READ_OP_CONTEXT(rel_102_InitializedClass_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env2[1])});
rel_104_new_InitializedClass->insert(tuple,READ_OP_CONTEXT(rel_104_new_InitializedClass_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_373_delta_VarPointsTo->empty()&&!rel_351_Throw->empty()) {
auto part = rel_351_Throw->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_114_new_Instruction_Throws_op_ctxt,rel_114_new_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_112_Instruction_Throws_op_ctxt,rel_112_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_351_Throw_op_ctxt,rel_351_Throw->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_112_Instruction_Throws->contains(Tuple<RamDomain,4>({env1[0],env1[1],env1[2],env0[0]}),READ_OP_CONTEXT(rel_112_Instruction_Throws_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_114_new_Instruction_Throws->insert(tuple,READ_OP_CONTEXT(rel_114_new_Instruction_Throws_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_37_delta_CallGraphEdge->empty()&&!rel_352_ThrowPointsTo->empty()) {
auto part = rel_37_delta_CallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_37_delta_CallGraphEdge_op_ctxt,rel_37_delta_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_353_delta_ThrowPointsTo_op_ctxt,rel_353_delta_ThrowPointsTo->createContext());
CREATE_OP_CONTEXT(rel_114_new_Instruction_Throws_op_ctxt,rel_114_new_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_112_Instruction_Throws_op_ctxt,rel_112_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_352_ThrowPointsTo_op_ctxt,rel_352_ThrowPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_352_ThrowPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_352_ThrowPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_112_Instruction_Throws->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_112_Instruction_Throws_op_ctxt))) && (!rel_353_delta_ThrowPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[2],env0[3]}),READ_OP_CONTEXT(rel_353_delta_ThrowPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_114_new_Instruction_Throws->insert(tuple,READ_OP_CONTEXT(rel_114_new_Instruction_Throws_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_353_delta_ThrowPointsTo->empty()&&!rel_36_CallGraphEdge->empty()) {
auto part = rel_353_delta_ThrowPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_353_delta_ThrowPointsTo_op_ctxt,rel_353_delta_ThrowPointsTo->createContext());
CREATE_OP_CONTEXT(rel_114_new_Instruction_Throws_op_ctxt,rel_114_new_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_112_Instruction_Throws_op_ctxt,rel_112_Instruction_Throws->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_36_CallGraphEdge->equalRange<2,3>(key,READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt));
for(const auto& env1 : range) {
if( !rel_112_Instruction_Throws->contains(Tuple<RamDomain,4>({env0[0],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_112_Instruction_Throws_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_114_new_Instruction_Throws->insert(tuple,READ_OP_CONTEXT(rel_114_new_Instruction_Throws_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_113_delta_Instruction_Throws->empty()&&!rel_109_Instruction_Method->empty()) {
auto part = rel_113_delta_Instruction_Throws->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_113_delta_Instruction_Throws_op_ctxt,rel_113_delta_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_354_new_ThrowPointsTo_op_ctxt,rel_354_new_ThrowPointsTo->createContext());
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_352_ThrowPointsTo_op_ctxt,rel_352_ThrowPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_59_ExceptionHandler_InRange->equalRange<1>(Tuple<RamDomain,2>({0,env0[3]}),READ_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt)).empty()) {
const Tuple<RamDomain,2> key({env0[3],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
if( !rel_352_ThrowPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env0[2],env1[1]}),READ_OP_CONTEXT(rel_352_ThrowPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env1[1])});
rel_354_new_ThrowPointsTo->insert(tuple,READ_OP_CONTEXT(rel_354_new_ThrowPointsTo_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_113_delta_Instruction_Throws->empty()&&!rel_63_ExceptionHandler_SameBlock_Repr->empty()&&!rel_65_ExceptionHandler_SameInsn_Repr->empty()&&!rel_109_Instruction_Method->empty()&&!rel_368_Value_Type->empty()) {
auto part = rel_113_delta_Instruction_Throws->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_113_delta_Instruction_Throws_op_ctxt,rel_113_delta_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_354_new_ThrowPointsTo_op_ctxt,rel_354_new_ThrowPointsTo->createContext());
CREATE_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt,rel_63_ExceptionHandler_SameBlock_Repr->createContext());
CREATE_OP_CONTEXT(rel_65_ExceptionHandler_SameInsn_Repr_op_ctxt,rel_65_ExceptionHandler_SameInsn_Repr->createContext());
CREATE_OP_CONTEXT(rel_67_ExceptionHandler_TypeIsCaught_op_ctxt,rel_67_ExceptionHandler_TypeIsCaught->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_352_ThrowPointsTo_op_ctxt,rel_352_ThrowPointsTo->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[3],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
if( !rel_352_ThrowPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env0[2],env2[1]}),READ_OP_CONTEXT(rel_352_ThrowPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[3],0});
auto range = rel_65_ExceptionHandler_SameInsn_Repr->equalRange<0>(key,READ_OP_CONTEXT(rel_65_ExceptionHandler_SameInsn_Repr_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[1],0});
auto range = rel_63_ExceptionHandler_SameBlock_Repr->equalRange<0>(key,READ_OP_CONTEXT(rel_63_ExceptionHandler_SameBlock_Repr_op_ctxt));
for(const auto& env4 : range) {
if( !rel_67_ExceptionHandler_TypeIsCaught->contains(Tuple<RamDomain,2>({env1[1],env4[1]}),READ_OP_CONTEXT(rel_67_ExceptionHandler_TypeIsCaught_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env2[1])});
rel_354_new_ThrowPointsTo->insert(tuple,READ_OP_CONTEXT(rel_354_new_ThrowPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_373_delta_VarPointsTo->empty()&&!rel_150_MethodLookup->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_247_new_RunningThread_op_ctxt,rel_247_new_RunningThread->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_245_RunningThread_op_ctxt,rel_245_RunningThread->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({144,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_245_RunningThread->contains(Tuple<RamDomain,2>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1]}),READ_OP_CONTEXT(rel_245_RunningThread_op_ctxt))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,4> key({145,59,env3[1],0});
auto range = rel_150_MethodLookup->equalRange<0,1,2>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[3],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1])});
rel_247_new_RunningThread->insert(tuple,READ_OP_CONTEXT(rel_247_new_RunningThread_op_ctxt));
}
}
}
}
}
}
}
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_256_StaticMethodInvocation->empty()) {
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_224_new_ReachableCurrentThreadInvocation_op_ctxt,rel_224_new_ReachableCurrentThreadInvocation->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_222_ReachableCurrentThreadInvocation_op_ctxt,rel_222_ReachableCurrentThreadInvocation->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
const Tuple<RamDomain,3> key({0,146,0});
auto range = rel_256_StaticMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env2 : range) {
if( !rel_222_ReachableCurrentThreadInvocation->contains(Tuple<RamDomain,2>({env1[0],env2[1]}),READ_OP_CONTEXT(rel_222_ReachableCurrentThreadInvocation_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env2[1])});
rel_224_new_ReachableCurrentThreadInvocation->insert(tuple,READ_OP_CONTEXT(rel_224_new_ReachableCurrentThreadInvocation_op_ctxt));
}
}
}
}
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_84_HeapAllocation_Merge->equalRange<0>(Tuple<RamDomain,2>({env0[0],0}),READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt)).empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
auto ref = env2[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env3 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env3[1],env0[0]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) {
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env3[1],env0[0]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_84_HeapAllocation_Merge->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],env0[0]});
auto range = rel_84_HeapAllocation_Merge->equalRange<0,1>(key,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env4 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env4[1],env0[0]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) {
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env6 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[1],env0[0]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_150_MethodLookup->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
const Tuple<RamDomain,2> key({144,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,4> key({145,59,env3[1],0});
auto range = rel_150_MethodLookup->equalRange<0,1,2>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[3],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_192_delta_OptVirtualMethodInvocationBase->empty()&&!rel_240_ResolveInvocation->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_368_Value_Type->empty()&&!rel_372_VarPointsTo->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_192_delta_OptVirtualMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_192_delta_OptVirtualMethodInvocationBase_op_ctxt,rel_192_delta_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( ((!rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1],env1[2],env0[1]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,3> key({env3[1],env0[0],0});
auto range = rel_240_ResolveInvocation->equalRange<0,1>(key,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_191_OptVirtualMethodInvocationBase->empty()&&!rel_240_ResolveInvocation->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_191_OptVirtualMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_191_OptVirtualMethodInvocationBase_op_ctxt,rel_191_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,3> key({env3[1],env0[0],0});
auto range = rel_240_ResolveInvocation->equalRange<0,1>(key,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_256_StaticMethodInvocation->empty()) {
auto part = rel_220_delta_ReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_466_isContext->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) {
const Tuple<RamDomain,3> key({0,0,env0[1]});
auto range = rel_256_StaticMethodInvocation->equalRange<2>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_185_delta_OptSpecialMethodInvocationBase->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_372_VarPointsTo->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_185_delta_OptSpecialMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_185_delta_OptSpecialMethodInvocationBase_op_ctxt,rel_185_delta_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( ((!rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env4[0]})),env3[1],env3[2],env0[1]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_184_OptSpecialMethodInvocationBase->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_184_OptSpecialMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_468_new_isContext_op_ctxt,rel_468_new_isContext->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_184_OptSpecialMethodInvocationBase_op_ctxt,rel_184_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
CREATE_OP_CONTEXT(rel_466_isContext_op_ctxt,rel_466_isContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_466_isContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]}))}),READ_OP_CONTEXT(rel_466_isContext_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]})))});
rel_468_new_isContext->insert(tuple,READ_OP_CONTEXT(rel_468_new_isContext_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_473_new_isHContext_op_ctxt,rel_473_new_isHContext->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_471_isHContext_op_ctxt,rel_471_isHContext->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_84_HeapAllocation_Merge->equalRange<0>(Tuple<RamDomain,2>({env0[0],0}),READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt)).empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
auto ref = env2[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env3 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_471_isHContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,1>({env3[1]}))}),READ_OP_CONTEXT(rel_471_isHContext_op_ctxt))) {
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env3[1]})))});
rel_473_new_isHContext->insert(tuple,READ_OP_CONTEXT(rel_473_new_isHContext_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_84_HeapAllocation_Merge->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_473_new_isHContext_op_ctxt,rel_473_new_isHContext->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_471_isHContext_op_ctxt,rel_471_isHContext->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],env0[0]});
auto range = rel_84_HeapAllocation_Merge->equalRange<0,1>(key,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env4 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_471_isHContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,1>({env4[1]}))}),READ_OP_CONTEXT(rel_471_isHContext_op_ctxt))) {
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env6 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env4[1]})))});
rel_473_new_isHContext->insert(tuple,READ_OP_CONTEXT(rel_473_new_isHContext_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_32_AssignNormalHeapAllocation->empty()&&!rel_171_ObjectShouldNotBeRefined->empty()) {
auto part = rel_32_AssignNormalHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_473_new_isHContext_op_ctxt,rel_473_new_isHContext->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_171_ObjectShouldNotBeRefined_op_ctxt,rel_171_ObjectShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_471_isHContext_op_ctxt,rel_471_isHContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env2 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_471_isHContext->contains(Tuple<RamDomain,1>({pack(ram::Tuple<RamDomain,1>({env2[1]}))}),READ_OP_CONTEXT(rel_471_isHContext_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_171_ObjectShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_171_ObjectShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[1]})))});
rel_473_new_isHContext->insert(tuple,READ_OP_CONTEXT(rel_473_new_isHContext_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_472_delta_isHContext->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_475_isImmutableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_472_delta_isHContext_op_ctxt,rel_472_delta_isHContext->createContext());
CREATE_OP_CONTEXT(rel_96_new_ImmutableContextFromHContext_op_ctxt,rel_96_new_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt,rel_94_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_472_delta_isHContext) {
if( !rel_94_ImmutableContextFromHContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_96_new_ImmutableContextFromHContext->insert(tuple,READ_OP_CONTEXT(rel_96_new_ImmutableContextFromHContext_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_467_delta_isContext->empty()&&!rel_476_isImmutableHContext->empty()) {
auto part = rel_476_isImmutableHContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_467_delta_isContext_op_ctxt,rel_467_delta_isContext->createContext());
CREATE_OP_CONTEXT(rel_99_new_ImmutableHContextFromContext_op_ctxt,rel_99_new_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_476_isImmutableHContext_op_ctxt,rel_476_isImmutableHContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_467_delta_isContext) {
if( !rel_97_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_99_new_ImmutableHContextFromContext->insert(tuple,READ_OP_CONTEXT(rel_99_new_ImmutableHContextFromContext_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_467_delta_isContext->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_475_isImmutableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_467_delta_isContext_op_ctxt,rel_467_delta_isContext->createContext());
CREATE_OP_CONTEXT(rel_93_new_ImmutableContextFromContext_op_ctxt,rel_93_new_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_467_delta_isContext) {
if( !rel_91_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_93_new_ImmutableContextFromContext->insert(tuple,READ_OP_CONTEXT(rel_93_new_ImmutableContextFromContext_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_75_delta_ForcedReachableAndroidContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_235_ReifiedAndroidObjectValue->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_75_delta_ForcedReachableAndroidContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_75_delta_ForcedReachableAndroidContext_op_ctxt,rel_75_delta_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env1 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env1[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env2[1]});
auto range = rel_235_ReifiedAndroidObjectValue->equalRange<1>(key,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[1],env3[0],env0[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[1]),(RamDomain)(env3[0]),(RamDomain)(env0[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_74_ForcedReachableAndroidContext->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_235_ReifiedAndroidObjectValue->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_74_ForcedReachableAndroidContext->equalRange<0>(key,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env2[1]});
auto range = rel_235_ReifiedAndroidObjectValue->equalRange<1>(key,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env3[0],env0[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env0[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_75_delta_ForcedReachableAndroidContext->empty()&&!rel_12_ApplicationObjectFlowingToLibrary->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_75_delta_ForcedReachableAndroidContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_13_delta_ApplicationObjectFlowingToLibrary_op_ctxt,rel_13_delta_ApplicationObjectFlowingToLibrary->createContext());
CREATE_OP_CONTEXT(rel_75_delta_ForcedReachableAndroidContext_op_ctxt,rel_75_delta_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_12_ApplicationObjectFlowingToLibrary_op_ctxt,rel_12_ApplicationObjectFlowingToLibrary->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_153_Method_DeclaringType->equalRange<0>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,0,env1[1]});
auto range = rel_12_ApplicationObjectFlowingToLibrary->equalRange<2>(key,READ_OP_CONTEXT(rel_12_ApplicationObjectFlowingToLibrary_op_ctxt));
for(const auto& env2 : range) {
if( !rel_13_delta_ApplicationObjectFlowingToLibrary->contains(Tuple<RamDomain,3>({env2[0],env2[1],env1[1]}),READ_OP_CONTEXT(rel_13_delta_ApplicationObjectFlowingToLibrary_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env0[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env0[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_13_delta_ApplicationObjectFlowingToLibrary->empty()&&!rel_74_ForcedReachableAndroidContext->empty()&&!rel_153_Method_DeclaringType->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_13_delta_ApplicationObjectFlowingToLibrary->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_13_delta_ApplicationObjectFlowingToLibrary_op_ctxt,rel_13_delta_ApplicationObjectFlowingToLibrary->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt,rel_74_ForcedReachableAndroidContext->createContext());
CREATE_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt,rel_153_Method_DeclaringType->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_153_Method_DeclaringType->equalRange<1>(key,READ_OP_CONTEXT(rel_153_Method_DeclaringType_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_74_ForcedReachableAndroidContext->equalRange<1>(key,READ_OP_CONTEXT(rel_74_ForcedReachableAndroidContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env2[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_78_delta_FormalOfForcedReachableContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_235_ReifiedAndroidObjectValue->empty()&&!rel_313_SubtypeOf->empty()) {
auto part = rel_78_delta_FormalOfForcedReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_78_delta_FormalOfForcedReachableContext_op_ctxt,rel_78_delta_FormalOfForcedReachableContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env1 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env1[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env2[0]});
auto range = rel_235_ReifiedAndroidObjectValue->equalRange<1>(key,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
for(const auto& env3 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[1],env3[0],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[1]),(RamDomain)(env3[0]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_77_FormalOfForcedReachableContext->empty()&&!rel_235_ReifiedAndroidObjectValue->empty()&&!rel_313_SubtypeOf->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_77_FormalOfForcedReachableContext_op_ctxt,rel_77_FormalOfForcedReachableContext->createContext());
CREATE_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt,rel_235_ReifiedAndroidObjectValue->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[0],0,0});
auto range = rel_77_FormalOfForcedReachableContext->equalRange<0>(key,READ_OP_CONTEXT(rel_77_FormalOfForcedReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[2]});
auto range = rel_313_SubtypeOf->equalRange<1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env2[0]});
auto range = rel_235_ReifiedAndroidObjectValue->equalRange<1>(key,READ_OP_CONTEXT(rel_235_ReifiedAndroidObjectValue_op_ctxt));
for(const auto& env3 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env3[0],env0[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_78_delta_FormalOfForcedReachableContext->empty()&&!rel_15_ApplicationObjectFlowingToLibraryStaticType->empty()) {
auto part = rel_78_delta_FormalOfForcedReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_16_delta_ApplicationObjectFlowingToLibraryStaticType_op_ctxt,rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->createContext());
CREATE_OP_CONTEXT(rel_78_delta_FormalOfForcedReachableContext_op_ctxt,rel_78_delta_FormalOfForcedReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_15_ApplicationObjectFlowingToLibraryStaticType_op_ctxt,rel_15_ApplicationObjectFlowingToLibraryStaticType->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[2]});
auto range = rel_15_ApplicationObjectFlowingToLibraryStaticType->equalRange<2>(key,READ_OP_CONTEXT(rel_15_ApplicationObjectFlowingToLibraryStaticType_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->contains(Tuple<RamDomain,3>({env1[0],env1[1],env0[2]}),READ_OP_CONTEXT(rel_16_delta_ApplicationObjectFlowingToLibraryStaticType_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->empty()&&!rel_77_FormalOfForcedReachableContext->empty()) {
auto part = rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_16_delta_ApplicationObjectFlowingToLibraryStaticType_op_ctxt,rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_77_FormalOfForcedReachableContext_op_ctxt,rel_77_FormalOfForcedReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[2]});
auto range = rel_77_FormalOfForcedReachableContext->equalRange<2>(key,READ_OP_CONTEXT(rel_77_FormalOfForcedReachableContext_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_367_Value_Num->empty()&&!rel_377_VarsAtInvocationRetrievingView->empty()&&!rel_378_ViewObjectValueFromId->empty()) {
auto part = rel_377_VarsAtInvocationRetrievingView->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_377_VarsAtInvocationRetrievingView_op_ctxt,rel_377_VarsAtInvocationRetrievingView->createContext());
CREATE_OP_CONTEXT(rel_378_ViewObjectValueFromId_op_ctxt,rel_378_ViewObjectValueFromId->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_367_Value_Num->equalRange<0>(key,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env2[1]});
auto range = rel_378_ViewObjectValueFromId->equalRange<1>(key,READ_OP_CONTEXT(rel_378_ViewObjectValueFromId_op_ctxt));
for(const auto& env3 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env3[0],env1[2],env0[0]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env3[0]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_113_delta_Instruction_Throws->empty()&&!rel_47_ConcreteClass->empty()&&!rel_57_ExceptionHandler_FormalParam->empty()&&!rel_59_ExceptionHandler_InRange->empty()&&!rel_66_ExceptionHandler_Type->empty()&&!rel_313_SubtypeOf->empty()&&!rel_368_Value_Type->empty()) {
auto part = rel_113_delta_Instruction_Throws->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_113_delta_Instruction_Throws_op_ctxt,rel_113_delta_Instruction_Throws->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt,rel_47_ConcreteClass->createContext());
CREATE_OP_CONTEXT(rel_57_ExceptionHandler_FormalParam_op_ctxt,rel_57_ExceptionHandler_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_58_ExceptionHandler_Impossible_op_ctxt,rel_58_ExceptionHandler_Impossible->createContext());
CREATE_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt,rel_59_ExceptionHandler_InRange->createContext());
CREATE_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt,rel_66_ExceptionHandler_Type->createContext());
CREATE_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt,rel_313_SubtypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env0[3]});
auto range = rel_59_ExceptionHandler_InRange->equalRange<1>(key,READ_OP_CONTEXT(rel_59_ExceptionHandler_InRange_op_ctxt));
for(const auto& env2 : range) {
if( !rel_58_ExceptionHandler_Impossible->contains(Tuple<RamDomain,3>({env1[1],env2[0],env0[3]}),READ_OP_CONTEXT(rel_58_ExceptionHandler_Impossible_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_66_ExceptionHandler_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_66_ExceptionHandler_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env1[1],env3[1]});
auto range = rel_313_SubtypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_313_SubtypeOf_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_47_ConcreteClass->equalRange<0>(key,READ_OP_CONTEXT(rel_47_ConcreteClass_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_57_ExceptionHandler_FormalParam->equalRange<0>(key,READ_OP_CONTEXT(rel_57_ExceptionHandler_FormalParam_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env0[2],env6[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env6[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_84_HeapAllocation_Merge->equalRange<0>(Tuple<RamDomain,2>({env0[0],0}),READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt)).empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
auto ref = env2[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env3 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env3[1]})),env0[0],pack(ram::Tuple<RamDomain,2>({env3[1],env0[0]})),env5[2]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env3[1]}))),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env3[1],env0[0]}))),(RamDomain)(env5[2])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_84_HeapAllocation_Merge->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],env0[0]});
auto range = rel_84_HeapAllocation_Merge->equalRange<0,1>(key,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env4 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env4[1]})),env0[0],pack(ram::Tuple<RamDomain,2>({env4[1],env0[0]})),env6[2]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env4[1]}))),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[1],env0[0]}))),(RamDomain)(env6[2])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_136_MainMethodArgArray->empty()&&!rel_137_MainMethodArgArrayContent->empty()&&!rel_138_MainMethodDeclaration->empty()&&!rel_219_ReachableContext->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_136_MainMethodArgArray_op_ctxt,rel_136_MainMethodArgArray->createContext());
CREATE_OP_CONTEXT(rel_137_MainMethodArgArrayContent_op_ctxt,rel_137_MainMethodArgArrayContent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_138_MainMethodDeclaration) {
if( !rel_220_delta_ReachableContext->contains(Tuple<RamDomain,2>({env0[0],env1[0]}),READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[0],env1[0]});
auto range = rel_219_ReachableContext->equalRange<0,1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_136_MainMethodArgArray) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env4[0],env0[0],env3[2]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
for(const auto& env5 : *rel_137_MainMethodArgArrayContent) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env4[0]),(RamDomain)(env0[0]),(RamDomain)(env3[2])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_136_MainMethodArgArray->empty()&&!rel_137_MainMethodArgArrayContent->empty()&&!rel_138_MainMethodDeclaration->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_97_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_136_MainMethodArgArray_op_ctxt,rel_136_MainMethodArgArray->createContext());
CREATE_OP_CONTEXT(rel_137_MainMethodArgArrayContent_op_ctxt,rel_137_MainMethodArgArrayContent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_138_MainMethodDeclaration) {
const Tuple<RamDomain,2> key({env0[0],env1[0]});
auto range = rel_220_delta_ReachableContext->equalRange<0,1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_136_MainMethodArgArray) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env4[0],env0[0],env3[2]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
for(const auto& env5 : *rel_137_MainMethodArgArrayContent) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env4[0]),(RamDomain)(env0[0]),(RamDomain)(env3[2])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_150_MethodLookup->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({144,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,4> key({145,59,env3[1],0});
auto range = rel_150_MethodLookup->equalRange<0,1,2>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[3],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1],pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})),env5[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env5[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_223_delta_ReachableCurrentThreadInvocation->empty()&&!rel_245_RunningThread->empty()) {
auto part = rel_223_delta_ReachableCurrentThreadInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_223_delta_ReachableCurrentThreadInvocation_op_ctxt,rel_223_delta_ReachableCurrentThreadInvocation->createContext());
CREATE_OP_CONTEXT(rel_246_delta_RunningThread_op_ctxt,rel_246_delta_RunningThread->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_245_RunningThread_op_ctxt,rel_245_RunningThread->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_245_RunningThread) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_246_delta_RunningThread->contains(Tuple<RamDomain,2>({env1[0],env1[1]}),READ_OP_CONTEXT(rel_246_delta_RunningThread_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_246_delta_RunningThread->empty()&&!rel_222_ReachableCurrentThreadInvocation->empty()) {
auto part = rel_222_ReachableCurrentThreadInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_246_delta_RunningThread_op_ctxt,rel_246_delta_RunningThread->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_222_ReachableCurrentThreadInvocation_op_ctxt,rel_222_ReachableCurrentThreadInvocation->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_246_delta_RunningThread) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_32_AssignNormalHeapAllocation->empty()&&!rel_171_ObjectShouldNotBeRefined->empty()) {
auto part = rel_32_AssignNormalHeapAllocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_171_ObjectShouldNotBeRefined_op_ctxt,rel_171_ObjectShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env2 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[1]})),env0[0],pack(ram::Tuple<RamDomain,2>({env2[0],env2[1]})),env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_171_ObjectShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_171_ObjectShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[1]}))),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env2[1]}))),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_214_delta_Reachable->empty()&&!rel_26_AssignContextInsensitiveHeapAllocation->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt,rel_26_AssignContextInsensitiveHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_26_AssignContextInsensitiveHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
if( !rel_220_delta_ReachableContext->contains(Tuple<RamDomain,2>({env2[0],env0[0]}),READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env1[0],env2[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env3[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_26_AssignContextInsensitiveHeapAllocation->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_213_Reachable->empty()) {
auto part = rel_213_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt,rel_26_AssignContextInsensitiveHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_26_AssignContextInsensitiveHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env1[0],env2[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env3[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_26_AssignContextInsensitiveHeapAllocation->empty()&&!rel_213_Reachable->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt,rel_26_AssignContextInsensitiveHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_219_ReachableContext->equalRange<0>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_213_Reachable->equalRange<0>(key,READ_OP_CONTEXT(rel_213_Reachable_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,0,env1[1]});
auto range = rel_26_AssignContextInsensitiveHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_26_AssignContextInsensitiveHeapAllocation_op_ctxt));
for(const auto& env3 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env3[0],env0[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env0[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_214_delta_Reachable->empty()&&!rel_33_AssignNull->empty()&&!rel_85_HeapAllocation_Null->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_33_AssignNull_op_ctxt,rel_33_AssignNull->createContext());
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_33_AssignNull->equalRange<1>(key,READ_OP_CONTEXT(rel_33_AssignNull_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_85_HeapAllocation_Null) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_220_delta_ReachableContext->contains(Tuple<RamDomain,2>({env3[0],env0[0]}),READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env3[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env4[1],env2[0],env3[0],env1[0]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env3[0],env4[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env2[0]),(RamDomain)(env3[0]),(RamDomain)(env1[0])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_33_AssignNull->empty()&&!rel_85_HeapAllocation_Null->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_213_Reachable->empty()) {
auto part = rel_213_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_33_AssignNull_op_ctxt,rel_33_AssignNull->createContext());
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_33_AssignNull->equalRange<1>(key,READ_OP_CONTEXT(rel_33_AssignNull_op_ctxt));
for(const auto& env1 : range) {
for(const auto& env2 : *rel_85_HeapAllocation_Null) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env4[1],env2[0],env3[0],env1[0]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env3[0],env4[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env2[0]),(RamDomain)(env3[0]),(RamDomain)(env1[0])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_33_AssignNull->empty()&&!rel_85_HeapAllocation_Null->empty()&&!rel_213_Reachable->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_33_AssignNull_op_ctxt,rel_33_AssignNull->createContext());
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_219_ReachableContext->equalRange<0>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_213_Reachable->equalRange<0>(key,READ_OP_CONTEXT(rel_213_Reachable_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_33_AssignNull->equalRange<1>(key,READ_OP_CONTEXT(rel_33_AssignNull_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_85_HeapAllocation_Null) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env4[0],env0[0],env3[0]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env4[0]),(RamDomain)(env0[0]),(RamDomain)(env3[0])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_29_AssignInstruction_To->empty()&&!rel_34_AssignNumConstant_Id->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_367_Value_Num->empty()) {
auto part = rel_220_delta_ReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt,rel_34_AssignNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_34_AssignNumConstant_Id->equalRange<0>(key,READ_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env2[1]});
auto range = rel_367_Value_Num->equalRange<1>(key,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env4[0],env0[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env4[0]),(RamDomain)(env0[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_29_AssignInstruction_To->empty()&&!rel_34_AssignNumConstant_Id->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_367_Value_Num->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt,rel_34_AssignNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_219_ReachableContext->equalRange<0>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_34_AssignNumConstant_Id->equalRange<0>(key,READ_OP_CONTEXT(rel_34_AssignNumConstant_Id_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_367_Value_Num->equalRange<1>(key,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env5[0],env0[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env5[0]),(RamDomain)(env0[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_23_AssignCastNumConstant_Id->empty()&&!rel_29_AssignInstruction_To->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_367_Value_Num->empty()) {
auto part = rel_220_delta_ReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_23_AssignCastNumConstant_Id_op_ctxt,rel_23_AssignCastNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_23_AssignCastNumConstant_Id->equalRange<0>(key,READ_OP_CONTEXT(rel_23_AssignCastNumConstant_Id_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env2[1]});
auto range = rel_367_Value_Num->equalRange<1>(key,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env4[0],env0[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env4[0]),(RamDomain)(env0[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_23_AssignCastNumConstant_Id->empty()&&!rel_29_AssignInstruction_To->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_367_Value_Num->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_23_AssignCastNumConstant_Id_op_ctxt,rel_23_AssignCastNumConstant_Id->createContext());
CREATE_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt,rel_29_AssignInstruction_To->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_367_Value_Num_op_ctxt,rel_367_Value_Num->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_219_ReachableContext->equalRange<0>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_23_AssignCastNumConstant_Id->equalRange<0>(key,READ_OP_CONTEXT(rel_23_AssignCastNumConstant_Id_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_29_AssignInstruction_To->equalRange<0>(key,READ_OP_CONTEXT(rel_29_AssignInstruction_To_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_367_Value_Num->equalRange<1>(key,READ_OP_CONTEXT(rel_367_Value_Num_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[1],env5[0],env0[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env5[0]),(RamDomain)(env0[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_30_AssignLocal->empty()) {
auto part = rel_373_delta_VarPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_30_AssignLocal_op_ctxt,rel_30_AssignLocal->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[3],0,0});
auto range = rel_30_AssignLocal->equalRange<0>(key,READ_OP_CONTEXT(rel_30_AssignLocal_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env0[2],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_173_delta_OptAssignCast->empty()&&!rel_319_SupertypeOf->empty()&&!rel_368_Value_Type->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_173_delta_OptAssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_173_delta_OptAssignCast_op_ctxt,rel_173_delta_OptAssignCast->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[2]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env1[2],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env1[2],env0[2]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],env2[1]});
auto range = rel_319_SupertypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_172_OptAssignCast->empty()&&!rel_319_SupertypeOf->empty()&&!rel_368_Value_Type->empty()) {
auto part = rel_172_OptAssignCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_172_OptAssignCast_op_ctxt,rel_172_OptAssignCast->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[2]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env1[2],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],env2[1]});
auto range = rel_319_SupertypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_128_delta_LoadHeapInstanceField->empty()&&!rel_105_InstanceFieldPointsTo->empty()) {
auto part = rel_128_delta_LoadHeapInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_106_delta_InstanceFieldPointsTo_op_ctxt,rel_106_delta_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_128_delta_LoadHeapInstanceField_op_ctxt,rel_128_delta_LoadHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,5> key({0,0,env0[2],env0[3],env0[4]});
auto range = rel_105_InstanceFieldPointsTo->equalRange<2,3,4>(key,READ_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_106_delta_InstanceFieldPointsTo->contains(Tuple<RamDomain,5>({env1[0],env1[1],env0[2],env0[3],env0[4]}),READ_OP_CONTEXT(rel_106_delta_InstanceFieldPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_106_delta_InstanceFieldPointsTo->empty()&&!rel_127_LoadHeapInstanceField->empty()) {
auto part = rel_106_delta_InstanceFieldPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_106_delta_InstanceFieldPointsTo_op_ctxt,rel_106_delta_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_127_LoadHeapInstanceField_op_ctxt,rel_127_LoadHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,5> key({0,0,env0[2],env0[3],env0[4]});
auto range = rel_127_LoadHeapInstanceField->equalRange<2,3,4>(key,READ_OP_CONTEXT(rel_127_LoadHeapInstanceField_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_254_delta_StaticFieldPointsTo->empty()&&!rel_133_LoadStaticField->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_254_delta_StaticFieldPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_254_delta_StaticFieldPointsTo_op_ctxt,rel_254_delta_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt,rel_133_LoadStaticField->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[2],0,0});
auto range = rel_133_LoadStaticField->equalRange<0>(key,READ_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[2]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env2[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_220_delta_ReachableContext->contains(Tuple<RamDomain,2>({env2[0],env1[2]}),READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_133_LoadStaticField->empty()&&!rel_253_StaticFieldPointsTo->empty()) {
auto part = rel_220_delta_ReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt,rel_133_LoadStaticField->createContext());
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[1]});
auto range = rel_133_LoadStaticField->equalRange<2>(key,READ_OP_CONTEXT(rel_133_LoadStaticField_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,0,env1[0]});
auto range = rel_253_StaticFieldPointsTo->equalRange<2>(key,READ_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env0[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_349_delta_Temp2->empty()&&!rel_19_ArrayIndexPointsTo->empty()) {
auto part = rel_349_delta_Temp2->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt,rel_20_delta_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_349_delta_Temp2_op_ctxt,rel_349_delta_Temp2->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_19_ArrayIndexPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_20_delta_ArrayIndexPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[2],env0[3]}),READ_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_20_delta_ArrayIndexPointsTo->empty()&&!rel_348_Temp2->empty()) {
auto part = rel_348_Temp2->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt,rel_20_delta_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_348_Temp2_op_ctxt,rel_348_Temp2->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_20_delta_ArrayIndexPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_178_delta_OptInterproceduralAssign->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_178_delta_OptInterproceduralAssign->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_178_delta_OptInterproceduralAssign_op_ctxt,rel_178_delta_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[2],env0[3]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_177_OptInterproceduralAssign->empty()) {
auto part = rel_373_delta_VarPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt,rel_177_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_177_OptInterproceduralAssign->equalRange<2,3>(key,READ_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_192_delta_OptVirtualMethodInvocationBase->empty()&&!rel_240_ResolveInvocation->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_368_Value_Type->empty()&&!rel_372_VarPointsTo->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_192_delta_OptVirtualMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_192_delta_OptVirtualMethodInvocationBase_op_ctxt,rel_192_delta_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1],env1[2],env0[1]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,3> key({env3[1],env0[0],0});
auto range = rel_240_ResolveInvocation->equalRange<0,1>(key,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1],pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})),env5[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env5[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_191_OptVirtualMethodInvocationBase->empty()&&!rel_240_ResolveInvocation->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_191_OptVirtualMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_191_OptVirtualMethodInvocationBase_op_ctxt,rel_191_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,3> key({env3[1],env0[0],0});
auto range = rel_240_ResolveInvocation->equalRange<0,1>(key,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1],pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})),env5[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env2[0]}))),(RamDomain)(env1[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env5[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_185_delta_OptSpecialMethodInvocationBase->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_372_VarPointsTo->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_185_delta_OptSpecialMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_185_delta_OptSpecialMethodInvocationBase_op_ctxt,rel_185_delta_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env4[0]})),env3[1],pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]})),env2[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env4[0]})),env3[1],env3[2],env0[1]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env4[0]}))),(RamDomain)(env3[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]}))),(RamDomain)(env2[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_184_OptSpecialMethodInvocationBase->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_184_OptSpecialMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_184_OptSpecialMethodInvocationBase_op_ctxt,rel_184_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env4[0]})),env3[1],pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]})),env2[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,1>({env4[0]}))),(RamDomain)(env3[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]}))),(RamDomain)(env2[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_375_Var_DeclaringMethod->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()&&!rel_385_ActualParam->empty()&&!rel_410_Dacapo->empty()) {
auto part = rel_410_Dacapo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_410_Dacapo_op_ctxt,rel_410_Dacapo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_149_MethodInvocation_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_375_Var_DeclaringMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env4[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[0],env4[0],env6[2]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[0]),(RamDomain)(env4[0]),(RamDomain)(env6[2])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_375_Var_DeclaringMethod->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()&&!rel_385_ActualParam->empty()&&!rel_410_Dacapo->empty()) {
auto part = rel_410_Dacapo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_410_Dacapo_op_ctxt,rel_410_Dacapo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_149_MethodInvocation_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_375_Var_DeclaringMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({0,env3[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[0],env4[0],env6[2]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[0]),(RamDomain)(env4[0]),(RamDomain)(env6[2])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_87_HeapAllocation_Type->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_176_OptForNameInvocation->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_176_OptForNameInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_176_OptForNameInvocation_op_ctxt,rel_176_OptForNameInvocation->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env2 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env1[0],env2[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)174)) + std::string(symTable.resolve((size_t)env3[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[0],1});
auto range = rel_87_HeapAllocation_Type->equalRange<0,1>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[1],(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)174)) + std::string(symTable.resolve((size_t)env3[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()),env1[0],env6[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[1]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)174)) + std::string(symTable.resolve((size_t)env3[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env1[0]),(RamDomain)(env6[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_87_HeapAllocation_Type->empty()&&!rel_176_OptForNameInvocation->empty()&&!rel_219_ReachableContext->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_474_isHeapAllocation->empty()) {
auto part = rel_176_OptForNameInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt,rel_87_HeapAllocation_Type->createContext());
CREATE_OP_CONTEXT(rel_176_OptForNameInvocation_op_ctxt,rel_176_OptForNameInvocation->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt,rel_474_isHeapAllocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,1> key({(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)174)) + std::string(symTable.resolve((size_t)env3[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())});
auto range = rel_474_isHeapAllocation->equalRange<0>(key,READ_OP_CONTEXT(rel_474_isHeapAllocation_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[0],1});
auto range = rel_87_HeapAllocation_Type->equalRange<0,1>(key,READ_OP_CONTEXT(rel_87_HeapAllocation_Type_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[1],(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)174)) + std::string(symTable.resolve((size_t)env3[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str()),env1[0],env6[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[1]),(RamDomain)((RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)(RamDomain)symTable.lookup((std::string(symTable.resolve((size_t)174)) + std::string(symTable.resolve((size_t)env3[0]))).c_str()))) + std::string(symTable.resolve((size_t)74))).c_str())),(RamDomain)(env1[0]),(RamDomain)(env6[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_334_Tamiflex_Class_NewInstance->empty()) {
auto part = rel_334_Tamiflex_Class_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_334_Tamiflex_Class_NewInstance_op_ctxt,rel_334_Tamiflex_Class_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env4[1],env0[1],env3[0],env2[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env3[0],env4[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env2[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_334_Tamiflex_Class_NewInstance->empty()) {
auto part = rel_334_Tamiflex_Class_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_334_Tamiflex_Class_NewInstance_op_ctxt,rel_334_Tamiflex_Class_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env4[1],env0[1],env3[0],env2[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env2[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_333_Tamiflex_Array_NewInstance->empty()) {
auto part = rel_333_Tamiflex_Array_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_333_Tamiflex_Array_NewInstance_op_ctxt,rel_333_Tamiflex_Array_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env4[1],env0[1],env3[0],env2[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env3[0],env4[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env2[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_333_Tamiflex_Array_NewInstance->empty()) {
auto part = rel_333_Tamiflex_Array_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_333_Tamiflex_Array_NewInstance_op_ctxt,rel_333_Tamiflex_Array_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env3[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env4[1],env0[1],env3[0],env2[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env4[1]),(RamDomain)(env0[1]),(RamDomain)(env3[0]),(RamDomain)(env2[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[2],env2[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( !rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[2]),(RamDomain)(env2[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[2],env2[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( !rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[2]),(RamDomain)(env2[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[2],env2[0],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[2]),(RamDomain)(env2[0]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[2],env6[1],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[2]),(RamDomain)(env6[1]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[2],env6[1],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[2]),(RamDomain)(env6[1]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env5[1],env0[2],env6[1],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env5[1]),(RamDomain)(env0[2]),(RamDomain)(env6[1]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_337_delta_Tamiflex_Invoke->empty()&&!rel_94_ImmutableContextFromHContext->empty()&&!rel_372_VarPointsTo->empty()&&!rel_385_ActualParam->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_337_delta_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt,rel_95_delta_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_337_delta_Tamiflex_Invoke_op_ctxt,rel_337_delta_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt,rel_94_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[2]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,env0[0],env1[2]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env0[0],env1[2]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_94_ImmutableContextFromHContext->equalRange<0>(key,READ_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env4[1],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_95_delta_ImmutableContextFromHContext->contains(Tuple<RamDomain,2>({env2[0],env4[1]}),READ_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env4[1]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_94_ImmutableContextFromHContext->empty()&&!rel_336_Tamiflex_Invoke->empty()&&!rel_385_ActualParam->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt,rel_95_delta_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt,rel_94_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[2]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,env0[0],env1[2]});
auto range = rel_373_delta_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_94_ImmutableContextFromHContext->equalRange<0>(key,READ_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env4[1],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_95_delta_ImmutableContextFromHContext->contains(Tuple<RamDomain,2>({env2[0],env4[1]}),READ_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env4[1]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_95_delta_ImmutableContextFromHContext->empty()&&!rel_336_Tamiflex_Invoke->empty()&&!rel_372_VarPointsTo->empty()&&!rel_385_ActualParam->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt,rel_95_delta_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[2]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,env0[0],env1[2]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_95_delta_ImmutableContextFromHContext->equalRange<0>(key,READ_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env4[1],env3[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env4[1]),(RamDomain)(env3[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_328_delta_TamiflexInvocationArgumentArrayValue->empty()&&!rel_19_ArrayIndexPointsTo->empty()&&!rel_319_SupertypeOf->empty()&&!rel_368_Value_Type->empty()&&!rel_376_Var_Type->empty()) {
auto part = rel_328_delta_TamiflexInvocationArgumentArrayValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt,rel_20_delta_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_328_delta_TamiflexInvocationArgumentArrayValue_op_ctxt,rel_328_delta_TamiflexInvocationArgumentArrayValue->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_19_ArrayIndexPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) && (!rel_20_delta_ArrayIndexPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[2],env0[3]}),READ_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt))))) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[1],env3[1]});
auto range = rel_319_SupertypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_20_delta_ArrayIndexPointsTo->empty()&&!rel_319_SupertypeOf->empty()&&!rel_327_TamiflexInvocationArgumentArrayValue->empty()&&!rel_368_Value_Type->empty()&&!rel_376_Var_Type->empty()) {
auto part = rel_327_TamiflexInvocationArgumentArrayValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt,rel_20_delta_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_327_TamiflexInvocationArgumentArrayValue_op_ctxt,rel_327_TamiflexInvocationArgumentArrayValue->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_20_delta_ArrayIndexPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_20_delta_ArrayIndexPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[0],env0[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[1],env3[1]});
auto range = rel_319_SupertypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_341_Tamiflex_ReifiedField->empty()) {
auto part = rel_341_Tamiflex_ReifiedField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_341_Tamiflex_ReifiedField_op_ctxt,rel_341_Tamiflex_ReifiedField->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env3[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_341_Tamiflex_ReifiedField->empty()) {
auto part = rel_341_Tamiflex_ReifiedField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_341_Tamiflex_ReifiedField_op_ctxt,rel_341_Tamiflex_ReifiedField->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_342_Tamiflex_ReifiedFieldArray->empty()) {
auto part = rel_342_Tamiflex_ReifiedFieldArray->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_342_Tamiflex_ReifiedFieldArray_op_ctxt,rel_342_Tamiflex_ReifiedFieldArray->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env3[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_342_Tamiflex_ReifiedFieldArray->empty()) {
auto part = rel_342_Tamiflex_ReifiedFieldArray->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_342_Tamiflex_ReifiedFieldArray_op_ctxt,rel_342_Tamiflex_ReifiedFieldArray->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_343_Tamiflex_ReifiedMethod->empty()) {
auto part = rel_343_Tamiflex_ReifiedMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_343_Tamiflex_ReifiedMethod_op_ctxt,rel_343_Tamiflex_ReifiedMethod->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env3[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_343_Tamiflex_ReifiedMethod->empty()) {
auto part = rel_343_Tamiflex_ReifiedMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_343_Tamiflex_ReifiedMethod_op_ctxt,rel_343_Tamiflex_ReifiedMethod->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_344_Tamiflex_ReifiedMethodArray->empty()) {
auto part = rel_344_Tamiflex_ReifiedMethodArray->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_344_Tamiflex_ReifiedMethodArray_op_ctxt,rel_344_Tamiflex_ReifiedMethodArray->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env3[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_344_Tamiflex_ReifiedMethodArray->empty()) {
auto part = rel_344_Tamiflex_ReifiedMethodArray->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt,rel_374_new_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_344_Tamiflex_ReifiedMethodArray_op_ctxt,rel_344_Tamiflex_ReifiedMethodArray->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env4 : range) {
if( !rel_372_VarPointsTo->contains(Tuple<RamDomain,4>({env3[1],env0[1],env2[0],env4[1]}),READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env0[1]),(RamDomain)(env2[0]),(RamDomain)(env4[1])});
rel_374_new_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_374_new_VarPointsTo_op_ctxt));
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_301_delta_StoreHeapInstanceField->empty()&&!rel_166_NotSpecialObject->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_301_delta_StoreHeapInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_301_delta_StoreHeapInstanceField_op_ctxt,rel_301_delta_StoreHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_107_new_InstanceFieldPointsTo_op_ctxt,rel_107_new_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt,rel_166_NotSpecialObject->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_85_HeapAllocation_Null->contains(Tuple<RamDomain,1>({env0[2]}),READ_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt))) {
const Tuple<RamDomain,4> key({0,0,env0[3],env0[4]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_105_InstanceFieldPointsTo->contains(Tuple<RamDomain,5>({env1[0],env1[1],env0[0],env0[1],env0[2]}),READ_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[3],env0[4]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
const Tuple<RamDomain,1> key({env1[1]});
auto range = rel_166_NotSpecialObject->equalRange<0>(key,READ_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,5> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_107_new_InstanceFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_107_new_InstanceFieldPointsTo_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_166_NotSpecialObject->empty()&&!rel_300_StoreHeapInstanceField->empty()) {
auto part = rel_373_delta_VarPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_107_new_InstanceFieldPointsTo_op_ctxt,rel_107_new_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt,rel_166_NotSpecialObject->createContext());
CREATE_OP_CONTEXT(rel_300_StoreHeapInstanceField_op_ctxt,rel_300_StoreHeapInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,5> key({0,0,0,env0[2],env0[3]});
auto range = rel_300_StoreHeapInstanceField->equalRange<3,4>(key,READ_OP_CONTEXT(rel_300_StoreHeapInstanceField_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_85_HeapAllocation_Null->contains(Tuple<RamDomain,1>({env1[2]}),READ_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt))) && (!rel_105_InstanceFieldPointsTo->contains(Tuple<RamDomain,5>({env0[0],env0[1],env1[0],env1[1],env1[2]}),READ_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt))))) {
const Tuple<RamDomain,1> key({env0[1]});
auto range = rel_166_NotSpecialObject->equalRange<0>(key,READ_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,5> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2])});
rel_107_new_InstanceFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_107_new_InstanceFieldPointsTo_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_373_delta_VarPointsTo->empty()&&!rel_470_isField->empty()&&!rel_499_isVar->empty()) {
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_255_new_StaticFieldPointsTo_op_ctxt,rel_255_new_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_470_isField_op_ctxt,rel_470_isField->createContext());
CREATE_OP_CONTEXT(rel_499_isVar_op_ctxt,rel_499_isVar->createContext());
const Tuple<RamDomain,1> key({138});
auto range = rel_470_isField->equalRange<0>(key,READ_OP_CONTEXT(rel_470_isField_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({139});
auto range = rel_499_isVar->equalRange<0>(key,READ_OP_CONTEXT(rel_499_isVar_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,4> key({0,0,0,139});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_253_StaticFieldPointsTo->contains(Tuple<RamDomain,3>({env2[0],env2[1],138}),READ_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(138)});
rel_255_new_StaticFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_255_new_StaticFieldPointsTo_op_ctxt));
}
}
}
}
}
if (!rel_232_delta_ReachableStoreStaticFieldFrom->empty()&&!rel_306_StoreStaticField->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_232_delta_ReachableStoreStaticFieldFrom->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_232_delta_ReachableStoreStaticFieldFrom_op_ctxt,rel_232_delta_ReachableStoreStaticFieldFrom->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_255_new_StaticFieldPointsTo_op_ctxt,rel_255_new_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[0],0,0});
auto range = rel_306_StoreStaticField->equalRange<0>(key,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( ((!rel_253_StaticFieldPointsTo->contains(Tuple<RamDomain,3>({env2[0],env2[1],env1[1]}),READ_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env2[2],env0[0]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env1[1])});
rel_255_new_StaticFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_255_new_StaticFieldPointsTo_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_231_ReachableStoreStaticFieldFrom->empty()&&!rel_306_StoreStaticField->empty()) {
auto part = rel_231_ReachableStoreStaticFieldFrom->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_255_new_StaticFieldPointsTo_op_ctxt,rel_255_new_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_231_ReachableStoreStaticFieldFrom_op_ctxt,rel_231_ReachableStoreStaticFieldFrom->createContext());
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({env0[0],0,0});
auto range = rel_306_StoreStaticField->equalRange<0>(key,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_253_StaticFieldPointsTo->contains(Tuple<RamDomain,3>({env2[0],env2[1],env1[1]}),READ_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env1[1])});
rel_255_new_StaticFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_255_new_StaticFieldPointsTo_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_136_MainMethodArgArray->empty()&&!rel_137_MainMethodArgArrayContent->empty()&&!rel_138_MainMethodDeclaration->empty()&&!rel_219_ReachableContext->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_98_delta_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_21_new_ArrayIndexPointsTo_op_ctxt,rel_21_new_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_136_MainMethodArgArray_op_ctxt,rel_136_MainMethodArgArray->createContext());
CREATE_OP_CONTEXT(rel_137_MainMethodArgArrayContent_op_ctxt,rel_137_MainMethodArgArrayContent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_138_MainMethodDeclaration) {
if( !rel_220_delta_ReachableContext->contains(Tuple<RamDomain,2>({env0[0],env1[0]}),READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[0],env1[0]});
auto range = rel_219_ReachableContext->equalRange<0,1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_136_MainMethodArgArray) {
for(const auto& env5 : *rel_137_MainMethodArgArrayContent) {
if( !rel_19_ArrayIndexPointsTo->contains(Tuple<RamDomain,4>({env0[1],env5[0],env0[1],env4[0]}),READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env5[0]),(RamDomain)(env0[1]),(RamDomain)(env4[0])});
rel_21_new_ArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_21_new_ArrayIndexPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_136_MainMethodArgArray->empty()&&!rel_137_MainMethodArgArrayContent->empty()&&!rel_138_MainMethodDeclaration->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_97_ImmutableHContextFromContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_21_new_ArrayIndexPointsTo_op_ctxt,rel_21_new_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_136_MainMethodArgArray_op_ctxt,rel_136_MainMethodArgArray->createContext());
CREATE_OP_CONTEXT(rel_137_MainMethodArgArrayContent_op_ctxt,rel_137_MainMethodArgArrayContent->createContext());
CREATE_OP_CONTEXT(rel_138_MainMethodDeclaration_op_ctxt,rel_138_MainMethodDeclaration->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_138_MainMethodDeclaration) {
const Tuple<RamDomain,2> key({env0[0],env1[0]});
auto range = rel_220_delta_ReachableContext->equalRange<0,1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,env1[0],0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env3 : range) {
for(const auto& env4 : *rel_136_MainMethodArgArray) {
for(const auto& env5 : *rel_137_MainMethodArgArrayContent) {
if( !rel_19_ArrayIndexPointsTo->contains(Tuple<RamDomain,4>({env0[1],env5[0],env0[1],env4[0]}),READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[1]),(RamDomain)(env5[0]),(RamDomain)(env0[1]),(RamDomain)(env4[0])});
rel_21_new_ArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_21_new_ArrayIndexPointsTo_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_189_delta_OptStoreIntoArray->empty()&&!rel_164_NotEmptyArrayValue->empty()&&!rel_166_NotSpecialObject->empty()&&!rel_319_SupertypeOf->empty()&&!rel_368_Value_Type->empty()&&!rel_408_ComponentType->empty()) {
auto part = rel_189_delta_OptStoreIntoArray->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_189_delta_OptStoreIntoArray_op_ctxt,rel_189_delta_OptStoreIntoArray->createContext());
CREATE_OP_CONTEXT(rel_21_new_ArrayIndexPointsTo_op_ctxt,rel_21_new_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt,rel_164_NotEmptyArrayValue->createContext());
CREATE_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt,rel_166_NotSpecialObject->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_19_ArrayIndexPointsTo->contains(Tuple<RamDomain,4>({env0[0],env0[3],env0[1],env0[2]}),READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[3]});
auto range = rel_166_NotSpecialObject->equalRange<0>(key,READ_OP_CONTEXT(rel_166_NotSpecialObject_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,1> key({env0[2]});
auto range = rel_164_NotEmptyArrayValue->equalRange<0>(key,READ_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[3],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[1],0});
auto range = rel_408_ComponentType->equalRange<0>(key,READ_OP_CONTEXT(rel_408_ComponentType_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env5[1],env3[1]});
auto range = rel_319_SupertypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[3]),(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_21_new_ArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_21_new_ArrayIndexPointsTo_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( rel_84_HeapAllocation_Merge->equalRange<0>(Tuple<RamDomain,2>({env0[0],0}),READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt)).empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
auto ref = env2[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env3 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,2>({env3[0],env3[1]})),env0[1],pack(ram::Tuple<RamDomain,2>({env3[1],env0[0]})),90}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) {
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env3[0],env3[1]}))),(RamDomain)(env0[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env3[1],env0[0]}))),(RamDomain)(90)});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_2_AllocatedObjectSupportsFinalize->empty()&&!rel_71_FakeInvocation_RegisterFinalize0->empty()&&!rel_84_HeapAllocation_Merge->empty()&&!rel_422_FormalParam->empty()&&!rel_485_isMethod->empty()) {
auto part = rel_71_FakeInvocation_RegisterFinalize0->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt,rel_2_AllocatedObjectSupportsFinalize->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_71_FakeInvocation_RegisterFinalize0_op_ctxt,rel_71_FakeInvocation_RegisterFinalize0->createContext());
CREATE_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt,rel_84_HeapAllocation_Merge->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_2_AllocatedObjectSupportsFinalize->equalRange<0>(key,READ_OP_CONTEXT(rel_2_AllocatedObjectSupportsFinalize_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env0[0],env0[0]});
auto range = rel_84_HeapAllocation_Merge->equalRange<0,1>(key,READ_OP_CONTEXT(rel_84_HeapAllocation_Merge_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,2>>(ref)) continue;
ram::Tuple<RamDomain,2> env4 = unpack<ram::Tuple<RamDomain,2>>(ref);
{
if( !rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,2>({env4[0],env4[1]})),env0[1],pack(ram::Tuple<RamDomain,2>({env4[1],env0[0]})),90}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) {
const Tuple<RamDomain,1> key({90});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,90,0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env6 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env4[1]}))),(RamDomain)(env0[1]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[1],env0[0]}))),(RamDomain)(90)});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_192_delta_OptVirtualMethodInvocationBase->empty()&&!rel_240_ResolveInvocation->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_368_Value_Type->empty()&&!rel_372_VarPointsTo->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_192_delta_OptVirtualMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_192_delta_OptVirtualMethodInvocationBase_op_ctxt,rel_192_delta_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env2[0]})),env1[1],env1[2],env0[1]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,3> key({env3[1],env0[0],0});
auto range = rel_240_ResolveInvocation->equalRange<0,1>(key,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
for(const auto& env4 : range) {
if( !rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({env1[2],env0[0],pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})),env4[2]}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) {
const Tuple<RamDomain,2> key({env4[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[2]),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env4[2])});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_191_OptVirtualMethodInvocationBase->empty()&&!rel_240_ResolveInvocation->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_191_OptVirtualMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_191_OptVirtualMethodInvocationBase_op_ctxt,rel_191_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt,rel_240_ResolveInvocation->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,3> key({env3[1],env0[0],0});
auto range = rel_240_ResolveInvocation->equalRange<0,1>(key,READ_OP_CONTEXT(rel_240_ResolveInvocation_op_ctxt));
for(const auto& env4 : range) {
if( !rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({env1[2],env0[0],pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})),env4[2]}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) {
const Tuple<RamDomain,2> key({env4[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[2]),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env4[2])});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()&&!rel_256_StaticMethodInvocation->empty()) {
auto part = rel_220_delta_ReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt,rel_256_StaticMethodInvocation->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[1]});
auto range = rel_256_StaticMethodInvocation->equalRange<2>(key,READ_OP_CONTEXT(rel_256_StaticMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
if( !rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({env0[0],env1[0],env0[0],env1[1]}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0]),(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_185_delta_OptSpecialMethodInvocationBase->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_372_VarPointsTo->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_185_delta_OptSpecialMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_185_delta_OptSpecialMethodInvocationBase_op_ctxt,rel_185_delta_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( ((!rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({env3[2],env0[0],pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]})),env1[1]}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({pack(ram::Tuple<RamDomain,1>({env4[0]})),env3[1],env3[2],env0[1]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[2]),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]}))),(RamDomain)(env1[1])});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_149_MethodInvocation_Method->empty()&&!rel_184_OptSpecialMethodInvocationBase->empty()&&!rel_248_SiteShouldNotBeRefined->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_184_OptSpecialMethodInvocationBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt,rel_38_new_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt,rel_149_MethodInvocation_Method->createContext());
CREATE_OP_CONTEXT(rel_184_OptSpecialMethodInvocationBase_op_ctxt,rel_184_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt,rel_248_SiteShouldNotBeRefined->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_149_MethodInvocation_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_149_MethodInvocation_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env3 : range) {
auto ref = env3[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env4 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
if( !rel_36_CallGraphEdge->contains(Tuple<RamDomain,4>({env3[2],env0[0],pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]})),env1[1]}),READ_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt))) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_248_SiteShouldNotBeRefined->equalRange<0>(key,READ_OP_CONTEXT(rel_248_SiteShouldNotBeRefined_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[2]),(RamDomain)(env0[0]),(RamDomain)(pack(ram::Tuple<RamDomain,2>({env4[0],env3[1]}))),(RamDomain)(env1[1])});
rel_38_new_CallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_38_new_CallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_103_delta_InitializedClass->empty()&&!rel_40_ClassInitializer->empty()) {
auto part = rel_103_delta_InitializedClass->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_103_delta_InitializedClass_op_ctxt,rel_103_delta_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_215_new_Reachable_op_ctxt,rel_215_new_Reachable->createContext());
CREATE_OP_CONTEXT(rel_40_ClassInitializer_op_ctxt,rel_40_ClassInitializer->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_40_ClassInitializer->equalRange<0>(key,READ_OP_CONTEXT(rel_40_ClassInitializer_op_ctxt));
for(const auto& env1 : range) {
if( !rel_213_Reachable->contains(Tuple<RamDomain,1>({env1[1]}),READ_OP_CONTEXT(rel_213_Reachable_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[1])});
rel_215_new_Reachable->insert(tuple,READ_OP_CONTEXT(rel_215_new_Reachable_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_220_delta_ReachableContext->empty()) {
auto part = rel_220_delta_ReachableContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_215_new_Reachable_op_ctxt,rel_215_new_Reachable->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_213_Reachable->contains(Tuple<RamDomain,1>({env0[1]}),READ_OP_CONTEXT(rel_213_Reachable_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_215_new_Reachable->insert(tuple,READ_OP_CONTEXT(rel_215_new_Reachable_op_ctxt));
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_211_delta_PublicOnMethodOfReachableListener->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_211_delta_PublicOnMethodOfReachableListener->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_211_delta_PublicOnMethodOfReachableListener_op_ctxt,rel_211_delta_PublicOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt,rel_221_new_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
if( !rel_219_ReachableContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_221_new_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_198_delta_OverridingProtectedOnMethodOfReachableListener->empty()&&!rel_475_isImmutableContext->empty()) {
auto part = rel_198_delta_OverridingProtectedOnMethodOfReachableListener->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_198_delta_OverridingProtectedOnMethodOfReachableListener_op_ctxt,rel_198_delta_OverridingProtectedOnMethodOfReachableListener->createContext());
CREATE_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt,rel_221_new_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_475_isImmutableContext_op_ctxt,rel_475_isImmutableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_475_isImmutableContext) {
if( !rel_219_ReachableContext->contains(Tuple<RamDomain,2>({env1[0],env0[0]}),READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_221_new_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_150_MethodLookup->empty()&&!rel_368_Value_Type->empty()&&!rel_451_ThisVar->empty()) {
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt,rel_221_new_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_150_MethodLookup_op_ctxt,rel_150_MethodLookup->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
const Tuple<RamDomain,2> key({144,0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env0 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
auto ref = env1[0];
if (isNull<ram::Tuple<RamDomain,1>>(ref)) continue;
ram::Tuple<RamDomain,1> env2 = unpack<ram::Tuple<RamDomain,1>>(ref);
{
const Tuple<RamDomain,2> key({env1[1],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,4> key({145,59,env3[1],0});
auto range = rel_150_MethodLookup->equalRange<0,1,2>(key,READ_OP_CONTEXT(rel_150_MethodLookup_op_ctxt));
for(const auto& env4 : range) {
if( !rel_219_ReachableContext->contains(Tuple<RamDomain,2>({pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]})),env4[3]}),READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env4[3],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env5 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(pack(ram::Tuple<RamDomain,2>({env2[0],env1[1]}))),(RamDomain)(env4[3])});
rel_221_new_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt));
}
}
}
}
}
}
}
}
if (!rel_103_delta_InitializedClass->empty()&&!rel_40_ClassInitializer->empty()&&!rel_465_isClinitContext->empty()) {
auto part = rel_465_isClinitContext->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_103_delta_InitializedClass_op_ctxt,rel_103_delta_InitializedClass->createContext());
CREATE_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt,rel_221_new_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_40_ClassInitializer_op_ctxt,rel_40_ClassInitializer->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_465_isClinitContext_op_ctxt,rel_465_isClinitContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
for(const auto& env1 : *rel_103_delta_InitializedClass) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_40_ClassInitializer->equalRange<0>(key,READ_OP_CONTEXT(rel_40_ClassInitializer_op_ctxt));
for(const auto& env2 : range) {
if( !rel_219_ReachableContext->contains(Tuple<RamDomain,2>({env0[0],env2[1]}),READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env2[1])});
rel_221_new_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_37_delta_CallGraphEdge->empty()) {
auto part = rel_37_delta_CallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_37_delta_CallGraphEdge_op_ctxt,rel_37_delta_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt,rel_221_new_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_219_ReachableContext->contains(Tuple<RamDomain,2>({env0[2],env0[3]}),READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env0[3])});
rel_221_new_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_322_delta_TamiflexCallGraphEdge->empty()) {
auto part = rel_322_delta_TamiflexCallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_322_delta_TamiflexCallGraphEdge_op_ctxt,rel_322_delta_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt,rel_221_new_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_219_ReachableContext->contains(Tuple<RamDomain,2>({env0[2],env0[3]}),READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[2]),(RamDomain)(env0[3])});
rel_221_new_ReachableContext->insert(tuple,READ_OP_CONTEXT(rel_221_new_ReachableContext_op_ctxt));
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_37_delta_CallGraphEdge->empty()&&!rel_385_ActualParam->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_37_delta_CallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_37_delta_CallGraphEdge_op_ctxt,rel_37_delta_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt,rel_179_new_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt,rel_177_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({env1[0],env0[3],0});
auto range = rel_422_FormalParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env2 : range) {
if( !rel_177_OptInterproceduralAssign->contains(Tuple<RamDomain,4>({env0[2],env2[2],env0[0],env1[2]}),READ_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[2]),(RamDomain)(env2[2]),(RamDomain)(env0[0]),(RamDomain)(env1[2])});
rel_179_new_OptInterproceduralAssign->insert(tuple,READ_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_37_delta_CallGraphEdge->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_242_ReturnVar->empty()) {
auto part = rel_37_delta_CallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_37_delta_CallGraphEdge_op_ctxt,rel_37_delta_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt,rel_179_new_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt,rel_177_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env0[3]});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env2 : range) {
if( !rel_177_OptInterproceduralAssign->contains(Tuple<RamDomain,4>({env0[0],env1[1],env0[2],env2[0]}),READ_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1]),(RamDomain)(env0[2]),(RamDomain)(env2[0])});
rel_179_new_OptInterproceduralAssign->insert(tuple,READ_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_337_delta_Tamiflex_Invoke->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_242_ReturnVar->empty()) {
auto part = rel_337_delta_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_337_delta_Tamiflex_Invoke_op_ctxt,rel_337_delta_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt,rel_179_new_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt,rel_177_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( ((!rel_177_OptInterproceduralAssign->contains(Tuple<RamDomain,4>({env0[0],env1[1],env3[1],env2[0]}),READ_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env3[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1]),(RamDomain)(env3[1]),(RamDomain)(env2[0])});
rel_179_new_OptInterproceduralAssign->insert(tuple,READ_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_242_ReturnVar->empty()&&!rel_336_Tamiflex_Invoke->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt,rel_179_new_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt,rel_177_OptInterproceduralAssign->createContext());
CREATE_OP_CONTEXT(rel_242_ReturnVar_op_ctxt,rel_242_ReturnVar->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env0[2]});
auto range = rel_242_ReturnVar->equalRange<1>(key,READ_OP_CONTEXT(rel_242_ReturnVar_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_177_OptInterproceduralAssign->contains(Tuple<RamDomain,4>({env0[0],env1[1],env3[1],env2[0]}),READ_OP_CONTEXT(rel_177_OptInterproceduralAssign_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1]),(RamDomain)(env3[1]),(RamDomain)(env2[0])});
rel_179_new_OptInterproceduralAssign->insert(tuple,READ_OP_CONTEXT(rel_179_new_OptInterproceduralAssign_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_298_delta_StoreHeapArrayIndex->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_298_delta_StoreHeapArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_298_delta_StoreHeapArrayIndex_op_ctxt,rel_298_delta_StoreHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_190_new_OptStoreIntoArray_op_ctxt,rel_190_new_OptStoreIntoArray->createContext());
CREATE_OP_CONTEXT(rel_188_OptStoreIntoArray_op_ctxt,rel_188_OptStoreIntoArray->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_188_OptStoreIntoArray->contains(Tuple<RamDomain,4>({env1[0],env0[0],env0[1],env1[1]}),READ_OP_CONTEXT(rel_188_OptStoreIntoArray_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[2],env0[3]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[1])});
rel_190_new_OptStoreIntoArray->insert(tuple,READ_OP_CONTEXT(rel_190_new_OptStoreIntoArray_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_297_StoreHeapArrayIndex->empty()) {
auto part = rel_297_StoreHeapArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_190_new_OptStoreIntoArray_op_ctxt,rel_190_new_OptStoreIntoArray->createContext());
CREATE_OP_CONTEXT(rel_188_OptStoreIntoArray_op_ctxt,rel_188_OptStoreIntoArray->createContext());
CREATE_OP_CONTEXT(rel_297_StoreHeapArrayIndex_op_ctxt,rel_297_StoreHeapArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_373_delta_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_188_OptStoreIntoArray->contains(Tuple<RamDomain,4>({env1[0],env0[0],env0[1],env1[1]}),READ_OP_CONTEXT(rel_188_OptStoreIntoArray_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[1])});
rel_190_new_OptStoreIntoArray->insert(tuple,READ_OP_CONTEXT(rel_190_new_OptStoreIntoArray_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_373_delta_VarPointsTo->empty()&&!rel_130_LoadInstanceField->empty()) {
auto part = rel_130_LoadInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_129_new_LoadHeapInstanceField_op_ctxt,rel_129_new_LoadHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_127_LoadHeapInstanceField_op_ctxt,rel_127_LoadHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_130_LoadInstanceField_op_ctxt,rel_130_LoadInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_127_LoadHeapInstanceField->contains(Tuple<RamDomain,5>({env1[2],env0[2],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_127_LoadHeapInstanceField_op_ctxt))) {
Tuple<RamDomain,5> tuple({(RamDomain)(env1[2]),(RamDomain)(env0[2]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_129_new_LoadHeapInstanceField->insert(tuple,READ_OP_CONTEXT(rel_129_new_LoadHeapInstanceField_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_373_delta_VarPointsTo->empty()&&!rel_303_StoreInstanceField->empty()) {
auto part = rel_303_StoreInstanceField->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_302_new_StoreHeapInstanceField_op_ctxt,rel_302_new_StoreHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_300_StoreHeapInstanceField_op_ctxt,rel_300_StoreHeapInstanceField->createContext());
CREATE_OP_CONTEXT(rel_303_StoreInstanceField_op_ctxt,rel_303_StoreInstanceField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[1]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_300_StoreHeapInstanceField->contains(Tuple<RamDomain,5>({env0[2],env1[0],env1[1],env1[2],env0[0]}),READ_OP_CONTEXT(rel_300_StoreHeapInstanceField_op_ctxt))) {
Tuple<RamDomain,5> tuple({(RamDomain)(env0[2]),(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_302_new_StoreHeapInstanceField->insert(tuple,READ_OP_CONTEXT(rel_302_new_StoreHeapInstanceField_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_226_delta_ReachableLoadArrayIndexBase->empty()&&!rel_180_OptLoadArrayIndex->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_226_delta_ReachableLoadArrayIndexBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_226_delta_ReachableLoadArrayIndexBase_op_ctxt,rel_226_delta_ReachableLoadArrayIndexBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_126_new_LoadHeapArrayIndex_op_ctxt,rel_126_new_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_124_LoadHeapArrayIndex_op_ctxt,rel_124_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_180_OptLoadArrayIndex_op_ctxt,rel_180_OptLoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_180_OptLoadArrayIndex->equalRange<1>(key,READ_OP_CONTEXT(rel_180_OptLoadArrayIndex_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( ((!rel_124_LoadHeapArrayIndex->contains(Tuple<RamDomain,4>({env2[2],env1[0],env2[0],env2[1]}),READ_OP_CONTEXT(rel_124_LoadHeapArrayIndex_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env2[2],env0[0]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[2]),(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)(env2[1])});
rel_126_new_LoadHeapArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_126_new_LoadHeapArrayIndex_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_180_OptLoadArrayIndex->empty()&&!rel_225_ReachableLoadArrayIndexBase->empty()) {
auto part = rel_225_ReachableLoadArrayIndexBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_126_new_LoadHeapArrayIndex_op_ctxt,rel_126_new_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_124_LoadHeapArrayIndex_op_ctxt,rel_124_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_180_OptLoadArrayIndex_op_ctxt,rel_180_OptLoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_225_ReachableLoadArrayIndexBase_op_ctxt,rel_225_ReachableLoadArrayIndexBase->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_180_OptLoadArrayIndex->equalRange<1>(key,READ_OP_CONTEXT(rel_180_OptLoadArrayIndex_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_124_LoadHeapArrayIndex->contains(Tuple<RamDomain,4>({env2[2],env1[0],env2[0],env2[1]}),READ_OP_CONTEXT(rel_124_LoadHeapArrayIndex_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[2]),(RamDomain)(env1[0]),(RamDomain)(env2[0]),(RamDomain)(env2[1])});
rel_126_new_LoadHeapArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_126_new_LoadHeapArrayIndex_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_229_delta_ReachableStoreArrayIndexBase->empty()&&!rel_187_OptStoreArrayIndex->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_229_delta_ReachableStoreArrayIndexBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_229_delta_ReachableStoreArrayIndexBase_op_ctxt,rel_229_delta_ReachableStoreArrayIndexBase->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_299_new_StoreHeapArrayIndex_op_ctxt,rel_299_new_StoreHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_187_OptStoreArrayIndex_op_ctxt,rel_187_OptStoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_297_StoreHeapArrayIndex_op_ctxt,rel_297_StoreHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_187_OptStoreArrayIndex->equalRange<1>(key,READ_OP_CONTEXT(rel_187_OptStoreArrayIndex_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( ((!rel_297_StoreHeapArrayIndex->contains(Tuple<RamDomain,4>({env2[0],env2[1],env2[2],env1[0]}),READ_OP_CONTEXT(rel_297_StoreHeapArrayIndex_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env2[2],env0[0]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env2[2]),(RamDomain)(env1[0])});
rel_299_new_StoreHeapArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_299_new_StoreHeapArrayIndex_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_187_OptStoreArrayIndex->empty()&&!rel_228_ReachableStoreArrayIndexBase->empty()) {
auto part = rel_228_ReachableStoreArrayIndexBase->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_299_new_StoreHeapArrayIndex_op_ctxt,rel_299_new_StoreHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_187_OptStoreArrayIndex_op_ctxt,rel_187_OptStoreArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_228_ReachableStoreArrayIndexBase_op_ctxt,rel_228_ReachableStoreArrayIndexBase->createContext());
CREATE_OP_CONTEXT(rel_297_StoreHeapArrayIndex_op_ctxt,rel_297_StoreHeapArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_187_OptStoreArrayIndex->equalRange<1>(key,READ_OP_CONTEXT(rel_187_OptStoreArrayIndex_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_373_delta_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_297_StoreHeapArrayIndex->contains(Tuple<RamDomain,4>({env2[0],env2[1],env2[2],env1[0]}),READ_OP_CONTEXT(rel_297_StoreHeapArrayIndex_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env2[2]),(RamDomain)(env1[0])});
rel_299_new_StoreHeapArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_299_new_StoreHeapArrayIndex_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_214_delta_Reachable->empty()&&!rel_22_AssignCast->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_174_new_OptAssignCast_op_ctxt,rel_174_new_OptAssignCast->createContext());
CREATE_OP_CONTEXT(rel_22_AssignCast_op_ctxt,rel_22_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_172_OptAssignCast_op_ctxt,rel_172_OptAssignCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_22_AssignCast->equalRange<3>(key,READ_OP_CONTEXT(rel_22_AssignCast_op_ctxt));
for(const auto& env1 : range) {
if( !rel_172_OptAssignCast->contains(Tuple<RamDomain,3>({env1[0],env1[2],env1[1]}),READ_OP_CONTEXT(rel_172_OptAssignCast_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[2]),(RamDomain)(env1[1])});
rel_174_new_OptAssignCast->insert(tuple,READ_OP_CONTEXT(rel_174_new_OptAssignCast_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_214_delta_Reachable->empty()&&!rel_306_StoreStaticField->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_233_new_ReachableStoreStaticFieldFrom_op_ctxt,rel_233_new_ReachableStoreStaticFieldFrom->createContext());
CREATE_OP_CONTEXT(rel_231_ReachableStoreStaticFieldFrom_op_ctxt,rel_231_ReachableStoreStaticFieldFrom->createContext());
CREATE_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt,rel_306_StoreStaticField->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_306_StoreStaticField->equalRange<2>(key,READ_OP_CONTEXT(rel_306_StoreStaticField_op_ctxt));
for(const auto& env1 : range) {
if( !rel_231_ReachableStoreStaticFieldFrom->contains(Tuple<RamDomain,1>({env1[0]}),READ_OP_CONTEXT(rel_231_ReachableStoreStaticFieldFrom_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_233_new_ReachableStoreStaticFieldFrom->insert(tuple,READ_OP_CONTEXT(rel_233_new_ReachableStoreStaticFieldFrom_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_125_delta_LoadHeapArrayIndex->empty()) {
auto part = rel_125_delta_LoadHeapArrayIndex->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_125_delta_LoadHeapArrayIndex_op_ctxt,rel_125_delta_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_183_new_OptLoadHeapArrayIndex_op_ctxt,rel_183_new_OptLoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_181_OptLoadHeapArrayIndex_op_ctxt,rel_181_OptLoadHeapArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_181_OptLoadHeapArrayIndex->contains(Tuple<RamDomain,2>({env0[1],env0[3]}),READ_OP_CONTEXT(rel_181_OptLoadHeapArrayIndex_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[3])});
rel_183_new_OptLoadHeapArrayIndex->insert(tuple,READ_OP_CONTEXT(rel_183_new_OptLoadHeapArrayIndex_op_ctxt));
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_182_delta_OptLoadHeapArrayIndex->empty()&&!rel_164_NotEmptyArrayValue->empty()&&!rel_319_SupertypeOf->empty()&&!rel_368_Value_Type->empty()&&!rel_376_Var_Type->empty()&&!rel_408_ComponentType->empty()) {
auto part = rel_164_NotEmptyArrayValue->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_182_delta_OptLoadHeapArrayIndex_op_ctxt,rel_182_delta_OptLoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_347_new_Temp1_op_ctxt,rel_347_new_Temp1->createContext());
CREATE_OP_CONTEXT(rel_164_NotEmptyArrayValue_op_ctxt,rel_164_NotEmptyArrayValue->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_345_Temp1_op_ctxt,rel_345_Temp1->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
CREATE_OP_CONTEXT(rel_376_Var_Type_op_ctxt,rel_376_Var_Type->createContext());
CREATE_OP_CONTEXT(rel_408_ComponentType_op_ctxt,rel_408_ComponentType->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_182_delta_OptLoadHeapArrayIndex->equalRange<1>(key,READ_OP_CONTEXT(rel_182_delta_OptLoadHeapArrayIndex_op_ctxt));
for(const auto& env1 : range) {
if( !rel_345_Temp1->contains(Tuple<RamDomain,2>({env0[0],env1[0]}),READ_OP_CONTEXT(rel_345_Temp1_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env2[1],0});
auto range = rel_408_ComponentType->equalRange<0>(key,READ_OP_CONTEXT(rel_408_ComponentType_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_376_Var_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_376_Var_Type_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env4[1],env3[1]});
auto range = rel_319_SupertypeOf->equalRange<0,1>(key,READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_347_new_Temp1->insert(tuple,READ_OP_CONTEXT(rel_347_new_Temp1_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_346_delta_Temp1->empty()&&!rel_124_LoadHeapArrayIndex->empty()) {
auto part = rel_346_delta_Temp1->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_125_delta_LoadHeapArrayIndex_op_ctxt,rel_125_delta_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_346_delta_Temp1_op_ctxt,rel_346_delta_Temp1->createContext());
CREATE_OP_CONTEXT(rel_350_new_Temp2_op_ctxt,rel_350_new_Temp2->createContext());
CREATE_OP_CONTEXT(rel_124_LoadHeapArrayIndex_op_ctxt,rel_124_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_348_Temp2_op_ctxt,rel_348_Temp2->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,env0[1],0,env0[0]});
auto range = rel_124_LoadHeapArrayIndex->equalRange<1,3>(key,READ_OP_CONTEXT(rel_124_LoadHeapArrayIndex_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_348_Temp2->contains(Tuple<RamDomain,4>({env1[0],env0[1],env1[2],env0[0]}),READ_OP_CONTEXT(rel_348_Temp2_op_ctxt))) && (!rel_125_delta_LoadHeapArrayIndex->contains(Tuple<RamDomain,4>({env1[0],env0[1],env1[2],env0[0]}),READ_OP_CONTEXT(rel_125_delta_LoadHeapArrayIndex_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_350_new_Temp2->insert(tuple,READ_OP_CONTEXT(rel_350_new_Temp2_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_125_delta_LoadHeapArrayIndex->empty()&&!rel_345_Temp1->empty()) {
auto part = rel_345_Temp1->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_125_delta_LoadHeapArrayIndex_op_ctxt,rel_125_delta_LoadHeapArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_350_new_Temp2_op_ctxt,rel_350_new_Temp2->createContext());
CREATE_OP_CONTEXT(rel_345_Temp1_op_ctxt,rel_345_Temp1->createContext());
CREATE_OP_CONTEXT(rel_348_Temp2_op_ctxt,rel_348_Temp2->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,env0[1],0,env0[0]});
auto range = rel_125_delta_LoadHeapArrayIndex->equalRange<1,3>(key,READ_OP_CONTEXT(rel_125_delta_LoadHeapArrayIndex_op_ctxt));
for(const auto& env1 : range) {
if( !rel_348_Temp2->contains(Tuple<RamDomain,4>({env1[0],env0[1],env1[2],env0[0]}),READ_OP_CONTEXT(rel_348_Temp2_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_350_new_Temp2->insert(tuple,READ_OP_CONTEXT(rel_350_new_Temp2_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_214_delta_Reachable->empty()&&!rel_121_LoadArrayIndex->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_227_new_ReachableLoadArrayIndexBase_op_ctxt,rel_227_new_ReachableLoadArrayIndexBase->createContext());
CREATE_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt,rel_121_LoadArrayIndex->createContext());
CREATE_OP_CONTEXT(rel_225_ReachableLoadArrayIndexBase_op_ctxt,rel_225_ReachableLoadArrayIndexBase->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_121_LoadArrayIndex->equalRange<2>(key,READ_OP_CONTEXT(rel_121_LoadArrayIndex_op_ctxt));
for(const auto& env1 : range) {
if( !rel_225_ReachableLoadArrayIndexBase->contains(Tuple<RamDomain,1>({env1[0]}),READ_OP_CONTEXT(rel_225_ReachableLoadArrayIndexBase_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_227_new_ReachableLoadArrayIndexBase->insert(tuple,READ_OP_CONTEXT(rel_227_new_ReachableLoadArrayIndexBase_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_214_delta_Reachable->empty()&&!rel_294_StoreArrayIndex->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_230_new_ReachableStoreArrayIndexBase_op_ctxt,rel_230_new_ReachableStoreArrayIndexBase->createContext());
CREATE_OP_CONTEXT(rel_228_ReachableStoreArrayIndexBase_op_ctxt,rel_228_ReachableStoreArrayIndexBase->createContext());
CREATE_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt,rel_294_StoreArrayIndex->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_294_StoreArrayIndex->equalRange<2>(key,READ_OP_CONTEXT(rel_294_StoreArrayIndex_op_ctxt));
for(const auto& env1 : range) {
if( !rel_228_ReachableStoreArrayIndexBase->contains(Tuple<RamDomain,1>({env1[1]}),READ_OP_CONTEXT(rel_228_ReachableStoreArrayIndexBase_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[1])});
rel_230_new_ReachableStoreArrayIndexBase->insert(tuple,READ_OP_CONTEXT(rel_230_new_ReachableStoreArrayIndexBase_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_214_delta_Reachable->empty()&&!rel_109_Instruction_Method->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_193_new_OptVirtualMethodInvocationBase_op_ctxt,rel_193_new_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_191_OptVirtualMethodInvocationBase_op_ctxt,rel_191_OptVirtualMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
if( !rel_191_OptVirtualMethodInvocationBase->contains(Tuple<RamDomain,2>({env1[0],env2[1]}),READ_OP_CONTEXT(rel_191_OptVirtualMethodInvocationBase_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env2[1])});
rel_193_new_OptVirtualMethodInvocationBase->insert(tuple,READ_OP_CONTEXT(rel_193_new_OptVirtualMethodInvocationBase_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_214_delta_Reachable->empty()&&!rel_109_Instruction_Method->empty()&&!rel_252_SpecialMethodInvocation_Base->empty()) {
auto part = rel_214_delta_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_214_delta_Reachable_op_ctxt,rel_214_delta_Reachable->createContext());
CREATE_OP_CONTEXT(rel_186_new_OptSpecialMethodInvocationBase_op_ctxt,rel_186_new_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_184_OptSpecialMethodInvocationBase_op_ctxt,rel_184_OptSpecialMethodInvocationBase->createContext());
CREATE_OP_CONTEXT(rel_252_SpecialMethodInvocation_Base_op_ctxt,rel_252_SpecialMethodInvocation_Base->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_252_SpecialMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_252_SpecialMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
if( !rel_184_OptSpecialMethodInvocationBase->contains(Tuple<RamDomain,2>({env1[0],env2[1]}),READ_OP_CONTEXT(rel_184_OptSpecialMethodInvocationBase_op_ctxt))) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env2[1])});
rel_186_new_OptSpecialMethodInvocationBase->insert(tuple,READ_OP_CONTEXT(rel_186_new_OptSpecialMethodInvocationBase_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_340_Tamiflex_ReflectionMap->empty()&&!rel_380_VirtualMethodInvocation->empty()&&!rel_485_isMethod->empty()) {
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_338_new_Tamiflex_Invoke_op_ctxt,rel_338_new_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt,rel_340_Tamiflex_ReflectionMap->createContext());
CREATE_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt,rel_380_VirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_485_isMethod_op_ctxt,rel_485_isMethod->createContext());
const Tuple<RamDomain,1> key({175});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,3> key({0,175,0});
auto range = rel_380_VirtualMethodInvocation->equalRange<1>(key,READ_OP_CONTEXT(rel_380_VirtualMethodInvocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[0]});
auto range = rel_340_Tamiflex_ReflectionMap->equalRange<1>(key,READ_OP_CONTEXT(rel_340_Tamiflex_ReflectionMap_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_485_isMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_485_isMethod_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({0,env4[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_336_Tamiflex_Invoke->contains(Tuple<RamDomain,3>({env5[0],env1[0],env2[0]}),READ_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env5[0]),(RamDomain)(env1[0]),(RamDomain)(env2[0])});
rel_338_new_Tamiflex_Invoke->insert(tuple,READ_OP_CONTEXT(rel_338_new_Tamiflex_Invoke_op_ctxt));
}
}
}
}
}
}
}
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( ((!rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env2[0],env0[0],env6[1],env0[1]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env6[1]),(RamDomain)(env0[1])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( ((!rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env2[0],env0[0],env6[1],env0[1]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env6[1]),(RamDomain)(env0[1])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( !rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env2[0],env0[0],env6[1],env0[1]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env6[1]),(RamDomain)(env0[1])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_337_delta_Tamiflex_Invoke->empty()&&!rel_94_ImmutableContextFromHContext->empty()&&!rel_372_VarPointsTo->empty()&&!rel_385_ActualParam->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_337_delta_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt,rel_95_delta_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_337_delta_Tamiflex_Invoke_op_ctxt,rel_337_delta_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt,rel_94_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[2]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,env0[0],env1[2]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
if( !rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env2[0],env2[1],env0[0],env1[2]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_94_ImmutableContextFromHContext->equalRange<0>(key,READ_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env0[0],env0[1],env4[1],env0[2]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) && (!rel_95_delta_ImmutableContextFromHContext->contains(Tuple<RamDomain,2>({env2[0],env4[1]}),READ_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env4[1]),(RamDomain)(env0[2])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_94_ImmutableContextFromHContext->empty()&&!rel_336_Tamiflex_Invoke->empty()&&!rel_385_ActualParam->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt,rel_95_delta_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt,rel_94_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[2]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,env0[0],env1[2]});
auto range = rel_373_delta_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_94_ImmutableContextFromHContext->equalRange<0>(key,READ_OP_CONTEXT(rel_94_ImmutableContextFromHContext_op_ctxt));
for(const auto& env4 : range) {
if( ((!rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env0[0],env0[1],env4[1],env0[2]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) && (!rel_95_delta_ImmutableContextFromHContext->contains(Tuple<RamDomain,2>({env2[0],env4[1]}),READ_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env4[1]),(RamDomain)(env0[2])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_95_delta_ImmutableContextFromHContext->empty()&&!rel_336_Tamiflex_Invoke->empty()&&!rel_372_VarPointsTo->empty()&&!rel_385_ActualParam->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt,rel_95_delta_ImmutableContextFromHContext->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_435_Method_Modifier->contains(Tuple<RamDomain,2>({7,env0[2]}),READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt))) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,env0[0],env1[2]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[2],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_95_delta_ImmutableContextFromHContext->equalRange<0>(key,READ_OP_CONTEXT(rel_95_delta_ImmutableContextFromHContext_op_ctxt));
for(const auto& env4 : range) {
if( !rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env0[0],env0[1],env4[1],env0[2]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env4[1]),(RamDomain)(env0[2])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_337_delta_Tamiflex_Invoke->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_337_delta_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_337_delta_Tamiflex_Invoke_op_ctxt,rel_337_delta_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({7,env0[2]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env2 : range) {
if( ((!rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env0[0],env0[1],env2[1],env0[2]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env2[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env2[1]),(RamDomain)(env0[2])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_336_Tamiflex_Invoke->empty()&&!rel_435_Method_Modifier->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt,rel_323_new_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt,rel_321_TamiflexCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt,rel_435_Method_Modifier->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({7,env0[2]});
auto range = rel_435_Method_Modifier->equalRange<0,1>(key,READ_OP_CONTEXT(rel_435_Method_Modifier_op_ctxt));
if(!range.empty()) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env2 : range) {
if( !rel_321_TamiflexCallGraphEdge->contains(Tuple<RamDomain,4>({env0[0],env0[1],env2[1],env0[2]}),READ_OP_CONTEXT(rel_321_TamiflexCallGraphEdge_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env2[1]),(RamDomain)(env0[2])});
rel_323_new_TamiflexCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_323_new_TamiflexCallGraphEdge_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_220_delta_ReachableContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt,rel_220_delta_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_326_new_TamiflexConstructorCallGraphEdge_op_ctxt,rel_326_new_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_324_TamiflexConstructorCallGraphEdge_op_ctxt,rel_324_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_220_delta_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_220_delta_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
if( !rel_98_delta_ImmutableHContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env5[1]}),READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt))) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( ((!rel_324_TamiflexConstructorCallGraphEdge->contains(Tuple<RamDomain,4>({env2[0],env0[0],env6[1],env0[1]}),READ_OP_CONTEXT(rel_324_TamiflexConstructorCallGraphEdge_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env6[1]),(RamDomain)(env0[1])});
rel_326_new_TamiflexConstructorCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_326_new_TamiflexConstructorCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_98_delta_ImmutableHContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt,rel_98_delta_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_326_new_TamiflexConstructorCallGraphEdge_op_ctxt,rel_326_new_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_324_TamiflexConstructorCallGraphEdge_op_ctxt,rel_324_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_98_delta_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_98_delta_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( ((!rel_324_TamiflexConstructorCallGraphEdge->contains(Tuple<RamDomain,4>({env2[0],env0[0],env6[1],env0[1]}),READ_OP_CONTEXT(rel_324_TamiflexConstructorCallGraphEdge_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env2[0],env6[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env6[1]),(RamDomain)(env0[1])});
rel_326_new_TamiflexConstructorCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_326_new_TamiflexConstructorCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_35_AssignReturnValue->empty()&&!rel_97_ImmutableHContextFromContext->empty()&&!rel_109_Instruction_Method->empty()&&!rel_219_ReachableContext->empty()&&!rel_335_Tamiflex_Constructor_NewInstance->empty()&&!rel_451_ThisVar->empty()) {
auto part = rel_335_Tamiflex_Constructor_NewInstance->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_326_new_TamiflexConstructorCallGraphEdge_op_ctxt,rel_326_new_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt,rel_35_AssignReturnValue->createContext());
CREATE_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt,rel_97_ImmutableHContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_324_TamiflexConstructorCallGraphEdge_op_ctxt,rel_324_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_335_Tamiflex_Constructor_NewInstance_op_ctxt,rel_335_Tamiflex_Constructor_NewInstance->createContext());
CREATE_OP_CONTEXT(rel_451_ThisVar_op_ctxt,rel_451_ThisVar->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_109_Instruction_Method->equalRange<0>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_35_AssignReturnValue->equalRange<0>(key,READ_OP_CONTEXT(rel_35_AssignReturnValue_op_ctxt));
for(const auto& env3 : range) {
const Tuple<RamDomain,2> key({env0[1],0});
auto range = rel_451_ThisVar->equalRange<0>(key,READ_OP_CONTEXT(rel_451_ThisVar_op_ctxt));
for(const auto& env4 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_97_ImmutableHContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_97_ImmutableHContextFromContext_op_ctxt));
for(const auto& env5 : range) {
const Tuple<RamDomain,2> key({env2[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env6 : range) {
if( !rel_324_TamiflexConstructorCallGraphEdge->contains(Tuple<RamDomain,4>({env2[0],env0[0],env6[1],env0[1]}),READ_OP_CONTEXT(rel_324_TamiflexConstructorCallGraphEdge_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0]),(RamDomain)(env6[1]),(RamDomain)(env0[1])});
rel_326_new_TamiflexConstructorCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_326_new_TamiflexConstructorCallGraphEdge_op_ctxt));
}
}
}
}
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_337_delta_Tamiflex_Invoke->empty()&&!rel_91_ImmutableContextFromContext->empty()&&!rel_385_ActualParam->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_337_delta_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_337_delta_Tamiflex_Invoke_op_ctxt,rel_337_delta_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_332_new_TamiflexInvocationFirstParam_op_ctxt,rel_332_new_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt,rel_91_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt,rel_330_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({1,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env0[2],0});
auto range = rel_422_FormalParam->equalRange<1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_91_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_91_ImmutableContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( ((!rel_330_TamiflexInvocationFirstParam->contains(Tuple<RamDomain,4>({env3[1],env2[2],env0[0],env1[2]}),READ_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt))) && (!rel_92_delta_ImmutableContextFromContext->contains(Tuple<RamDomain,2>({env0[0],env3[1]}),READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env2[2]),(RamDomain)(env0[0]),(RamDomain)(env1[2])});
rel_332_new_TamiflexInvocationFirstParam->insert(tuple,READ_OP_CONTEXT(rel_332_new_TamiflexInvocationFirstParam_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_92_delta_ImmutableContextFromContext->empty()&&!rel_336_Tamiflex_Invoke->empty()&&!rel_385_ActualParam->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_336_Tamiflex_Invoke->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt,rel_92_delta_ImmutableContextFromContext->createContext());
CREATE_OP_CONTEXT(rel_332_new_TamiflexInvocationFirstParam_op_ctxt,rel_332_new_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt,rel_330_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_336_Tamiflex_Invoke_op_ctxt,rel_336_Tamiflex_Invoke->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({1,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env0[2],0});
auto range = rel_422_FormalParam->equalRange<1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_92_delta_ImmutableContextFromContext->equalRange<0>(key,READ_OP_CONTEXT(rel_92_delta_ImmutableContextFromContext_op_ctxt));
for(const auto& env3 : range) {
if( !rel_330_TamiflexInvocationFirstParam->contains(Tuple<RamDomain,4>({env3[1],env2[2],env0[0],env1[2]}),READ_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env3[1]),(RamDomain)(env2[2]),(RamDomain)(env0[0]),(RamDomain)(env1[2])});
rel_332_new_TamiflexInvocationFirstParam->insert(tuple,READ_OP_CONTEXT(rel_332_new_TamiflexInvocationFirstParam_op_ctxt));
}
}
}
}
}
PARALLEL_END;
}
if (!rel_325_delta_TamiflexConstructorCallGraphEdge->empty()&&!rel_385_ActualParam->empty()&&!rel_422_FormalParam->empty()) {
auto part = rel_325_delta_TamiflexConstructorCallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_325_delta_TamiflexConstructorCallGraphEdge_op_ctxt,rel_325_delta_TamiflexConstructorCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_332_new_TamiflexInvocationFirstParam_op_ctxt,rel_332_new_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt,rel_330_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_385_ActualParam_op_ctxt,rel_385_ActualParam->createContext());
CREATE_OP_CONTEXT(rel_422_FormalParam_op_ctxt,rel_422_FormalParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,env0[1],0});
auto range = rel_385_ActualParam->equalRange<0,1>(key,READ_OP_CONTEXT(rel_385_ActualParam_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,3> key({0,env0[3],0});
auto range = rel_422_FormalParam->equalRange<1>(key,READ_OP_CONTEXT(rel_422_FormalParam_op_ctxt));
for(const auto& env2 : range) {
if( !rel_330_TamiflexInvocationFirstParam->contains(Tuple<RamDomain,4>({env0[2],env2[2],env0[0],env1[2]}),READ_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[2]),(RamDomain)(env2[2]),(RamDomain)(env0[0]),(RamDomain)(env1[2])});
rel_332_new_TamiflexInvocationFirstParam->insert(tuple,READ_OP_CONTEXT(rel_332_new_TamiflexInvocationFirstParam_op_ctxt));
}
}
}
}
PARALLEL_END;
}
SECTION_END
SECTION_START;
if (!rel_331_delta_TamiflexInvocationFirstParam->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_331_delta_TamiflexInvocationFirstParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_331_delta_TamiflexInvocationFirstParam_op_ctxt,rel_331_delta_TamiflexInvocationFirstParam->createContext());
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_329_new_TamiflexInvocationArgumentArrayValue_op_ctxt,rel_329_new_TamiflexInvocationArgumentArrayValue->createContext());
CREATE_OP_CONTEXT(rel_327_TamiflexInvocationArgumentArrayValue_op_ctxt,rel_327_TamiflexInvocationArgumentArrayValue->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_372_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( ((!rel_327_TamiflexInvocationArgumentArrayValue->contains(Tuple<RamDomain,4>({env0[0],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_327_TamiflexInvocationArgumentArrayValue_op_ctxt))) && (!rel_373_delta_VarPointsTo->contains(Tuple<RamDomain,4>({env1[0],env1[1],env0[2],env0[3]}),READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt))))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_329_new_TamiflexInvocationArgumentArrayValue->insert(tuple,READ_OP_CONTEXT(rel_329_new_TamiflexInvocationArgumentArrayValue_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_373_delta_VarPointsTo->empty()&&!rel_330_TamiflexInvocationFirstParam->empty()) {
auto part = rel_330_TamiflexInvocationFirstParam->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt,rel_373_delta_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_329_new_TamiflexInvocationArgumentArrayValue_op_ctxt,rel_329_new_TamiflexInvocationArgumentArrayValue->createContext());
CREATE_OP_CONTEXT(rel_327_TamiflexInvocationArgumentArrayValue_op_ctxt,rel_327_TamiflexInvocationArgumentArrayValue->createContext());
CREATE_OP_CONTEXT(rel_330_TamiflexInvocationFirstParam_op_ctxt,rel_330_TamiflexInvocationFirstParam->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,env0[2],env0[3]});
auto range = rel_373_delta_VarPointsTo->equalRange<2,3>(key,READ_OP_CONTEXT(rel_373_delta_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
if( !rel_327_TamiflexInvocationArgumentArrayValue->contains(Tuple<RamDomain,4>({env0[0],env0[1],env1[0],env1[1]}),READ_OP_CONTEXT(rel_327_TamiflexInvocationArgumentArrayValue_op_ctxt))) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env0[1]),(RamDomain)(env1[0]),(RamDomain)(env1[1])});
rel_329_new_TamiflexInvocationArgumentArrayValue->insert(tuple,READ_OP_CONTEXT(rel_329_new_TamiflexInvocationArgumentArrayValue_op_ctxt));
}
}
}
PARALLEL_END;
}
SECTION_END
SECTIONS_END;
if(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((rel_76_new_ForcedReachableAndroidContext->empty()) && (rel_218_new_ReachableApplicationObjectOfType->empty()))) && (rel_14_new_ApplicationObjectFlowingToLibrary->empty()))) && (rel_212_new_PublicOnMethodOfReachableListener->empty()))) && (rel_119_new_LibraryReachableAppListenerType->empty()))) && (rel_207_new_ProtectedOnMethodOfReachableListener->empty()))) && (rel_199_new_OverridingProtectedOnMethodOfReachableListener->empty()))) && (rel_79_new_FormalOfForcedReachableContext->empty()))) && (rel_17_new_ApplicationObjectFlowingToLibraryStaticType->empty()))) && (rel_104_new_InitializedClass->empty()))) && (rel_114_new_Instruction_Throws->empty()))) && (rel_354_new_ThrowPointsTo->empty()))) && (rel_247_new_RunningThread->empty()))) && (rel_224_new_ReachableCurrentThreadInvocation->empty()))) && (rel_468_new_isContext->empty()))) && (rel_473_new_isHContext->empty()))) && (rel_96_new_ImmutableContextFromHContext->empty()))) && (rel_99_new_ImmutableHContextFromContext->empty()))) && (rel_93_new_ImmutableContextFromContext->empty()))) && (rel_374_new_VarPointsTo->empty()))) && (rel_107_new_InstanceFieldPointsTo->empty()))) && (rel_255_new_StaticFieldPointsTo->empty()))) && (rel_21_new_ArrayIndexPointsTo->empty()))) && (rel_38_new_CallGraphEdge->empty()))) && (rel_215_new_Reachable->empty()))) && (rel_221_new_ReachableContext->empty()))) && (rel_179_new_OptInterproceduralAssign->empty()))) && (rel_190_new_OptStoreIntoArray->empty()))) && (rel_129_new_LoadHeapInstanceField->empty()))) && (rel_302_new_StoreHeapInstanceField->empty()))) && (rel_126_new_LoadHeapArrayIndex->empty()))) && (rel_299_new_StoreHeapArrayIndex->empty()))) && (rel_174_new_OptAssignCast->empty()))) && (rel_233_new_ReachableStoreStaticFieldFrom->empty()))) && (rel_183_new_OptLoadHeapArrayIndex->empty()))) && (rel_347_new_Temp1->empty()))) && (rel_350_new_Temp2->empty()))) && (rel_227_new_ReachableLoadArrayIndexBase->empty()))) && (rel_230_new_ReachableStoreArrayIndexBase->empty()))) && (rel_193_new_OptVirtualMethodInvocationBase->empty()))) && (rel_186_new_OptSpecialMethodInvocationBase->empty()))) && (rel_338_new_Tamiflex_Invoke->empty()))) && (rel_323_new_TamiflexCallGraphEdge->empty()))) && (rel_326_new_TamiflexConstructorCallGraphEdge->empty()))) && (rel_332_new_TamiflexInvocationFirstParam->empty()))) && (rel_329_new_TamiflexInvocationArgumentArrayValue->empty()))) break;
rel_74_ForcedReachableAndroidContext->insertAll(*rel_76_new_ForcedReachableAndroidContext);
{
auto rel_0 = rel_75_delta_ForcedReachableAndroidContext;
rel_75_delta_ForcedReachableAndroidContext = rel_76_new_ForcedReachableAndroidContext;
rel_76_new_ForcedReachableAndroidContext = rel_0;
}
rel_76_new_ForcedReachableAndroidContext->purge();
rel_216_ReachableApplicationObjectOfType->insertAll(*rel_218_new_ReachableApplicationObjectOfType);
{
auto rel_0 = rel_217_delta_ReachableApplicationObjectOfType;
rel_217_delta_ReachableApplicationObjectOfType = rel_218_new_ReachableApplicationObjectOfType;
rel_218_new_ReachableApplicationObjectOfType = rel_0;
}
rel_218_new_ReachableApplicationObjectOfType->purge();
rel_12_ApplicationObjectFlowingToLibrary->insertAll(*rel_14_new_ApplicationObjectFlowingToLibrary);
{
auto rel_0 = rel_13_delta_ApplicationObjectFlowingToLibrary;
rel_13_delta_ApplicationObjectFlowingToLibrary = rel_14_new_ApplicationObjectFlowingToLibrary;
rel_14_new_ApplicationObjectFlowingToLibrary = rel_0;
}
rel_14_new_ApplicationObjectFlowingToLibrary->purge();
rel_210_PublicOnMethodOfReachableListener->insertAll(*rel_212_new_PublicOnMethodOfReachableListener);
{
auto rel_0 = rel_211_delta_PublicOnMethodOfReachableListener;
rel_211_delta_PublicOnMethodOfReachableListener = rel_212_new_PublicOnMethodOfReachableListener;
rel_212_new_PublicOnMethodOfReachableListener = rel_0;
}
rel_212_new_PublicOnMethodOfReachableListener->purge();
rel_117_LibraryReachableAppListenerType->insertAll(*rel_119_new_LibraryReachableAppListenerType);
{
auto rel_0 = rel_118_delta_LibraryReachableAppListenerType;
rel_118_delta_LibraryReachableAppListenerType = rel_119_new_LibraryReachableAppListenerType;
rel_119_new_LibraryReachableAppListenerType = rel_0;
}
rel_119_new_LibraryReachableAppListenerType->purge();
rel_205_ProtectedOnMethodOfReachableListener->insertAll(*rel_207_new_ProtectedOnMethodOfReachableListener);
{
auto rel_0 = rel_206_delta_ProtectedOnMethodOfReachableListener;
rel_206_delta_ProtectedOnMethodOfReachableListener = rel_207_new_ProtectedOnMethodOfReachableListener;
rel_207_new_ProtectedOnMethodOfReachableListener = rel_0;
}
rel_207_new_ProtectedOnMethodOfReachableListener->purge();
rel_197_OverridingProtectedOnMethodOfReachableListener->insertAll(*rel_199_new_OverridingProtectedOnMethodOfReachableListener);
{
auto rel_0 = rel_198_delta_OverridingProtectedOnMethodOfReachableListener;
rel_198_delta_OverridingProtectedOnMethodOfReachableListener = rel_199_new_OverridingProtectedOnMethodOfReachableListener;
rel_199_new_OverridingProtectedOnMethodOfReachableListener = rel_0;
}
rel_199_new_OverridingProtectedOnMethodOfReachableListener->purge();
rel_77_FormalOfForcedReachableContext->insertAll(*rel_79_new_FormalOfForcedReachableContext);
{
auto rel_0 = rel_78_delta_FormalOfForcedReachableContext;
rel_78_delta_FormalOfForcedReachableContext = rel_79_new_FormalOfForcedReachableContext;
rel_79_new_FormalOfForcedReachableContext = rel_0;
}
rel_79_new_FormalOfForcedReachableContext->purge();
rel_15_ApplicationObjectFlowingToLibraryStaticType->insertAll(*rel_17_new_ApplicationObjectFlowingToLibraryStaticType);
{
auto rel_0 = rel_16_delta_ApplicationObjectFlowingToLibraryStaticType;
rel_16_delta_ApplicationObjectFlowingToLibraryStaticType = rel_17_new_ApplicationObjectFlowingToLibraryStaticType;
rel_17_new_ApplicationObjectFlowingToLibraryStaticType = rel_0;
}
rel_17_new_ApplicationObjectFlowingToLibraryStaticType->purge();
rel_102_InitializedClass->insertAll(*rel_104_new_InitializedClass);
{
auto rel_0 = rel_103_delta_InitializedClass;
rel_103_delta_InitializedClass = rel_104_new_InitializedClass;
rel_104_new_InitializedClass = rel_0;
}
rel_104_new_InitializedClass->purge();
rel_112_Instruction_Throws->insertAll(*rel_114_new_Instruction_Throws);
{
auto rel_0 = rel_113_delta_Instruction_Throws;
rel_113_delta_Instruction_Throws = rel_114_new_Instruction_Throws;
rel_114_new_Instruction_Throws = rel_0;
}
rel_114_new_Instruction_Throws->purge();
rel_352_ThrowPointsTo->insertAll(*rel_354_new_ThrowPointsTo);
{
auto rel_0 = rel_353_delta_ThrowPointsTo;
rel_353_delta_ThrowPointsTo = rel_354_new_ThrowPointsTo;
rel_354_new_ThrowPointsTo = rel_0;
}
rel_354_new_ThrowPointsTo->purge();
rel_245_RunningThread->insertAll(*rel_247_new_RunningThread);
{
auto rel_0 = rel_246_delta_RunningThread;
rel_246_delta_RunningThread = rel_247_new_RunningThread;
rel_247_new_RunningThread = rel_0;
}
rel_247_new_RunningThread->purge();
rel_222_ReachableCurrentThreadInvocation->insertAll(*rel_224_new_ReachableCurrentThreadInvocation);
{
auto rel_0 = rel_223_delta_ReachableCurrentThreadInvocation;
rel_223_delta_ReachableCurrentThreadInvocation = rel_224_new_ReachableCurrentThreadInvocation;
rel_224_new_ReachableCurrentThreadInvocation = rel_0;
}
rel_224_new_ReachableCurrentThreadInvocation->purge();
rel_466_isContext->insertAll(*rel_468_new_isContext);
{
auto rel_0 = rel_467_delta_isContext;
rel_467_delta_isContext = rel_468_new_isContext;
rel_468_new_isContext = rel_0;
}
rel_468_new_isContext->purge();
rel_471_isHContext->insertAll(*rel_473_new_isHContext);
{
auto rel_0 = rel_472_delta_isHContext;
rel_472_delta_isHContext = rel_473_new_isHContext;
rel_473_new_isHContext = rel_0;
}
rel_473_new_isHContext->purge();
rel_94_ImmutableContextFromHContext->insertAll(*rel_96_new_ImmutableContextFromHContext);
{
auto rel_0 = rel_95_delta_ImmutableContextFromHContext;
rel_95_delta_ImmutableContextFromHContext = rel_96_new_ImmutableContextFromHContext;
rel_96_new_ImmutableContextFromHContext = rel_0;
}
rel_96_new_ImmutableContextFromHContext->purge();
rel_97_ImmutableHContextFromContext->insertAll(*rel_99_new_ImmutableHContextFromContext);
{
auto rel_0 = rel_98_delta_ImmutableHContextFromContext;
rel_98_delta_ImmutableHContextFromContext = rel_99_new_ImmutableHContextFromContext;
rel_99_new_ImmutableHContextFromContext = rel_0;
}
rel_99_new_ImmutableHContextFromContext->purge();
rel_91_ImmutableContextFromContext->insertAll(*rel_93_new_ImmutableContextFromContext);
{
auto rel_0 = rel_92_delta_ImmutableContextFromContext;
rel_92_delta_ImmutableContextFromContext = rel_93_new_ImmutableContextFromContext;
rel_93_new_ImmutableContextFromContext = rel_0;
}
rel_93_new_ImmutableContextFromContext->purge();
rel_372_VarPointsTo->insertAll(*rel_374_new_VarPointsTo);
{
auto rel_0 = rel_373_delta_VarPointsTo;
rel_373_delta_VarPointsTo = rel_374_new_VarPointsTo;
rel_374_new_VarPointsTo = rel_0;
}
rel_374_new_VarPointsTo->purge();
rel_105_InstanceFieldPointsTo->insertAll(*rel_107_new_InstanceFieldPointsTo);
{
auto rel_0 = rel_106_delta_InstanceFieldPointsTo;
rel_106_delta_InstanceFieldPointsTo = rel_107_new_InstanceFieldPointsTo;
rel_107_new_InstanceFieldPointsTo = rel_0;
}
rel_107_new_InstanceFieldPointsTo->purge();
rel_253_StaticFieldPointsTo->insertAll(*rel_255_new_StaticFieldPointsTo);
{
auto rel_0 = rel_254_delta_StaticFieldPointsTo;
rel_254_delta_StaticFieldPointsTo = rel_255_new_StaticFieldPointsTo;
rel_255_new_StaticFieldPointsTo = rel_0;
}
rel_255_new_StaticFieldPointsTo->purge();
rel_19_ArrayIndexPointsTo->insertAll(*rel_21_new_ArrayIndexPointsTo);
{
auto rel_0 = rel_20_delta_ArrayIndexPointsTo;
rel_20_delta_ArrayIndexPointsTo = rel_21_new_ArrayIndexPointsTo;
rel_21_new_ArrayIndexPointsTo = rel_0;
}
rel_21_new_ArrayIndexPointsTo->purge();
rel_36_CallGraphEdge->insertAll(*rel_38_new_CallGraphEdge);
{
auto rel_0 = rel_37_delta_CallGraphEdge;
rel_37_delta_CallGraphEdge = rel_38_new_CallGraphEdge;
rel_38_new_CallGraphEdge = rel_0;
}
rel_38_new_CallGraphEdge->purge();
rel_213_Reachable->insertAll(*rel_215_new_Reachable);
{
auto rel_0 = rel_214_delta_Reachable;
rel_214_delta_Reachable = rel_215_new_Reachable;
rel_215_new_Reachable = rel_0;
}
rel_215_new_Reachable->purge();
rel_219_ReachableContext->insertAll(*rel_221_new_ReachableContext);
{
auto rel_0 = rel_220_delta_ReachableContext;
rel_220_delta_ReachableContext = rel_221_new_ReachableContext;
rel_221_new_ReachableContext = rel_0;
}
rel_221_new_ReachableContext->purge();
rel_177_OptInterproceduralAssign->insertAll(*rel_179_new_OptInterproceduralAssign);
{
auto rel_0 = rel_178_delta_OptInterproceduralAssign;
rel_178_delta_OptInterproceduralAssign = rel_179_new_OptInterproceduralAssign;
rel_179_new_OptInterproceduralAssign = rel_0;
}
rel_179_new_OptInterproceduralAssign->purge();
rel_188_OptStoreIntoArray->insertAll(*rel_190_new_OptStoreIntoArray);
{
auto rel_0 = rel_189_delta_OptStoreIntoArray;
rel_189_delta_OptStoreIntoArray = rel_190_new_OptStoreIntoArray;
rel_190_new_OptStoreIntoArray = rel_0;
}
rel_190_new_OptStoreIntoArray->purge();
rel_127_LoadHeapInstanceField->insertAll(*rel_129_new_LoadHeapInstanceField);
{
auto rel_0 = rel_128_delta_LoadHeapInstanceField;
rel_128_delta_LoadHeapInstanceField = rel_129_new_LoadHeapInstanceField;
rel_129_new_LoadHeapInstanceField = rel_0;
}
rel_129_new_LoadHeapInstanceField->purge();
rel_300_StoreHeapInstanceField->insertAll(*rel_302_new_StoreHeapInstanceField);
{
auto rel_0 = rel_301_delta_StoreHeapInstanceField;
rel_301_delta_StoreHeapInstanceField = rel_302_new_StoreHeapInstanceField;
rel_302_new_StoreHeapInstanceField = rel_0;
}
rel_302_new_StoreHeapInstanceField->purge();
rel_124_LoadHeapArrayIndex->insertAll(*rel_126_new_LoadHeapArrayIndex);
{
auto rel_0 = rel_125_delta_LoadHeapArrayIndex;
rel_125_delta_LoadHeapArrayIndex = rel_126_new_LoadHeapArrayIndex;
rel_126_new_LoadHeapArrayIndex = rel_0;
}
rel_126_new_LoadHeapArrayIndex->purge();
rel_297_StoreHeapArrayIndex->insertAll(*rel_299_new_StoreHeapArrayIndex);
{
auto rel_0 = rel_298_delta_StoreHeapArrayIndex;
rel_298_delta_StoreHeapArrayIndex = rel_299_new_StoreHeapArrayIndex;
rel_299_new_StoreHeapArrayIndex = rel_0;
}
rel_299_new_StoreHeapArrayIndex->purge();
rel_172_OptAssignCast->insertAll(*rel_174_new_OptAssignCast);
{
auto rel_0 = rel_173_delta_OptAssignCast;
rel_173_delta_OptAssignCast = rel_174_new_OptAssignCast;
rel_174_new_OptAssignCast = rel_0;
}
rel_174_new_OptAssignCast->purge();
rel_231_ReachableStoreStaticFieldFrom->insertAll(*rel_233_new_ReachableStoreStaticFieldFrom);
{
auto rel_0 = rel_232_delta_ReachableStoreStaticFieldFrom;
rel_232_delta_ReachableStoreStaticFieldFrom = rel_233_new_ReachableStoreStaticFieldFrom;
rel_233_new_ReachableStoreStaticFieldFrom = rel_0;
}
rel_233_new_ReachableStoreStaticFieldFrom->purge();
rel_181_OptLoadHeapArrayIndex->insertAll(*rel_183_new_OptLoadHeapArrayIndex);
{
auto rel_0 = rel_182_delta_OptLoadHeapArrayIndex;
rel_182_delta_OptLoadHeapArrayIndex = rel_183_new_OptLoadHeapArrayIndex;
rel_183_new_OptLoadHeapArrayIndex = rel_0;
}
rel_183_new_OptLoadHeapArrayIndex->purge();
rel_345_Temp1->insertAll(*rel_347_new_Temp1);
{
auto rel_0 = rel_346_delta_Temp1;
rel_346_delta_Temp1 = rel_347_new_Temp1;
rel_347_new_Temp1 = rel_0;
}
rel_347_new_Temp1->purge();
rel_348_Temp2->insertAll(*rel_350_new_Temp2);
{
auto rel_0 = rel_349_delta_Temp2;
rel_349_delta_Temp2 = rel_350_new_Temp2;
rel_350_new_Temp2 = rel_0;
}
rel_350_new_Temp2->purge();
rel_225_ReachableLoadArrayIndexBase->insertAll(*rel_227_new_ReachableLoadArrayIndexBase);
{
auto rel_0 = rel_226_delta_ReachableLoadArrayIndexBase;
rel_226_delta_ReachableLoadArrayIndexBase = rel_227_new_ReachableLoadArrayIndexBase;
rel_227_new_ReachableLoadArrayIndexBase = rel_0;
}
rel_227_new_ReachableLoadArrayIndexBase->purge();
rel_228_ReachableStoreArrayIndexBase->insertAll(*rel_230_new_ReachableStoreArrayIndexBase);
{
auto rel_0 = rel_229_delta_ReachableStoreArrayIndexBase;
rel_229_delta_ReachableStoreArrayIndexBase = rel_230_new_ReachableStoreArrayIndexBase;
rel_230_new_ReachableStoreArrayIndexBase = rel_0;
}
rel_230_new_ReachableStoreArrayIndexBase->purge();
rel_191_OptVirtualMethodInvocationBase->insertAll(*rel_193_new_OptVirtualMethodInvocationBase);
{
auto rel_0 = rel_192_delta_OptVirtualMethodInvocationBase;
rel_192_delta_OptVirtualMethodInvocationBase = rel_193_new_OptVirtualMethodInvocationBase;
rel_193_new_OptVirtualMethodInvocationBase = rel_0;
}
rel_193_new_OptVirtualMethodInvocationBase->purge();
rel_184_OptSpecialMethodInvocationBase->insertAll(*rel_186_new_OptSpecialMethodInvocationBase);
{
auto rel_0 = rel_185_delta_OptSpecialMethodInvocationBase;
rel_185_delta_OptSpecialMethodInvocationBase = rel_186_new_OptSpecialMethodInvocationBase;
rel_186_new_OptSpecialMethodInvocationBase = rel_0;
}
rel_186_new_OptSpecialMethodInvocationBase->purge();
rel_336_Tamiflex_Invoke->insertAll(*rel_338_new_Tamiflex_Invoke);
{
auto rel_0 = rel_337_delta_Tamiflex_Invoke;
rel_337_delta_Tamiflex_Invoke = rel_338_new_Tamiflex_Invoke;
rel_338_new_Tamiflex_Invoke = rel_0;
}
rel_338_new_Tamiflex_Invoke->purge();
rel_321_TamiflexCallGraphEdge->insertAll(*rel_323_new_TamiflexCallGraphEdge);
{
auto rel_0 = rel_322_delta_TamiflexCallGraphEdge;
rel_322_delta_TamiflexCallGraphEdge = rel_323_new_TamiflexCallGraphEdge;
rel_323_new_TamiflexCallGraphEdge = rel_0;
}
rel_323_new_TamiflexCallGraphEdge->purge();
rel_324_TamiflexConstructorCallGraphEdge->insertAll(*rel_326_new_TamiflexConstructorCallGraphEdge);
{
auto rel_0 = rel_325_delta_TamiflexConstructorCallGraphEdge;
rel_325_delta_TamiflexConstructorCallGraphEdge = rel_326_new_TamiflexConstructorCallGraphEdge;
rel_326_new_TamiflexConstructorCallGraphEdge = rel_0;
}
rel_326_new_TamiflexConstructorCallGraphEdge->purge();
rel_330_TamiflexInvocationFirstParam->insertAll(*rel_332_new_TamiflexInvocationFirstParam);
{
auto rel_0 = rel_331_delta_TamiflexInvocationFirstParam;
rel_331_delta_TamiflexInvocationFirstParam = rel_332_new_TamiflexInvocationFirstParam;
rel_332_new_TamiflexInvocationFirstParam = rel_0;
}
rel_332_new_TamiflexInvocationFirstParam->purge();
rel_327_TamiflexInvocationArgumentArrayValue->insertAll(*rel_329_new_TamiflexInvocationArgumentArrayValue);
{
auto rel_0 = rel_328_delta_TamiflexInvocationArgumentArrayValue;
rel_328_delta_TamiflexInvocationArgumentArrayValue = rel_329_new_TamiflexInvocationArgumentArrayValue;
rel_329_new_TamiflexInvocationArgumentArrayValue = rel_0;
}
rel_329_new_TamiflexInvocationArgumentArrayValue->purge();
}
rel_75_delta_ForcedReachableAndroidContext->purge();
rel_76_new_ForcedReachableAndroidContext->purge();
rel_217_delta_ReachableApplicationObjectOfType->purge();
rel_218_new_ReachableApplicationObjectOfType->purge();
rel_13_delta_ApplicationObjectFlowingToLibrary->purge();
rel_14_new_ApplicationObjectFlowingToLibrary->purge();
rel_211_delta_PublicOnMethodOfReachableListener->purge();
rel_212_new_PublicOnMethodOfReachableListener->purge();
rel_118_delta_LibraryReachableAppListenerType->purge();
rel_119_new_LibraryReachableAppListenerType->purge();
rel_206_delta_ProtectedOnMethodOfReachableListener->purge();
rel_207_new_ProtectedOnMethodOfReachableListener->purge();
rel_198_delta_OverridingProtectedOnMethodOfReachableListener->purge();
rel_199_new_OverridingProtectedOnMethodOfReachableListener->purge();
rel_78_delta_FormalOfForcedReachableContext->purge();
rel_79_new_FormalOfForcedReachableContext->purge();
rel_16_delta_ApplicationObjectFlowingToLibraryStaticType->purge();
rel_17_new_ApplicationObjectFlowingToLibraryStaticType->purge();
rel_103_delta_InitializedClass->purge();
rel_104_new_InitializedClass->purge();
rel_113_delta_Instruction_Throws->purge();
rel_114_new_Instruction_Throws->purge();
rel_353_delta_ThrowPointsTo->purge();
rel_354_new_ThrowPointsTo->purge();
rel_246_delta_RunningThread->purge();
rel_247_new_RunningThread->purge();
rel_223_delta_ReachableCurrentThreadInvocation->purge();
rel_224_new_ReachableCurrentThreadInvocation->purge();
rel_467_delta_isContext->purge();
rel_468_new_isContext->purge();
rel_472_delta_isHContext->purge();
rel_473_new_isHContext->purge();
rel_95_delta_ImmutableContextFromHContext->purge();
rel_96_new_ImmutableContextFromHContext->purge();
rel_98_delta_ImmutableHContextFromContext->purge();
rel_99_new_ImmutableHContextFromContext->purge();
rel_92_delta_ImmutableContextFromContext->purge();
rel_93_new_ImmutableContextFromContext->purge();
rel_373_delta_VarPointsTo->purge();
rel_374_new_VarPointsTo->purge();
rel_106_delta_InstanceFieldPointsTo->purge();
rel_107_new_InstanceFieldPointsTo->purge();
rel_254_delta_StaticFieldPointsTo->purge();
rel_255_new_StaticFieldPointsTo->purge();
rel_20_delta_ArrayIndexPointsTo->purge();
rel_21_new_ArrayIndexPointsTo->purge();
rel_37_delta_CallGraphEdge->purge();
rel_38_new_CallGraphEdge->purge();
rel_214_delta_Reachable->purge();
rel_215_new_Reachable->purge();
rel_220_delta_ReachableContext->purge();
rel_221_new_ReachableContext->purge();
rel_178_delta_OptInterproceduralAssign->purge();
rel_179_new_OptInterproceduralAssign->purge();
rel_189_delta_OptStoreIntoArray->purge();
rel_190_new_OptStoreIntoArray->purge();
rel_128_delta_LoadHeapInstanceField->purge();
rel_129_new_LoadHeapInstanceField->purge();
rel_301_delta_StoreHeapInstanceField->purge();
rel_302_new_StoreHeapInstanceField->purge();
rel_125_delta_LoadHeapArrayIndex->purge();
rel_126_new_LoadHeapArrayIndex->purge();
rel_298_delta_StoreHeapArrayIndex->purge();
rel_299_new_StoreHeapArrayIndex->purge();
rel_173_delta_OptAssignCast->purge();
rel_174_new_OptAssignCast->purge();
rel_232_delta_ReachableStoreStaticFieldFrom->purge();
rel_233_new_ReachableStoreStaticFieldFrom->purge();
rel_182_delta_OptLoadHeapArrayIndex->purge();
rel_183_new_OptLoadHeapArrayIndex->purge();
rel_346_delta_Temp1->purge();
rel_347_new_Temp1->purge();
rel_349_delta_Temp2->purge();
rel_350_new_Temp2->purge();
rel_226_delta_ReachableLoadArrayIndexBase->purge();
rel_227_new_ReachableLoadArrayIndexBase->purge();
rel_229_delta_ReachableStoreArrayIndexBase->purge();
rel_230_new_ReachableStoreArrayIndexBase->purge();
rel_192_delta_OptVirtualMethodInvocationBase->purge();
rel_193_new_OptVirtualMethodInvocationBase->purge();
rel_185_delta_OptSpecialMethodInvocationBase->purge();
rel_186_new_OptSpecialMethodInvocationBase->purge();
rel_337_delta_Tamiflex_Invoke->purge();
rel_338_new_Tamiflex_Invoke->purge();
rel_322_delta_TamiflexCallGraphEdge->purge();
rel_323_new_TamiflexCallGraphEdge->purge();
rel_325_delta_TamiflexConstructorCallGraphEdge->purge();
rel_326_new_TamiflexConstructorCallGraphEdge->purge();
rel_331_delta_TamiflexInvocationFirstParam->purge();
rel_332_new_TamiflexInvocationFirstParam->purge();
rel_328_delta_TamiflexInvocationArgumentArrayValue->purge();
rel_329_new_TamiflexInvocationArgumentArrayValue->purge();
if (!rel_11_ApplicationMethod->empty()&&!rel_19_ArrayIndexPointsTo->empty()&&!rel_32_AssignNormalHeapAllocation->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_260_Stats_Simple_Application_ArrayIndexPointsTo_op_ctxt,rel_260_Stats_Simple_Application_ArrayIndexPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_32_AssignNormalHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env1[0]});
auto range = rel_19_ArrayIndexPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env2[2]),(RamDomain)(env1[0])});
rel_260_Stats_Simple_Application_ArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_260_Stats_Simple_Application_ArrayIndexPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_280_Stats_Simple_InsensReachableApplicationMethod_op_ctxt,rel_280_Stats_Simple_InsensReachableApplicationMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_280_Stats_Simple_InsensReachableApplicationMethod->insert(tuple,READ_OP_CONTEXT(rel_280_Stats_Simple_InsensReachableApplicationMethod_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_109_Instruction_Method->empty()&&!rel_280_Stats_Simple_InsensReachableApplicationMethod->empty()&&!rel_500_isVirtualMethodInvocation_Insn->empty()) {
auto part = rel_280_Stats_Simple_InsensReachableApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt,rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_280_Stats_Simple_InsensReachableApplicationMethod_op_ctxt,rel_280_Stats_Simple_InsensReachableApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_500_isVirtualMethodInvocation_Insn->equalRange<0>(key,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_259_Stats_Simple_ApplicationConcreteMethod->empty()) {
auto part = rel_259_Stats_Simple_ApplicationConcreteMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_259_Stats_Simple_ApplicationConcreteMethod_op_ctxt,rel_259_Stats_Simple_ApplicationConcreteMethod->createContext());
CREATE_OP_CONTEXT(rel_280_Stats_Simple_InsensReachableApplicationMethod_op_ctxt,rel_280_Stats_Simple_InsensReachableApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_284_Stats_Simple_NonReachableApplicationConcreteMethod_op_ctxt,rel_284_Stats_Simple_NonReachableApplicationConcreteMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( !rel_280_Stats_Simple_InsensReachableApplicationMethod->contains(Tuple<RamDomain,1>({env0[0]}),READ_OP_CONTEXT(rel_280_Stats_Simple_InsensReachableApplicationMethod_op_ctxt))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_284_Stats_Simple_NonReachableApplicationConcreteMethod->insert(tuple,READ_OP_CONTEXT(rel_284_Stats_Simple_NonReachableApplicationConcreteMethod_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_372_VarPointsTo->empty()) {
auto part = rel_372_VarPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[3])});
rel_283_Stats_Simple_InsensVarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt));
}
PARALLEL_END;
}
if (!rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()) {
auto part = rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation_op_ctxt,rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt,rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env1 : range) {
if( rel_283_Stats_Simple_InsensVarPointsTo->equalRange<1>(Tuple<RamDomain,2>({0,env1[1]}),READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt)).empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_85_HeapAllocation_Null->empty()&&!rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->empty()&&!rel_283_Stats_Simple_InsensVarPointsTo->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()) {
auto part = rel_85_HeapAllocation_Null->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_267_Stats_Simple_Application_NullVirtualMethodInvocation_op_ctxt,rel_267_Stats_Simple_Application_NullVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt,rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_283_Stats_Simple_InsensVarPointsTo->equalRange<0>(key,READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<1>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env2[0])});
rel_267_Stats_Simple_Application_NullVirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_267_Stats_Simple_Application_NullVirtualMethodInvocation_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_283_Stats_Simple_InsensVarPointsTo->empty()) {
auto part = rel_283_Stats_Simple_InsensVarPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_275_Stats_Simple_AssignedVariable_op_ctxt,rel_275_Stats_Simple_AssignedVariable->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[1])});
rel_275_Stats_Simple_AssignedVariable->insert(tuple,READ_OP_CONTEXT(rel_275_Stats_Simple_AssignedVariable_op_ctxt));
}
PARALLEL_END;
}
if (!rel_22_AssignCast->empty()&&!rel_213_Reachable->empty()&&!rel_275_Stats_Simple_AssignedVariable->empty()) {
auto part = rel_275_Stats_Simple_AssignedVariable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_22_AssignCast_op_ctxt,rel_22_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_275_Stats_Simple_AssignedVariable_op_ctxt,rel_275_Stats_Simple_AssignedVariable->createContext());
CREATE_OP_CONTEXT(rel_289_Stats_Simple_ReachableCast_op_ctxt,rel_289_Stats_Simple_ReachableCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,env0[0],0,0});
auto range = rel_22_AssignCast->equalRange<1>(key,READ_OP_CONTEXT(rel_22_AssignCast_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[3]});
auto range = rel_213_Reachable->equalRange<0>(key,READ_OP_CONTEXT(rel_213_Reachable_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[3]),(RamDomain)(env1[0]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_289_Stats_Simple_ReachableCast->insert(tuple,READ_OP_CONTEXT(rel_289_Stats_Simple_ReachableCast_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_289_Stats_Simple_ReachableCast->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_270_Stats_Simple_Application_ReachableCast_op_ctxt,rel_270_Stats_Simple_Application_ReachableCast->createContext());
CREATE_OP_CONTEXT(rel_289_Stats_Simple_ReachableCast_op_ctxt,rel_289_Stats_Simple_ReachableCast->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({env0[0],0,0,0});
auto range = rel_289_Stats_Simple_ReachableCast->equalRange<0>(key,READ_OP_CONTEXT(rel_289_Stats_Simple_ReachableCast_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env1[3])});
rel_270_Stats_Simple_Application_ReachableCast->insert(tuple,READ_OP_CONTEXT(rel_270_Stats_Simple_Application_ReachableCast_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_270_Stats_Simple_Application_ReachableCast->empty()&&!rel_283_Stats_Simple_InsensVarPointsTo->empty()&&!rel_368_Value_Type->empty()) {
auto part = rel_270_Stats_Simple_Application_ReachableCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_269_Stats_Simple_Application_PotentiallyFailingCast_op_ctxt,rel_269_Stats_Simple_Application_PotentiallyFailingCast->createContext());
CREATE_OP_CONTEXT(rel_270_Stats_Simple_Application_ReachableCast_op_ctxt,rel_270_Stats_Simple_Application_ReachableCast->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[3]});
auto range = rel_283_Stats_Simple_InsensVarPointsTo->equalRange<1>(key,READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env2 : range) {
if( !rel_319_SupertypeOf->contains(Tuple<RamDomain,2>({env0[1],env2[1]}),READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[3]),(RamDomain)(env0[2])});
rel_269_Stats_Simple_Application_PotentiallyFailingCast->insert(tuple,READ_OP_CONTEXT(rel_269_Stats_Simple_Application_PotentiallyFailingCast_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_283_Stats_Simple_InsensVarPointsTo->empty()&&!rel_289_Stats_Simple_ReachableCast->empty()&&!rel_368_Value_Type->empty()) {
auto part = rel_289_Stats_Simple_ReachableCast->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_287_Stats_Simple_PotentiallyFailingCast_op_ctxt,rel_287_Stats_Simple_PotentiallyFailingCast->createContext());
CREATE_OP_CONTEXT(rel_289_Stats_Simple_ReachableCast_op_ctxt,rel_289_Stats_Simple_ReachableCast->createContext());
CREATE_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt,rel_319_SupertypeOf->createContext());
CREATE_OP_CONTEXT(rel_368_Value_Type_op_ctxt,rel_368_Value_Type->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[3]});
auto range = rel_283_Stats_Simple_InsensVarPointsTo->equalRange<1>(key,READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({env1[0],0});
auto range = rel_368_Value_Type->equalRange<0>(key,READ_OP_CONTEXT(rel_368_Value_Type_op_ctxt));
for(const auto& env2 : range) {
if( !rel_319_SupertypeOf->contains(Tuple<RamDomain,2>({env0[1],env2[1]}),READ_OP_CONTEXT(rel_319_SupertypeOf_op_ctxt))) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[3]),(RamDomain)(env0[2])});
rel_287_Stats_Simple_PotentiallyFailingCast->insert(tuple,READ_OP_CONTEXT(rel_287_Stats_Simple_PotentiallyFailingCast_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_219_ReachableContext->empty()&&!rel_275_Stats_Simple_AssignedVariable->empty()&&!rel_375_Var_DeclaringMethod->empty()) {
auto part = rel_275_Stats_Simple_AssignedVariable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_275_Stats_Simple_AssignedVariable_op_ctxt,rel_275_Stats_Simple_AssignedVariable->createContext());
CREATE_OP_CONTEXT(rel_281_Stats_Simple_InsensReachableVar_op_ctxt,rel_281_Stats_Simple_InsensReachableVar->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_375_Var_DeclaringMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_281_Stats_Simple_InsensReachableVar->insert(tuple,READ_OP_CONTEXT(rel_281_Stats_Simple_InsensReachableVar_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_219_ReachableContext->empty()&&!rel_275_Stats_Simple_AssignedVariable->empty()&&!rel_375_Var_DeclaringMethod->empty()) {
auto part = rel_275_Stats_Simple_AssignedVariable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_275_Stats_Simple_AssignedVariable_op_ctxt,rel_275_Stats_Simple_AssignedVariable->createContext());
CREATE_OP_CONTEXT(rel_290_Stats_Simple_ReachableVar_op_ctxt,rel_290_Stats_Simple_ReachableVar->createContext());
CREATE_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt,rel_375_Var_DeclaringMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_375_Var_DeclaringMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_375_Var_DeclaringMethod_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env2[0]),(RamDomain)(env0[0])});
rel_290_Stats_Simple_ReachableVar->insert(tuple,READ_OP_CONTEXT(rel_290_Stats_Simple_ReachableVar_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_19_ArrayIndexPointsTo->empty()&&!rel_32_AssignNormalHeapAllocation->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo_op_ctxt,rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_32_AssignNormalHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,4> key({0,0,0,env1[0]});
auto range = rel_19_ArrayIndexPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env2[1]),(RamDomain)(env1[0])});
rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_32_AssignNormalHeapAllocation->empty()&&!rel_105_InstanceFieldPointsTo->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo_op_ctxt,rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_32_AssignNormalHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,5> key({0,0,0,0,env1[0]});
auto range = rel_105_InstanceFieldPointsTo->equalRange<4>(key,READ_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,3> tuple({(RamDomain)(env2[1]),(RamDomain)(env2[2]),(RamDomain)(env1[0])});
rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_18_ApplicationVar->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_18_ApplicationVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_18_ApplicationVar_op_ctxt,rel_18_ApplicationVar->createContext());
CREATE_OP_CONTEXT(rel_265_Stats_Simple_Application_InsensVarPointsTo_op_ctxt,rel_265_Stats_Simple_Application_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[1]),(RamDomain)(env0[0])});
rel_265_Stats_Simple_Application_InsensVarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_265_Stats_Simple_Application_InsensVarPointsTo_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_32_AssignNormalHeapAllocation->empty()&&!rel_105_InstanceFieldPointsTo->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt,rel_32_AssignNormalHeapAllocation->createContext());
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_266_Stats_Simple_Application_InstanceFieldPointsTo_op_ctxt,rel_266_Stats_Simple_Application_InstanceFieldPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,3> key({0,0,env0[0]});
auto range = rel_32_AssignNormalHeapAllocation->equalRange<2>(key,READ_OP_CONTEXT(rel_32_AssignNormalHeapAllocation_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,5> key({0,0,0,0,env1[0]});
auto range = rel_105_InstanceFieldPointsTo->equalRange<4>(key,READ_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt));
for(const auto& env2 : range) {
Tuple<RamDomain,5> tuple({(RamDomain)(env2[0]),(RamDomain)(env2[1]),(RamDomain)(env2[2]),(RamDomain)(env2[3]),(RamDomain)(env1[0])});
rel_266_Stats_Simple_Application_InstanceFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_266_Stats_Simple_Application_InstanceFieldPointsTo_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_36_CallGraphEdge->empty()) {
auto part = rel_36_CallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_278_Stats_Simple_InsensCallGraphEdge_op_ctxt,rel_278_Stats_Simple_InsensCallGraphEdge->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[3])});
rel_278_Stats_Simple_InsensCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_278_Stats_Simple_InsensCallGraphEdge_op_ctxt));
}
PARALLEL_END;
}
if (!rel_109_Instruction_Method->empty()&&!rel_213_Reachable->empty()&&!rel_500_isVirtualMethodInvocation_Insn->empty()) {
auto part = rel_213_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt,rel_109_Instruction_Method->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt,rel_291_Stats_Simple_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_109_Instruction_Method->equalRange<1>(key,READ_OP_CONTEXT(rel_109_Instruction_Method_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,1> key({env1[0]});
auto range = rel_500_isVirtualMethodInvocation_Insn->equalRange<0>(key,READ_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env1[0])});
rel_291_Stats_Simple_ReachableVirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_278_Stats_Simple_InsensCallGraphEdge->empty()&&!rel_291_Stats_Simple_ReachableVirtualMethodInvocation->empty()) {
auto part = rel_291_Stats_Simple_ReachableVirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_278_Stats_Simple_InsensCallGraphEdge_op_ctxt,rel_278_Stats_Simple_InsensCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt,rel_291_Stats_Simple_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_292_Stats_Simple_VirtualCallGraphEdge_op_ctxt,rel_292_Stats_Simple_VirtualCallGraphEdge->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_278_Stats_Simple_InsensCallGraphEdge->equalRange<0>(key,READ_OP_CONTEXT(rel_278_Stats_Simple_InsensCallGraphEdge_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[1])});
rel_292_Stats_Simple_VirtualCallGraphEdge->insert(tuple,READ_OP_CONTEXT(rel_292_Stats_Simple_VirtualCallGraphEdge_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_292_Stats_Simple_VirtualCallGraphEdge->empty()) {
auto part = rel_292_Stats_Simple_VirtualCallGraphEdge->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_292_Stats_Simple_VirtualCallGraphEdge_op_ctxt,rel_292_Stats_Simple_VirtualCallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_293_Stats_Simple_VirtualTargets_op_ctxt,rel_293_Stats_Simple_VirtualTargets->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
ram::Tuple<RamDomain,2> env1;
RamDomain res = 0;
const ram::Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_292_Stats_Simple_VirtualCallGraphEdge->equalRange<0>(key,READ_OP_CONTEXT(rel_292_Stats_Simple_VirtualCallGraphEdge_op_ctxt));
for(const auto& cur : range) {
++res
;}
env1[0] = res;
{
Tuple<RamDomain,2> tuple({(RamDomain)(env0[0]),(RamDomain)(env1[0])});
rel_293_Stats_Simple_VirtualTargets->insert(tuple,READ_OP_CONTEXT(rel_293_Stats_Simple_VirtualTargets_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_293_Stats_Simple_VirtualTargets->empty()) {
auto part = rel_293_Stats_Simple_VirtualTargets->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_286_Stats_Simple_PolymorphicCallSite_op_ctxt,rel_286_Stats_Simple_PolymorphicCallSite->createContext());
CREATE_OP_CONTEXT(rel_293_Stats_Simple_VirtualTargets_op_ctxt,rel_293_Stats_Simple_VirtualTargets->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
if( ((env0[1]) > (1))) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_286_Stats_Simple_PolymorphicCallSite->insert(tuple,READ_OP_CONTEXT(rel_286_Stats_Simple_PolymorphicCallSite_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->empty()&&!rel_286_Stats_Simple_PolymorphicCallSite->empty()) {
auto part = rel_286_Stats_Simple_PolymorphicCallSite->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_268_Stats_Simple_Application_PolymorphicCallSite_op_ctxt,rel_268_Stats_Simple_Application_PolymorphicCallSite->createContext());
CREATE_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt,rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_286_Stats_Simple_PolymorphicCallSite_op_ctxt,rel_286_Stats_Simple_PolymorphicCallSite->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_268_Stats_Simple_Application_PolymorphicCallSite->insert(tuple,READ_OP_CONTEXT(rel_268_Stats_Simple_Application_PolymorphicCallSite_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_291_Stats_Simple_ReachableVirtualMethodInvocation->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()) {
auto part = rel_291_Stats_Simple_ReachableVirtualMethodInvocation->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_276_Stats_Simple_EmptyVirtualMethodInvocation_op_ctxt,rel_276_Stats_Simple_EmptyVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt,rel_291_Stats_Simple_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<0>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env1 : range) {
if( rel_283_Stats_Simple_InsensVarPointsTo->equalRange<1>(Tuple<RamDomain,2>({0,env1[1]}),READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt)).empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_276_Stats_Simple_EmptyVirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_276_Stats_Simple_EmptyVirtualMethodInvocation_op_ctxt));
}
}
}
PARALLEL_END;
}
if (!rel_85_HeapAllocation_Null->empty()&&!rel_283_Stats_Simple_InsensVarPointsTo->empty()&&!rel_291_Stats_Simple_ReachableVirtualMethodInvocation->empty()&&!rel_381_VirtualMethodInvocation_Base->empty()) {
auto part = rel_85_HeapAllocation_Null->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_85_HeapAllocation_Null_op_ctxt,rel_85_HeapAllocation_Null->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_285_Stats_Simple_NullVirtualMethodInvocation_op_ctxt,rel_285_Stats_Simple_NullVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt,rel_291_Stats_Simple_ReachableVirtualMethodInvocation->createContext());
CREATE_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt,rel_381_VirtualMethodInvocation_Base->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({env0[0],0});
auto range = rel_283_Stats_Simple_InsensVarPointsTo->equalRange<0>(key,READ_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt));
for(const auto& env1 : range) {
const Tuple<RamDomain,2> key({0,env1[1]});
auto range = rel_381_VirtualMethodInvocation_Base->equalRange<1>(key,READ_OP_CONTEXT(rel_381_VirtualMethodInvocation_Base_op_ctxt));
for(const auto& env2 : range) {
const Tuple<RamDomain,1> key({env2[0]});
auto range = rel_291_Stats_Simple_ReachableVirtualMethodInvocation->equalRange<0>(key,READ_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env2[0])});
rel_285_Stats_Simple_NullVirtualMethodInvocation->insert(tuple,READ_OP_CONTEXT(rel_285_Stats_Simple_NullVirtualMethodInvocation_op_ctxt));
}
}
}
}
PARALLEL_END;
}
if (!rel_11_ApplicationMethod->empty()&&!rel_213_Reachable->empty()) {
auto part = rel_213_Reachable->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_271_Stats_Simple_Application_ReachableMethod_op_ctxt,rel_271_Stats_Simple_Application_ReachableMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,1> key({env0[0]});
auto range = rel_11_ApplicationMethod->equalRange<0>(key,READ_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt));
if(!range.empty()) {
Tuple<RamDomain,1> tuple({(RamDomain)(env0[0])});
rel_271_Stats_Simple_Application_ReachableMethod->insert(tuple,READ_OP_CONTEXT(rel_271_Stats_Simple_Application_ReachableMethod_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_18_ApplicationVar->empty()&&!rel_372_VarPointsTo->empty()) {
auto part = rel_18_ApplicationVar->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_18_ApplicationVar_op_ctxt,rel_18_ApplicationVar->createContext());
CREATE_OP_CONTEXT(rel_273_Stats_Simple_Application_VarPointsTo_op_ctxt,rel_273_Stats_Simple_Application_VarPointsTo->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,4> key({0,0,0,env0[0]});
auto range = rel_372_VarPointsTo->equalRange<3>(key,READ_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,4> tuple({(RamDomain)(env1[0]),(RamDomain)(env1[1]),(RamDomain)(env1[2]),(RamDomain)(env0[0])});
rel_273_Stats_Simple_Application_VarPointsTo->insert(tuple,READ_OP_CONTEXT(rel_273_Stats_Simple_Application_VarPointsTo_op_ctxt));
}
}
PARALLEL_END;
}
if (!rel_19_ArrayIndexPointsTo->empty()) {
auto part = rel_19_ArrayIndexPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_277_Stats_Simple_InsensArrayIndexPointsTo_op_ctxt,rel_277_Stats_Simple_InsensArrayIndexPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[3])});
rel_277_Stats_Simple_InsensArrayIndexPointsTo->insert(tuple,READ_OP_CONTEXT(rel_277_Stats_Simple_InsensArrayIndexPointsTo_op_ctxt));
}
PARALLEL_END;
}
if (!rel_105_InstanceFieldPointsTo->empty()) {
auto part = rel_105_InstanceFieldPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_279_Stats_Simple_InsensInstanceFieldPointsTo_op_ctxt,rel_279_Stats_Simple_InsensInstanceFieldPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,3> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[2]),(RamDomain)(env0[4])});
rel_279_Stats_Simple_InsensInstanceFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_279_Stats_Simple_InsensInstanceFieldPointsTo_op_ctxt));
}
PARALLEL_END;
}
if (!rel_253_StaticFieldPointsTo->empty()) {
auto part = rel_253_StaticFieldPointsTo->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_282_Stats_Simple_InsensStaticFieldPointsTo_op_ctxt,rel_282_Stats_Simple_InsensStaticFieldPointsTo->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
Tuple<RamDomain,2> tuple({(RamDomain)(env0[1]),(RamDomain)(env0[2])});
rel_282_Stats_Simple_InsensStaticFieldPointsTo->insert(tuple,READ_OP_CONTEXT(rel_282_Stats_Simple_InsensStaticFieldPointsTo_op_ctxt));
}
PARALLEL_END;
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_283_Stats_Simple_InsensVarPointsTo_op_ctxt,rel_283_Stats_Simple_InsensVarPointsTo->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_283_Stats_Simple_InsensVarPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(177),(RamDomain)(178),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_372_VarPointsTo_op_ctxt,rel_372_VarPointsTo->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_372_VarPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(179),(RamDomain)(180),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_265_Stats_Simple_Application_InsensVarPointsTo_op_ctxt,rel_265_Stats_Simple_Application_InsensVarPointsTo->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_265_Stats_Simple_Application_InsensVarPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(181),(RamDomain)(182),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_273_Stats_Simple_Application_VarPointsTo_op_ctxt,rel_273_Stats_Simple_Application_VarPointsTo->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_273_Stats_Simple_Application_VarPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(183),(RamDomain)(184),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_281_Stats_Simple_InsensReachableVar_op_ctxt,rel_281_Stats_Simple_InsensReachableVar->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_281_Stats_Simple_InsensReachableVar->size();
Tuple<RamDomain,3> tuple({(RamDomain)(185),(RamDomain)(186),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_290_Stats_Simple_ReachableVar_op_ctxt,rel_290_Stats_Simple_ReachableVar->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_290_Stats_Simple_ReachableVar->size();
Tuple<RamDomain,3> tuple({(RamDomain)(187),(RamDomain)(188),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_277_Stats_Simple_InsensArrayIndexPointsTo_op_ctxt,rel_277_Stats_Simple_InsensArrayIndexPointsTo->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_277_Stats_Simple_InsensArrayIndexPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(189),(RamDomain)(190),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_19_ArrayIndexPointsTo_op_ctxt,rel_19_ArrayIndexPointsTo->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_19_ArrayIndexPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(191),(RamDomain)(192),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo_op_ctxt,rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(193),(RamDomain)(194),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_260_Stats_Simple_Application_ArrayIndexPointsTo_op_ctxt,rel_260_Stats_Simple_Application_ArrayIndexPointsTo->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_260_Stats_Simple_Application_ArrayIndexPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(195),(RamDomain)(196),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_279_Stats_Simple_InsensInstanceFieldPointsTo_op_ctxt,rel_279_Stats_Simple_InsensInstanceFieldPointsTo->createContext());
ram::Tuple<RamDomain,3> env0;
env0[0] = rel_279_Stats_Simple_InsensInstanceFieldPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(197),(RamDomain)(198),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_105_InstanceFieldPointsTo_op_ctxt,rel_105_InstanceFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,5> env0;
env0[0] = rel_105_InstanceFieldPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(199),(RamDomain)(200),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_282_Stats_Simple_InsensStaticFieldPointsTo_op_ctxt,rel_282_Stats_Simple_InsensStaticFieldPointsTo->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_282_Stats_Simple_InsensStaticFieldPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(201),(RamDomain)(202),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_253_StaticFieldPointsTo_op_ctxt,rel_253_StaticFieldPointsTo->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,3> env0;
env0[0] = rel_253_StaticFieldPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(203),(RamDomain)(204),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo_op_ctxt,rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo->createContext());
ram::Tuple<RamDomain,3> env0;
env0[0] = rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(205),(RamDomain)(206),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_266_Stats_Simple_Application_InstanceFieldPointsTo_op_ctxt,rel_266_Stats_Simple_Application_InstanceFieldPointsTo->createContext());
ram::Tuple<RamDomain,5> env0;
env0[0] = rel_266_Stats_Simple_Application_InstanceFieldPointsTo->size();
Tuple<RamDomain,3> tuple({(RamDomain)(207),(RamDomain)(208),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_278_Stats_Simple_InsensCallGraphEdge_op_ctxt,rel_278_Stats_Simple_InsensCallGraphEdge->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_278_Stats_Simple_InsensCallGraphEdge->size();
Tuple<RamDomain,3> tuple({(RamDomain)(209),(RamDomain)(210),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_36_CallGraphEdge_op_ctxt,rel_36_CallGraphEdge->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_36_CallGraphEdge->size();
Tuple<RamDomain,3> tuple({(RamDomain)(211),(RamDomain)(212),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_284_Stats_Simple_NonReachableApplicationConcreteMethod_op_ctxt,rel_284_Stats_Simple_NonReachableApplicationConcreteMethod->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_284_Stats_Simple_NonReachableApplicationConcreteMethod->size();
Tuple<RamDomain,3> tuple({(RamDomain)(213),(RamDomain)(214),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_213_Reachable_op_ctxt,rel_213_Reachable->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_213_Reachable->size();
Tuple<RamDomain,3> tuple({(RamDomain)(215),(RamDomain)(216),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,2> env0;
env0[0] = rel_219_ReachableContext->size();
Tuple<RamDomain,3> tuple({(RamDomain)(217),(RamDomain)(218),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_500_isVirtualMethodInvocation_Insn_op_ctxt,rel_500_isVirtualMethodInvocation_Insn->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_500_isVirtualMethodInvocation_Insn->size();
Tuple<RamDomain,3> tuple({(RamDomain)(219),(RamDomain)(220),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_291_Stats_Simple_ReachableVirtualMethodInvocation_op_ctxt,rel_291_Stats_Simple_ReachableVirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_291_Stats_Simple_ReachableVirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(221),(RamDomain)(222),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_286_Stats_Simple_PolymorphicCallSite_op_ctxt,rel_286_Stats_Simple_PolymorphicCallSite->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_286_Stats_Simple_PolymorphicCallSite->size();
Tuple<RamDomain,3> tuple({(RamDomain)(223),(RamDomain)(224),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_285_Stats_Simple_NullVirtualMethodInvocation_op_ctxt,rel_285_Stats_Simple_NullVirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_285_Stats_Simple_NullVirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(225),(RamDomain)(226),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_276_Stats_Simple_EmptyVirtualMethodInvocation_op_ctxt,rel_276_Stats_Simple_EmptyVirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_276_Stats_Simple_EmptyVirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(227),(RamDomain)(228),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_274_Stats_Simple_Application_VirtualMethodInvocation_op_ctxt,rel_274_Stats_Simple_Application_VirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_274_Stats_Simple_Application_VirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(229),(RamDomain)(230),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation_op_ctxt,rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(231),(RamDomain)(232),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_268_Stats_Simple_Application_PolymorphicCallSite_op_ctxt,rel_268_Stats_Simple_Application_PolymorphicCallSite->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_268_Stats_Simple_Application_PolymorphicCallSite->size();
Tuple<RamDomain,3> tuple({(RamDomain)(233),(RamDomain)(234),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_267_Stats_Simple_Application_NullVirtualMethodInvocation_op_ctxt,rel_267_Stats_Simple_Application_NullVirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_267_Stats_Simple_Application_NullVirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(235),(RamDomain)(236),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation_op_ctxt,rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation->size();
Tuple<RamDomain,3> tuple({(RamDomain)(237),(RamDomain)(238),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_22_AssignCast_op_ctxt,rel_22_AssignCast->createContext());
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_22_AssignCast->size();
Tuple<RamDomain,3> tuple({(RamDomain)(239),(RamDomain)(240),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_289_Stats_Simple_ReachableCast_op_ctxt,rel_289_Stats_Simple_ReachableCast->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_289_Stats_Simple_ReachableCast->size();
Tuple<RamDomain,3> tuple({(RamDomain)(241),(RamDomain)(242),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_287_Stats_Simple_PotentiallyFailingCast_op_ctxt,rel_287_Stats_Simple_PotentiallyFailingCast->createContext());
ram::Tuple<RamDomain,3> env0;
env0[0] = rel_287_Stats_Simple_PotentiallyFailingCast->size();
Tuple<RamDomain,3> tuple({(RamDomain)(243),(RamDomain)(244),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_261_Stats_Simple_Application_Cast_op_ctxt,rel_261_Stats_Simple_Application_Cast->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_261_Stats_Simple_Application_Cast->size();
Tuple<RamDomain,3> tuple({(RamDomain)(245),(RamDomain)(246),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_270_Stats_Simple_Application_ReachableCast_op_ctxt,rel_270_Stats_Simple_Application_ReachableCast->createContext());
ram::Tuple<RamDomain,4> env0;
env0[0] = rel_270_Stats_Simple_Application_ReachableCast->size();
Tuple<RamDomain,3> tuple({(RamDomain)(247),(RamDomain)(248),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_269_Stats_Simple_Application_PotentiallyFailingCast_op_ctxt,rel_269_Stats_Simple_Application_PotentiallyFailingCast->createContext());
ram::Tuple<RamDomain,3> env0;
env0[0] = rel_269_Stats_Simple_Application_PotentiallyFailingCast->size();
Tuple<RamDomain,3> tuple({(RamDomain)(249),(RamDomain)(250),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
{
CREATE_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt,rel_258_Stats_Metrics->createContext());
CREATE_OP_CONTEXT(rel_271_Stats_Simple_Application_ReachableMethod_op_ctxt,rel_271_Stats_Simple_Application_ReachableMethod->createContext());
ram::Tuple<RamDomain,1> env0;
env0[0] = rel_271_Stats_Simple_Application_ReachableMethod->size();
Tuple<RamDomain,3> tuple({(RamDomain)(251),(RamDomain)(252),(RamDomain)(env0[0])});
rel_258_Stats_Metrics->insert(tuple,READ_OP_CONTEXT(rel_258_Stats_Metrics_op_ctxt));
}
if (!rel_11_ApplicationMethod->empty()&&!rel_219_ReachableContext->empty()) {
auto part = rel_11_ApplicationMethod->partition();
PARALLEL_START;
CREATE_OP_CONTEXT(rel_11_ApplicationMethod_op_ctxt,rel_11_ApplicationMethod->createContext());
CREATE_OP_CONTEXT(rel_219_ReachableContext_op_ctxt,rel_219_ReachableContext->createContext());
CREATE_OP_CONTEXT(rel_288_Stats_Simple_ReachableApplicationMethod_op_ctxt,rel_288_Stats_Simple_ReachableApplicationMethod->createContext());
pfor(auto it = part.begin(); it<part.end(); ++it) 
for(const auto& env0 : *it) {
const Tuple<RamDomain,2> key({0,env0[0]});
auto range = rel_219_ReachableContext->equalRange<1>(key,READ_OP_CONTEXT(rel_219_ReachableContext_op_ctxt));
for(const auto& env1 : range) {
Tuple<RamDomain,2> tuple({(RamDomain)(env1[0]),(RamDomain)(env0[0])});
rel_288_Stats_Simple_ReachableApplicationMethod->insert(tuple,READ_OP_CONTEXT(rel_288_Stats_Simple_ReachableApplicationMethod_op_ctxt));
}
}
PARALLEL_END;
}
}
public:
void printAll(std::string dirname) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ApplicationMethod.csv"},{"name","ApplicationMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_11_ApplicationMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./CallGraphEdge.csv"},{"name","CallGraphEdge"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_36_CallGraphEdge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./OptVirtualMethodInvocationBase.csv"},{"name","OptVirtualMethodInvocationBase"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_191_OptVirtualMethodInvocationBase);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Reachable.csv"},{"name","Reachable"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_213_Reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Metrics.csv"},{"name","Stats_Metrics"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 0}), symTable, ioDirectives)->writeAll(*rel_258_Stats_Metrics);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_ApplicationConcreteMethod.csv"},{"name","Stats_Simple_ApplicationConcreteMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_259_Stats_Simple_ApplicationConcreteMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_ArrayIndexPointsTo.csv"},{"name","Stats_Simple_Application_ArrayIndexPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_260_Stats_Simple_Application_ArrayIndexPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_Cast.csv"},{"name","Stats_Simple_Application_Cast"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_261_Stats_Simple_Application_Cast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_EmptyVirtualMethodInvocation.csv"},{"name","Stats_Simple_Application_EmptyVirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_InsensArrayIndexPointsTo.csv"},{"name","Stats_Simple_Application_InsensArrayIndexPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_InsensInstanceFieldPointsTo.csv"},{"name","Stats_Simple_Application_InsensInstanceFieldPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_InsensVarPointsTo.csv"},{"name","Stats_Simple_Application_InsensVarPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_265_Stats_Simple_Application_InsensVarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_InstanceFieldPointsTo.csv"},{"name","Stats_Simple_Application_InstanceFieldPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_266_Stats_Simple_Application_InstanceFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_NullVirtualMethodInvocation.csv"},{"name","Stats_Simple_Application_NullVirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_267_Stats_Simple_Application_NullVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_PolymorphicCallSite.csv"},{"name","Stats_Simple_Application_PolymorphicCallSite"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_268_Stats_Simple_Application_PolymorphicCallSite);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_PotentiallyFailingCast.csv"},{"name","Stats_Simple_Application_PotentiallyFailingCast"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_269_Stats_Simple_Application_PotentiallyFailingCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_ReachableCast.csv"},{"name","Stats_Simple_Application_ReachableCast"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_270_Stats_Simple_Application_ReachableCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_ReachableMethod.csv"},{"name","Stats_Simple_Application_ReachableMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_271_Stats_Simple_Application_ReachableMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_ReachableVirtualMethodInvocation.csv"},{"name","Stats_Simple_Application_ReachableVirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_VarPointsTo.csv"},{"name","Stats_Simple_Application_VarPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_273_Stats_Simple_Application_VarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_Application_VirtualMethodInvocation.csv"},{"name","Stats_Simple_Application_VirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_274_Stats_Simple_Application_VirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_AssignedVariable.csv"},{"name","Stats_Simple_AssignedVariable"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_275_Stats_Simple_AssignedVariable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_EmptyVirtualMethodInvocation.csv"},{"name","Stats_Simple_EmptyVirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_276_Stats_Simple_EmptyVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensArrayIndexPointsTo.csv"},{"name","Stats_Simple_InsensArrayIndexPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_277_Stats_Simple_InsensArrayIndexPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensCallGraphEdge.csv"},{"name","Stats_Simple_InsensCallGraphEdge"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_278_Stats_Simple_InsensCallGraphEdge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensInstanceFieldPointsTo.csv"},{"name","Stats_Simple_InsensInstanceFieldPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_279_Stats_Simple_InsensInstanceFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensReachableApplicationMethod.csv"},{"name","Stats_Simple_InsensReachableApplicationMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_280_Stats_Simple_InsensReachableApplicationMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensReachableVar.csv"},{"name","Stats_Simple_InsensReachableVar"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_281_Stats_Simple_InsensReachableVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensStaticFieldPointsTo.csv"},{"name","Stats_Simple_InsensStaticFieldPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_282_Stats_Simple_InsensStaticFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_InsensVarPointsTo.csv"},{"name","Stats_Simple_InsensVarPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_283_Stats_Simple_InsensVarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_NonReachableApplicationConcreteMethod.csv"},{"name","Stats_Simple_NonReachableApplicationConcreteMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_284_Stats_Simple_NonReachableApplicationConcreteMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_NullVirtualMethodInvocation.csv"},{"name","Stats_Simple_NullVirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_285_Stats_Simple_NullVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_PolymorphicCallSite.csv"},{"name","Stats_Simple_PolymorphicCallSite"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_286_Stats_Simple_PolymorphicCallSite);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_PotentiallyFailingCast.csv"},{"name","Stats_Simple_PotentiallyFailingCast"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_287_Stats_Simple_PotentiallyFailingCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_ReachableApplicationMethod.csv"},{"name","Stats_Simple_ReachableApplicationMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1}), symTable, ioDirectives)->writeAll(*rel_288_Stats_Simple_ReachableApplicationMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_ReachableCast.csv"},{"name","Stats_Simple_ReachableCast"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_289_Stats_Simple_ReachableCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_ReachableVar.csv"},{"name","Stats_Simple_ReachableVar"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1}), symTable, ioDirectives)->writeAll(*rel_290_Stats_Simple_ReachableVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_ReachableVirtualMethodInvocation.csv"},{"name","Stats_Simple_ReachableVirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_291_Stats_Simple_ReachableVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Stats_Simple_VirtualCallGraphEdge.csv"},{"name","Stats_Simple_VirtualCallGraphEdge"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_292_Stats_Simple_VirtualCallGraphEdge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./ThrowPointsTo.csv"},{"name","ThrowPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_352_ThrowPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./Value_Type.csv"},{"name","Value_Type"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_368_Value_Type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"filename","./VarPointsTo.csv"},{"name","VarPointsTo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_372_VarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
void loadAll(std::string dirname) {
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Activity.facts"},{"name","_Activity"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_384_Activity);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ActualParam.facts"},{"name","_ActualParam"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({0, 1, 1}), symTable, ioDirectives)->readAll(*rel_385_ActualParam);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AndroidEntryPoint.facts"},{"name","_AndroidEntryPoint"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_386_AndroidEntryPoint);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ApplicationClass.facts"},{"name","_ApplicationClass"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_387_ApplicationClass);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ArrayType.facts"},{"name","_ArrayType"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_388_ArrayType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignBinop.facts"},{"name","_AssignBinop"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_389_AssignBinop);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignCast.facts"},{"name","_AssignCast"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_390_AssignCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignCastNull.facts"},{"name","_AssignCastNull"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_391_AssignCastNull);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignCastNumConstant.facts"},{"name","_AssignCastNumConstant"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_392_AssignCastNumConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignHeapAllocation.facts"},{"name","_AssignHeapAllocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_393_AssignHeapAllocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignInstanceOf.facts"},{"name","_AssignInstanceOf"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_394_AssignInstanceOf);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignLocal.facts"},{"name","_AssignLocal"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_395_AssignLocal);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignNull.facts"},{"name","_AssignNull"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_396_AssignNull);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignNumConstant.facts"},{"name","_AssignNumConstant"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_397_AssignNumConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignPhantomInvoke.facts"},{"name","_AssignPhantomInvoke"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1}), symTable, ioDirectives)->readAll(*rel_398_AssignPhantomInvoke);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignReturnValue.facts"},{"name","_AssignReturnValue"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_399_AssignReturnValue);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./AssignUnop.facts"},{"name","_AssignUnop"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_400_AssignUnop);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./BootstrapParam.facts"},{"name","_BootstrapParam"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({0, 1, 1}), symTable, ioDirectives)->readAll(*rel_401_BootstrapParam);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./BreakpointStmt.facts"},{"name","_BreakpointStmt"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1}), symTable, ioDirectives)->readAll(*rel_402_BreakpointStmt);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./BroadcastReceiver.facts"},{"name","_BroadcastReceiver"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_403_BroadcastReceiver);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./CallbackMethod.facts"},{"name","_CallbackMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_404_CallbackMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ClassHeap.facts"},{"name","_ClassHeap"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_405_ClassHeap);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ClassModifier.facts"},{"name","_ClassModifier"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_406_ClassModifier);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ClassType.facts"},{"name","_ClassType"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_407_ClassType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ComponentType.facts"},{"name","_ComponentType"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_408_ComponentType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ContentProvider.facts"},{"name","_ContentProvider"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_409_ContentProvider);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Dacapo.facts"},{"name","_Dacapo"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_410_Dacapo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./DirectSuperclass.facts"},{"name","_DirectSuperclass"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_411_DirectSuperclass);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./DirectSuperinterface.facts"},{"name","_DirectSuperinterface"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_412_DirectSuperinterface);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./DynamicMethodInvocation.facts"},{"name","_DynamicMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_413_DynamicMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./EmptyArray.facts"},{"name","_EmptyArray"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_414_EmptyArray);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./EnterMonitor.facts"},{"name","_EnterMonitor"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_415_EnterMonitor);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ExceptionHandler.facts"},{"name","_ExceptionHandler"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1, 0, 1, 1, 0, 0}), symTable, ioDirectives)->readAll(*rel_416_ExceptionHandler);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ExceptionHandler-Previous.facts"},{"name","_ExceptionHandler_Previous"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_417_ExceptionHandler_Previous);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ExitMonitor.facts"},{"name","_ExitMonitor"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_418_ExitMonitor);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Field.facts"},{"name","_Field"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_419_Field);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./FieldInitialValue.facts"},{"name","_FieldInitialValue"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_420_FieldInitialValue);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Field-Modifier.facts"},{"name","_Field_Modifier"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_421_Field_Modifier);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./FormalParam.facts"},{"name","_FormalParam"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({0, 1, 1}), symTable, ioDirectives)->readAll(*rel_422_FormalParam);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Goto.facts"},{"name","_Goto"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 0, 1}), symTable, ioDirectives)->readAll(*rel_423_Goto);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./If.facts"},{"name","_If"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 0, 1}), symTable, ioDirectives)->readAll(*rel_424_If);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./InterfaceType.facts"},{"name","_InterfaceType"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_425_InterfaceType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./LayoutControl.facts"},{"name","_LayoutControl"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1, 1}), symTable, ioDirectives)->readAll(*rel_426_LayoutControl);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./LoadArrayIndex.facts"},{"name","_LoadArrayIndex"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_427_LoadArrayIndex);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./LoadInstanceField.facts"},{"name","_LoadInstanceField"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_428_LoadInstanceField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./LoadStaticField.facts"},{"name","_LoadStaticField"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_429_LoadStaticField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./LookupSwitch.facts"},{"name","_LookupSwitch"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_430_LookupSwitch);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Method.facts"},{"name","_Method"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1, 1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_431_Method);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./MethodHandleConstant.facts"},{"name","_MethodHandleConstant"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_432_MethodHandleConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./MethodInvocation-Line.facts"},{"name","_MethodInvocation_Line"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0}), symTable, ioDirectives)->readAll(*rel_433_MethodInvocation_Line);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Method-DeclaresException.facts"},{"name","_Method_DeclaresException"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_434_Method_DeclaresException);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Method-Modifier.facts"},{"name","_Method_Modifier"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_435_Method_Modifier);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./NativeReturnVar.facts"},{"name","_NativeReturnVar"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_436_NativeReturnVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./NormalHeap.facts"},{"name","_NormalHeap"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_437_NormalHeap);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./PhantomInvoke.facts"},{"name","_PhantomInvoke"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1}), symTable, ioDirectives)->readAll(*rel_438_PhantomInvoke);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Return.facts"},{"name","_Return"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_439_Return);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ReturnVoid.facts"},{"name","_ReturnVoid"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1}), symTable, ioDirectives)->readAll(*rel_440_ReturnVoid);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Service.facts"},{"name","_Service"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_441_Service);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./SpecialMethodInvocation.facts"},{"name","_SpecialMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_442_SpecialMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./StaticMethodInvocation.facts"},{"name","_StaticMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_443_StaticMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./StoreArrayIndex.facts"},{"name","_StoreArrayIndex"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_444_StoreArrayIndex);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./StoreInstanceField.facts"},{"name","_StoreInstanceField"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_445_StoreInstanceField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./StoreStaticField.facts"},{"name","_StoreStaticField"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_446_StoreStaticField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./StringConstant.facts"},{"name","_StringConstant"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1}), symTable, ioDirectives)->readAll(*rel_447_StringConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./TableSwitch.facts"},{"name","_TableSwitch"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_448_TableSwitch);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Tamiflex.facts"},{"name","_Tamiflex_ReflectionData"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1, 1, 1, 1, 0}), symTable, ioDirectives)->readAll(*rel_449_Tamiflex_ReflectionData);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ThisVar.facts"},{"name","_ThisVar"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_451_ThisVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Throw.facts"},{"name","_Throw"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->readAll(*rel_452_Throw);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./ThrowNull.facts"},{"name","_ThrowNull"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1}), symTable, ioDirectives)->readAll(*rel_453_ThrowNull);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./UnsupportedInstruction.facts"},{"name","_UnsupportedInstruction"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1}), symTable, ioDirectives)->readAll(*rel_454_UnsupportedInstruction);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Var-DeclaringMethod.facts"},{"name","_Var_DeclaringMethod"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_455_Var_DeclaringMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./Var-Type.facts"},{"name","_Var_Type"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 1}), symTable, ioDirectives)->readAll(*rel_456_Var_Type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {std::map<std::string, std::string> directiveMap({{"IO","file"},{"delimiter","\t"},{"filename","./VirtualMethodInvocation.facts"},{"name","_VirtualMethodInvocation"}});
if (!dirname.empty() && directiveMap["IO"] == "file" && directiveMap["filename"].front() != '/') {directiveMap["filename"] = dirname + "/" + directiveMap["filename"];}IODirectives ioDirectives(directiveMap);
IOSystem::getInstance().getReader(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->readAll(*rel_457_VirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
void dumpInputs(std::ostream& out = std::cout) {
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_384_Activity");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_384_Activity);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_385_ActualParam");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_385_ActualParam);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_386_AndroidEntryPoint");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_386_AndroidEntryPoint);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_387_ApplicationClass");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_387_ApplicationClass);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_388_ArrayType");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_388_ArrayType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_389_AssignBinop");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_389_AssignBinop);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_390_AssignCast");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_390_AssignCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_391_AssignCastNull");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_391_AssignCastNull);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_392_AssignCastNumConstant");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_392_AssignCastNumConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_393_AssignHeapAllocation");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_393_AssignHeapAllocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_394_AssignInstanceOf");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_394_AssignInstanceOf);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_395_AssignLocal");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_395_AssignLocal);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_396_AssignNull");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_396_AssignNull);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_397_AssignNumConstant");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_397_AssignNumConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_398_AssignPhantomInvoke");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_398_AssignPhantomInvoke);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_399_AssignReturnValue");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_399_AssignReturnValue);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_400_AssignUnop");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_400_AssignUnop);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_401_BootstrapParam");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_401_BootstrapParam);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_402_BreakpointStmt");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_402_BreakpointStmt);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_403_BroadcastReceiver");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_403_BroadcastReceiver);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_404_CallbackMethod");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_404_CallbackMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_405_ClassHeap");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_405_ClassHeap);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_406_ClassModifier");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_406_ClassModifier);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_407_ClassType");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_407_ClassType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_408_ComponentType");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_408_ComponentType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_409_ContentProvider");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_409_ContentProvider);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_410_Dacapo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_410_Dacapo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_411_DirectSuperclass");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_411_DirectSuperclass);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_412_DirectSuperinterface");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_412_DirectSuperinterface);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_413_DynamicMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_413_DynamicMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_414_EmptyArray");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_414_EmptyArray);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_415_EnterMonitor");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_415_EnterMonitor);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_416_ExceptionHandler");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 0, 1, 1, 0, 0}), symTable, ioDirectives)->writeAll(*rel_416_ExceptionHandler);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_417_ExceptionHandler_Previous");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_417_ExceptionHandler_Previous);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_418_ExitMonitor");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_418_ExitMonitor);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_419_Field");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_419_Field);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_420_FieldInitialValue");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_420_FieldInitialValue);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_421_Field_Modifier");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_421_Field_Modifier);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_422_FormalParam");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_422_FormalParam);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_423_Goto");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 0, 1}), symTable, ioDirectives)->writeAll(*rel_423_Goto);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_424_If");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 0, 1}), symTable, ioDirectives)->writeAll(*rel_424_If);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_425_InterfaceType");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_425_InterfaceType);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_426_LayoutControl");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_426_LayoutControl);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_427_LoadArrayIndex");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_427_LoadArrayIndex);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_428_LoadInstanceField");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_428_LoadInstanceField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_429_LoadStaticField");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_429_LoadStaticField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_430_LookupSwitch");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_430_LookupSwitch);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_431_Method");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_431_Method);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_432_MethodHandleConstant");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_432_MethodHandleConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_433_MethodInvocation_Line");
IOSystem::getInstance().getWriter(SymbolMask({1, 0}), symTable, ioDirectives)->writeAll(*rel_433_MethodInvocation_Line);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_434_Method_DeclaresException");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_434_Method_DeclaresException);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_435_Method_Modifier");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_435_Method_Modifier);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_436_NativeReturnVar");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_436_NativeReturnVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_437_NormalHeap");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_437_NormalHeap);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_438_PhantomInvoke");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_438_PhantomInvoke);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_439_Return");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_439_Return);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_440_ReturnVoid");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_440_ReturnVoid);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_441_Service");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_441_Service);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_442_SpecialMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_442_SpecialMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_443_StaticMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_443_StaticMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_444_StoreArrayIndex");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_444_StoreArrayIndex);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_445_StoreInstanceField");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_445_StoreInstanceField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_446_StoreStaticField");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_446_StoreStaticField);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_447_StringConstant");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_447_StringConstant);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_448_TableSwitch");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_448_TableSwitch);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_449_Tamiflex_ReflectionData");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1, 1, 0}), symTable, ioDirectives)->writeAll(*rel_449_Tamiflex_ReflectionData);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_451_ThisVar");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_451_ThisVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_452_Throw");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1}), symTable, ioDirectives)->writeAll(*rel_452_Throw);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_453_ThrowNull");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_453_ThrowNull);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_454_UnsupportedInstruction");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_454_UnsupportedInstruction);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_455_Var_DeclaringMethod");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_455_Var_DeclaringMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_456_Var_Type");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_456_Var_Type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_457_VirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1, 0, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_457_VirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
void dumpOutputs(std::ostream& out = std::cout) {
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_11_ApplicationMethod");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_11_ApplicationMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_36_CallGraphEdge");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_36_CallGraphEdge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_191_OptVirtualMethodInvocationBase");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_191_OptVirtualMethodInvocationBase);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_213_Reachable");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_213_Reachable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_258_Stats_Metrics");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 0}), symTable, ioDirectives)->writeAll(*rel_258_Stats_Metrics);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_259_Stats_Simple_ApplicationConcreteMethod");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_259_Stats_Simple_ApplicationConcreteMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_260_Stats_Simple_Application_ArrayIndexPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_260_Stats_Simple_Application_ArrayIndexPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_261_Stats_Simple_Application_Cast");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_261_Stats_Simple_Application_Cast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_262_Stats_Simple_Application_EmptyVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_263_Stats_Simple_Application_InsensArrayIndexPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_264_Stats_Simple_Application_InsensInstanceFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_265_Stats_Simple_Application_InsensVarPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_265_Stats_Simple_Application_InsensVarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_266_Stats_Simple_Application_InstanceFieldPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_266_Stats_Simple_Application_InstanceFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_267_Stats_Simple_Application_NullVirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_267_Stats_Simple_Application_NullVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_268_Stats_Simple_Application_PolymorphicCallSite");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_268_Stats_Simple_Application_PolymorphicCallSite);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_269_Stats_Simple_Application_PotentiallyFailingCast");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_269_Stats_Simple_Application_PotentiallyFailingCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_270_Stats_Simple_Application_ReachableCast");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_270_Stats_Simple_Application_ReachableCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_271_Stats_Simple_Application_ReachableMethod");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_271_Stats_Simple_Application_ReachableMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_272_Stats_Simple_Application_ReachableVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_273_Stats_Simple_Application_VarPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_273_Stats_Simple_Application_VarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_274_Stats_Simple_Application_VirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_274_Stats_Simple_Application_VirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_275_Stats_Simple_AssignedVariable");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_275_Stats_Simple_AssignedVariable);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_276_Stats_Simple_EmptyVirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_276_Stats_Simple_EmptyVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_277_Stats_Simple_InsensArrayIndexPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_277_Stats_Simple_InsensArrayIndexPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_278_Stats_Simple_InsensCallGraphEdge");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_278_Stats_Simple_InsensCallGraphEdge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_279_Stats_Simple_InsensInstanceFieldPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_279_Stats_Simple_InsensInstanceFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_280_Stats_Simple_InsensReachableApplicationMethod");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_280_Stats_Simple_InsensReachableApplicationMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_281_Stats_Simple_InsensReachableVar");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_281_Stats_Simple_InsensReachableVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_282_Stats_Simple_InsensStaticFieldPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_282_Stats_Simple_InsensStaticFieldPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_283_Stats_Simple_InsensVarPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_283_Stats_Simple_InsensVarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_284_Stats_Simple_NonReachableApplicationConcreteMethod");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_284_Stats_Simple_NonReachableApplicationConcreteMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_285_Stats_Simple_NullVirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_285_Stats_Simple_NullVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_286_Stats_Simple_PolymorphicCallSite");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_286_Stats_Simple_PolymorphicCallSite);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_287_Stats_Simple_PotentiallyFailingCast");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_287_Stats_Simple_PotentiallyFailingCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_288_Stats_Simple_ReachableApplicationMethod");
IOSystem::getInstance().getWriter(SymbolMask({0, 1}), symTable, ioDirectives)->writeAll(*rel_288_Stats_Simple_ReachableApplicationMethod);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_289_Stats_Simple_ReachableCast");
IOSystem::getInstance().getWriter(SymbolMask({1, 1, 1, 1}), symTable, ioDirectives)->writeAll(*rel_289_Stats_Simple_ReachableCast);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_290_Stats_Simple_ReachableVar");
IOSystem::getInstance().getWriter(SymbolMask({0, 1}), symTable, ioDirectives)->writeAll(*rel_290_Stats_Simple_ReachableVar);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_291_Stats_Simple_ReachableVirtualMethodInvocation");
IOSystem::getInstance().getWriter(SymbolMask({1}), symTable, ioDirectives)->writeAll(*rel_291_Stats_Simple_ReachableVirtualMethodInvocation);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_292_Stats_Simple_VirtualCallGraphEdge");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_292_Stats_Simple_VirtualCallGraphEdge);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_352_ThrowPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_352_ThrowPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_368_Value_Type");
IOSystem::getInstance().getWriter(SymbolMask({1, 1}), symTable, ioDirectives)->writeAll(*rel_368_Value_Type);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
try {IODirectives ioDirectives;
ioDirectives.setIOType("stdout");
ioDirectives.setRelationName("rel_372_VarPointsTo");
IOSystem::getInstance().getWriter(SymbolMask({0, 1, 0, 1}), symTable, ioDirectives)->writeAll(*rel_372_VarPointsTo);
} catch (std::exception& e) {std::cerr << e.what();exit(1);}
}
public:
const SymbolTable &getSymbolTable() const {
return symTable;
}
};
SouffleProgram *newInstance_pts2o1h_interface(){return new Sf_pts2o1h_interface;}
SymbolTable *getST_pts2o1h_interface(SouffleProgram *p){return &reinterpret_cast<Sf_pts2o1h_interface*>(p)->symTable;}
#ifdef __EMBEDDED_SOUFFLE__
class factory_Sf_pts2o1h_interface: public souffle::ProgramFactory {
SouffleProgram *newInstance() {
return new Sf_pts2o1h_interface();
};
public:
factory_Sf_pts2o1h_interface() : ProgramFactory("pts2o1h_interface"){}
};
static factory_Sf_pts2o1h_interface __factory_Sf_pts2o1h_interface_instance;
}
#else
}
int main(int argc, char** argv)
{
souffle::CmdOptions opt(R"(pts2o1h.dl)",
R"(.)",
R"(.)",
false,
R"()",
8
);
if (!opt.parse(argc,argv)) return 1;
#if defined(_OPENMP) 
omp_set_nested(true);
#endif
souffle::Sf_pts2o1h_interface obj;
obj.loadAll(opt.getInputFileDir());
obj.run();
obj.printAll(opt.getOutputFileDir());
return 0;
}
#endif
